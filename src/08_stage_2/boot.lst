     1                                      BOOT_LOAD   equ     0x7C00          ; ブートプログラムのロード位置
     2                                  
     3                                      ORG     BOOT_LOAD                   ; ロードアドレスをアセンブラに指示
     4                                  
     5                                  ;************************************************
     6                                  ;   マクロ
     7                                  ;************************************************
     8                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
     9                                  
    10                                  ;************************************************
    11                                  ;   エントリポイント
    12                                  ;************************************************
    13                                  entry:
    14 00000000 EB58                            jmp ipl                             ; IPLへジャンプ
    15                                  
    16                                          ;----------------------------------
    17                                          ;  BPB(BIOS Parameter Block)
    18                                          ;----------------------------------
    19 00000002 90<rept>                        times   90 - ($ - $$) db 0x90       ;
    20                                  
    21                                          ;----------------------------------
    22                                          ;  IPL(Intial Program Loader)
    23                                          ;----------------------------------
    24                                  ipl:
    25 0000005A FA                              cli                                 ; // 割り込み禁止
    26                                  
    27 0000005B B80000                          mov     ax, 0x0000                  ; AX = 0x0000;
    28 0000005E 8ED8                            mov     ds, ax                      ; DS = 0x0000;
    29 00000060 8EC0                            mov     es, ax                      ; ES = 0x0000;
    30 00000062 8ED0                            mov     ss, ax                      ; SS = 0x0000;
    31 00000064 BC007C                          mov     sp, BOOT_LOAD               ; SP = 0x7C00;
    32                                  
    33 00000067 FB                              sti                                 ; // 割り込み許可
    34                                  
    35 00000068 8816[B800]                      mov     [BOOT.DRIVE], dl            ; ブートドライブを保持
    36                                  
    37                                          ;----------------------------------
    38                                          ;  文字列を表示
    39                                          ;----------------------------------
    40 0000006C 68[9800]E8480083C4-             cdecl   puts, .s0                   ; puts(.s0)
    40 00000074 02                 
    41                                  
    42                                          ;----------------------------------
    43                                          ;  次の512バイトを読み込む
    44                                          ;----------------------------------
    45 00000075 B402                            mov     ah, 0x02
    46 00000077 B001                            mov     al, 1
    47 00000079 B90200                          mov     cx, 0x0002
    48 0000007C B600                            mov     dh, 0x00
    49 0000007E 8A16[B800]                      mov     dl, [BOOT.DRIVE]
    50 00000082 BB007E                          mov     bx, 0x7C00 + 512
    51 00000085 CD13                            int     0x13
    52 00000087 730C                    .10Q:   jnc     .10E   
    53 00000089 68[A500]E82B0083C4-     .10T:   cdecl   puts, .e0
    53 00000091 02                 
    54 00000092 E8C400                          call    reboot
    55                                  .10E:
    56                                  
    57                                          ;----------------------------------
    58                                          ;  次のステージへ以降
    59                                          ;----------------------------------
    60 00000095 E96801                          jmp     stage_2
    61                                  
    62                                          ;----------------------------------
    63                                          ;  データ
    64                                          ;----------------------------------
    65 00000098 426F6F74696E672E2E-     .s0     db  "Booting...", 0x0A, 0x0D, 0
    65 000000A1 2E0A0D00           
    66 000000A5 4572726F723A736563-     .e0     db  "Error:sector read", 0
    66 000000AE 746F72207265616400 
    67                                  
    68 000000B7 00                      ALIGN 2, db 0
    69                                  BOOT:                                   ; ブートドライブに関する情報
    70 000000B8 0000                    .DRIVE:     dw  0                       ; ドライブ番号
    71                                  
    72                                  ;************************************************
    73                                  ;   モジュール
    74                                  ;************************************************
    75                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1>     ;---------------------------------
     3                              <1>     ;   スタックフレームの構築
     4                              <1>     ;---------------------------------
     5                              <1>                                         ;   BP+ 4| 文字列へのアドレス
     6 000000BA 55                  <1>     push    bp                          ;   BP+ 2| IP(戻り番地)
     7 000000BB 89E5                <1>     mov     bp, sp                      ;   BP+ 0| BP(元の値)
     8                              <1>                                         ;  ------+------
     9                              <1> 
    10                              <1>     ;---------------------------------
    11                              <1>     ;   レジスタの保存
    12                              <1>     ;---------------------------------
    13 000000BD 50                  <1>     push    ax
    14 000000BE 53                  <1>     push    bx
    15 000000BF 56                  <1>     push    si
    16                              <1> 
    17                              <1>     ;---------------------------------
    18                              <1>     ;   引数の取得
    19                              <1>     ;---------------------------------
    20 000000C0 8B7604              <1>     mov     si, [bp + 4]                ; SI = 文字列へのアドレス;
    21                              <1> 
    22                              <1>     ;---------------------------------
    23                              <1>     ;   処理の開始
    24                              <1>     ;---------------------------------
    25 000000C3 B40E                <1>     mov ah, 0x0E                        ; テレタイプ式1文字出力
    26 000000C5 BB0000              <1>     mov bx, 0x0000                      ; ページ番号と文字色を0に設定
    27 000000C8 FC                  <1>     cld                                 ; DF = 0; // アドレス加算
    28                              <1> .10L:                                   ; do
    29                              <1>                                         ; {
    30 000000C9 AC                  <1>     lodsb                               ;   AL = *SI++;
    31                              <1>                                         ;
    32 000000CA 3C00                <1>     cmp     al, 0                       ;   if(0 == AL);
    33 000000CC 7404                <1>     je      .10E                        ;     break;
    34                              <1>                                         ;
    35 000000CE CD10                <1>     int     0x10                        ;   Int10(0x0E, AL) // 文字列出力
    36 000000D0 EBF7                <1>     jmp     .10L                        ;
    37                              <1> .10E:                                   ; } while(1);
    38                              <1> 
    39                              <1>     ;---------------------------------
    40                              <1>     ;   レジスタの復帰
    41                              <1>     ;---------------------------------
    42 000000D2 5E                  <1>     pop si
    43 000000D3 5B                  <1>     pop bx
    44 000000D4 58                  <1>     pop ax
    45                              <1> 
    46                              <1>     ;---------------------------------
    47                              <1>     ;   スタックフレームの破棄
    48                              <1>     ;---------------------------------
    49 000000D5 89EC                <1>     mov sp, bp
    50 000000D7 5D                  <1>     pop bp
    51                              <1> 
    52 000000D8 C3                  <1>     ret
    76                                  %include "../modules/real/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;------------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;------------------------------------------
     5                              <1>                                                     ;     +12| BP(元の値)
     6                              <1>                                                     ;     +10| BP(元の値)
     7                              <1>                                                     ;     + 8| BP(元の値)
     8                              <1>                                                     ;     + 6| BP(元の値)
     9                              <1>                                                     ;     + 4| BP(元の値)
    10                              <1>                                                     ;     + 2| IP(戻り番地)
    11 000000D9 55                  <1>         push    bp                                  ;   BP+ 0| BP(元の値)
    12 000000DA 89E5                <1>         mov     bp, sp                              ; -------+-------------
    13                              <1> 
    14                              <1>         ;------------------------------------------
    15                              <1>         ; レジスタの保存
    16                              <1>         ;------------------------------------------
    17 000000DC 50                  <1>         push    ax
    18 000000DD 53                  <1>         push    bx
    19 000000DE 51                  <1>         push    cx
    20 000000DF 52                  <1>         push    dx
    21 000000E0 56                  <1>         push    si
    22 000000E1 57                  <1>         push    di
    23                              <1> 
    24                              <1>         ;------------------------------------------
    25                              <1>         ; 引数を取得
    26                              <1>         ;------------------------------------------
    27 000000E2 8B4604              <1>         mov     ax, [bp + 4]                        ; val   = 数値;
    28 000000E5 8B7606              <1>         mov     si, [bp + 6]                        ; dst   = バッファアドレス;
    29 000000E8 8B4E08              <1>         mov     cx, [bp + 8]                        ; size  = 残りバッファサイズ; 
    30                              <1>         
    31 000000EB 89F7                <1>         mov     di, si                              ; // バッファの最後尾
    32 000000ED 01CF                <1>         add     di, cx                              ; dst = &dst[size - 1];
    33 000000EF 4F                  <1>         dec     di                                  ;
    34                              <1> 
    35 000000F0 8B5E0C              <1>         mov     bx, word [bp + 12]                  ; flags = オプション;
    36                              <1> 
    37                              <1>         ;------------------------------------------
    38                              <1>         ; 符号付き判定
    39                              <1>         ;------------------------------------------
    40 000000F3 F7C30100            <1>         test    bx, 0b0001                          ; if(flags & 0x01)  // 符号付き
    41 000000F7 7408                <1> .10Q:   je      .10E                                ; {
    42 000000F9 83F800              <1>         cmp     ax, 0                               ;   if(val < 0)
    43 000000FC 7D03                <1> .12Q:   jge     .12E                                ;   {
    44 000000FE 83CB02              <1>         or      bx, 0b0010                          ;      flags |= 2;  // 符号表示
    45                              <1> .12E:                                               ;   }
    46                              <1> .10E:                                               ; }
    47                              <1> 
    48                              <1>         ;------------------------------------------
    49                              <1>         ; 符号出力判定
    50                              <1>         ;------------------------------------------
    51 00000101 F7C31A27            <1>         test    bx, 010010                          ; if(flags & 0x02)  // 符号出力判定
    52 00000105 7410                <1> .20Q:   je      .20E                                ; {
    53 00000107 83F800              <1>         cmp     ax, 0                               ;    if(val < 0)
    54 0000010A 7D07                <1> .22Q:   jge     .22F                                ;    {
    55 0000010C F7D8                <1>         neg     ax                                  ;       val *= -1;  // 符号判定
    56 0000010E C6042D              <1>         mov     [si], byte '-'                      ;       *dst = '-'; // 符号表示
    57 00000111 EB03                <1>         jmp     .22E                                ;    }
    58                              <1> .22F:                                               ;    else
    59                              <1>                                                     ;    {
    60 00000113 C6042B              <1>         mov     [si], byte '+'                      ;       *dst = '+';    // 符号表示
    61                              <1> .22E:                                               ;    }
    62 00000116 49                  <1>         dec     cx                                  ;    size--;           // 残りバッファサイズの減算
    63                              <1> .20E:                                               ; }
    64                              <1> 
    65                              <1>         ;------------------------------------------
    66                              <1>         ; ASCII変換
    67                              <1>         ;------------------------------------------
    68 00000117 8B5E0A              <1>         mov     bx, [bp + 10]                       ; BX = 基数;
    69                              <1> .30L:                                               ; do
    70                              <1>                                                     ; {
    71 0000011A BA0000              <1>         mov     dx, 0                               ;
    72 0000011D F7F3                <1>         div     bx                                  ;   DX = DX:AX % 基数;
    73                              <1>                                                     ;   AX = DX:AX / 基数;
    74                              <1>                                                     ;
    75 0000011F 89D6                <1>         mov     si, dx                              ;   // テーブル参照
    76 00000121 8A94[4901]          <1>         mov     dl, byte [.ascii + si]              ;   DL = ASCII[DX];
    77                              <1>                                                     ;
    78 00000125 8815                <1>         mov     [di], dl                            ;   *dst = DL;
    79 00000127 4F                  <1>         dec     di                                  ;   dst--;
    80                              <1>                                                     ;
    81 00000128 83F800              <1>         cmp     ax, 0                               ;
    82 0000012B E0ED                <1>         loopnz  .30L                                ; } while(AX);
    83                              <1> .30E:
    84                              <1> 
    85                              <1>         ;------------------------------------------
    86                              <1>         ; 空欄を埋める
    87                              <1>         ;------------------------------------------
    88 0000012D 83F900              <1>         cmp     cx, 0                               ; if(size)
    89 00000130 740D                <1> .40Q:   je      .40E                                ; {
    90 00000132 B020                <1>         mov     al, ' '                             ;   AL = ' ';   // ' 'で埋める(デフォルト値)
    91 00000134 837E0C04            <1>         cmp     [bp + 12], word 0b0100              ;   if(flags & 0x04)
    92 00000138 7502                <1> .42Q:   jne     .42E                                ;   {
    93 0000013A B030                <1>         mov     al, '0'                             ;       AL = '0';
    94                              <1> .42E:                                               ;   }
    95 0000013C FD                  <1>         std                                         ;   // DF = 1(-方向)
    96 0000013D F3AA                <1>         rep     stosb                               ;   while(--CX) *DI -- = ' ';
    97                              <1> .40E:                                               ; }
    98                              <1> 
    99                              <1>         ;------------------------------------------
   100                              <1>         ; レジスタの復帰
   101                              <1>         ;------------------------------------------
   102 0000013F 5F                  <1>         pop     di
   103 00000140 5E                  <1>         pop     si
   104 00000141 5A                  <1>         pop     dx
   105 00000142 59                  <1>         pop     cx
   106 00000143 5B                  <1>         pop     bx
   107 00000144 58                  <1>         pop     ax
   108                              <1> 
   109                              <1>         ;------------------------------------------
   110                              <1>         ; スタックフレームの破棄
   111                              <1>         ;------------------------------------------
   112 00000145 89EC                <1>         mov     sp, bp
   113 00000147 5D                  <1>         pop     bp
   114                              <1> 
   115 00000148 C3                  <1>         ret
   116                              <1> 
   117 00000149 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"                  ; 変換テーブル
   117 00000152 39414243444546      <1>
    77                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1>         ;------------------------------------
     3                              <1>         ; メッセージを表示
     4                              <1>         ;------------------------------------
     5                              <1> 
     6 00000159 68[7501]E85BFF83C4- <1>         cdecl   puts, .s0
     6 00000161 02                  <1>
     7                              <1> 
     8                              <1>         ;------------------------------------
     9                              <1>         ; キー入力待ち
    10                              <1>         ;------------------------------------
    11                              <1> .10L:
    12                              <1> 
    13 00000162 B410                <1>         mov     ah, 0x10
    14 00000164 CD16                <1>         int     0x16
    15                              <1> 
    16 00000166 3C20                <1>         cmp     al, ' '
    17 00000168 75F8                <1>         jne     .10L
    18                              <1> 
    19                              <1>         ;------------------------------------
    20                              <1>         ; 開業を出力
    21                              <1>         ;------------------------------------
    22 0000016A 68[9301]E84AFF83C4- <1>         cdecl   puts, .s1
    22 00000172 02                  <1>
    23                              <1> 
    24                              <1>         ;------------------------------------
    25                              <1>         ; 再起動
    26                              <1>         ;------------------------------------
    27 00000173 CD19                <1>         int     0x19
    28                              <1> 
    29                              <1>         ;------------------------------------
    30                              <1>         ; 文字列データ
    31                              <1>         ;------------------------------------
    32 00000175 0A0D50757368205350- <1> .s0     db  0x0A, 0x0D, "Push SPACE key to reboot...", 0
    32 0000017E 414345206B65792074- <1>
    32 00000187 6F207265626F6F742E- <1>
    32 00000190 2E2E00              <1>
    33 00000193 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    78                                  
    79                                  ;************************************************
    80                                  ;   ブートフラグ(先頭512バイトの終了)
    81                                  ;************************************************
    82 00000198 00<rept>                    times   510 - ($ - $$) db 0x00
    83 000001FE 55AA                        db  0x55, 0xAA
    84                                  
    85                                  ;************************************************
    86                                  ;   ブート処理の第2ステージ
    87                                  ;************************************************
    88                                  stage_2:
    89                                          ;----------------------------------
    90                                          ;  文字列を表示
    91                                          ;----------------------------------
    92 00000200 68[0B02]E8B4FE83C4-             cdecl   puts, .s0
    92 00000208 02                 
    93                                          
    94                                          ;----------------------------------
    95                                          ;  処理の終了
    96                                          ;----------------------------------
    97 00000209 EBFE                            jmp     $
    98                                  
    99                                          ;----------------------------------
   100                                          ;  データ
   101                                          ;----------------------------------
   102 0000020B 326E64207374656765-     .s0     db  "2nd stege...", 0x0A, 0x0D, 0
   102 00000214 2E2E2E0A0D00       
   103                                  
   104                                  ;************************************************
   105                                  ;   パディング(このファイルは8Kバイトとする)
   106                                  ;************************************************
   107 0000021A 00<rept>                        times (1024 * 8) - ($ - $$)     db  0   ; 8Kバイト
