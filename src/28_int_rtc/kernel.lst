     1                                  %include "../include/define.s"
     1                              <1>     BOOT_LOAD       equ     0x7C00
     2                              <1>     BOOT_END        equ     (BOOT_LOAD + BOOT_SIZE)
     3                              <1> 
     4                              <1>     BOOT_SIZE       equ     (1024 * 8)
     5                              <1>     SECT_SIZE       equ     (512)
     6                              <1>     BOOT_SECT       equ     (BOOT_SIZE / SECT_SIZE)
     7                              <1> 
     8                              <1>     E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>     KERNEL_LOAD     equ     0x0010_1000
    11                              <1>     KERNEL_SIZE     equ     (1024 * 8)      ; カーネルサイズ
    12                              <1>     KERNEL_SECT     equ     (KERNEL_SIZE / SECT_SIZE)
    13                              <1> 
    14                              <1>     VECT_BASE       equ     0x0010_0000     ; 0010_0000:0010_07FF
     2                                  %include "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro  set_vect 1-*
    18                              <1>     push    eax
    19                              <1>     push    edi
    20                              <1> 
    21                              <1>     mov     edi, VECT_BASE + (%1 * 8)
    22                              <1>     mov     eax, %2
    23                              <1> 
    24                              <1>     mov     [edi + 0], ax
    25                              <1>     shr     eax, 16
    26                              <1>     mov     [edi + 6], ax
    27                              <1> 
    28                              <1>     pop     edi
    29                              <1>     pop     eax
    30                              <1> %endmacro
    31                              <1> 
    32                              <1> %macro  outp 2
    33                              <1>     mov     al, %2
    34                              <1>     out     %1, al
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> struc drive
    38 00000000 <res 00000002>      <1>         .no     resw    1           ; ドライブ番号
    39 00000002 <res 00000002>      <1>         .cyln   resw    1           ; シリンダ
    40 00000004 <res 00000002>      <1>         .head   resw    1           ; ヘッド
    41 00000006 <res 00000002>      <1>         .sect   resw    1           ; セクタ
    42                              <1> endstruc
     3                                  
     4                                          ORG     KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  ;************************************************
     8                                  ;   エントリポイント
     9                                  ;************************************************
    10                                  kernel:
    11                                          ;----------------------------------
    12                                          ; フォントアドレスを取得
    13                                          ;----------------------------------
    14 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE      ; ESI = 0x7C00 + 512;
    15 00000005 0FB706                          movzx   eax, word [esi + 0]             ; EAX = [ESI + 0]; // セグメント
    16 00000008 0FB75E02                        movzx   ebx, word [esi + 2]             ; EBX = [ESI + 2]; // オフセット
    17 0000000C C1E004                          shl     eax, 4                          ; EAX <<= 4;
    18 0000000F 01D8                            add     eax, ebx                        ; EAX += EBX;
    19 00000011 A3[C4000000]                    mov     [FONT_ADR], eax                 ; FONT_ADR[0] = EAX;
    20                                          
    21                                          ;----------------------------------
    22                                          ; 初期化
    23                                          ;----------------------------------
    24 00000016 E83B060000                      cdecl   init_int
    25 0000001B E8BB070000                      cdecl   init_pic
    26                                  
    27                                          set_vect        0x00, int_zero_div
    27 00000020 50                  <1>  push eax
    27 00000021 57                  <1>  push edi
    27                              <1> 
    27 00000022 BF00001000          <1>  mov edi, VECT_BASE + (%1 * 8)
    27 00000027 B8[BD070000]        <1>  mov eax, %2
    27                              <1> 
    27 0000002C 668907              <1>  mov [edi + 0], ax
    27 0000002F C1E810              <1>  shr eax, 16
    27 00000032 66894706            <1>  mov [edi + 6], ax
    27                              <1> 
    27 00000036 5F                  <1>  pop edi
    27 00000037 58                  <1>  pop eax
    28                                          set_vect        0x28, int_rtc
    28 00000038 50                  <1>  push eax
    28 00000039 57                  <1>  push edi
    28                              <1> 
    28 0000003A BF40011000          <1>  mov edi, VECT_BASE + (%1 * 8)
    28 0000003F B8[06080000]        <1>  mov eax, %2
    28                              <1> 
    28 00000044 668907              <1>  mov [edi + 0], ax
    28 00000047 C1E810              <1>  shr eax, 16
    28 0000004A 66894706            <1>  mov [edi + 6], ax
    28                              <1> 
    28 0000004E 5F                  <1>  pop edi
    28 0000004F 58                  <1>  pop eax
    29                                  
    30                                          ;----------------------------------
    31                                          ; デバイスの割り込み許可
    32                                          ;----------------------------------
    33 00000050 6A10E8DA0700006683-             cdecl   rtc_int_en, 0x10
    33 00000059 C404               
    34                                  
    35                                          ;---------------------------------------
    36                                          ; IMR(割り込みマスクレジスタ)の設定
    37                                          ;---------------------------------------
    38                                          outp    0x21, 0b1111_1011
    38 0000005B B0FB                <1>  mov al, %2
    38 0000005D E621                <1>  out %1, al
    39                                          outp    0xA1, 0b1111_1110
    39 0000005F B0FE                <1>  mov al, %2
    39 00000061 E6A1                <1>  out %1, al
    40                                  
    41                                          ;---------------------------------------
    42                                          ; CPUの割り込み許可
    43                                          ;---------------------------------------
    44 00000063 FB                              sti
    45                                  
    46                                          ;---------------------------------------
    47                                          ; フォントの一覧表示
    48                                          ;---------------------------------------
    49 00000064 6A0D6A3FE8D6010000-             cdecl   draw_font, 63, 13               ; // フォントの一覧表示
    49 0000006D 6683C408           
    50 00000071 6A046A3FE857020000-             cdecl   draw_color_bar, 63, 4           ; // カラーバーの表示
    50 0000007A 6683C408           
    51                                  
    52                                          ;---------------------------------------
    53                                          ; 文字列の表示
    54                                          ;---------------------------------------
    55 0000007E 68[B1000000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    55 00000086 00006A0E6A19E8F701-
    55 0000008F 00006683C410       
    56                                  
    57                                          ;---------------------------------------
    58                                          ; 時刻の表示
    59                                          ;---------------------------------------
    60                                  .10L:
    61 00000095 A1[C8000000]                    mov     eax, [RTC_TIME]
    62 0000009A 5068000700006A006A-             cdecl   draw_time, 72, 0, 0x0700, eax
    62 000000A3 48E8310500006683C4-
    62 000000AC 10                 
    63                                  
    64 000000AD EBE6                            jmp     .10L
    65                                  
    66                                          ;----------------------------------
    67                                          ; 処理の終了
    68                                          ;----------------------------------
    69 000000AF EBFE                            jmp     $                               ; while(1);     // 無限ループ
    70                                  
    71 000000B1 2048656C6C6F2C206B-     .s0:    db  " Hello, kernel! ", 0
    71 000000BA 65726E656C212000   
    72                                  
    73 000000C2 00<rept>                ALIGN 4, db 0
    74 000000C4 00000000                FONT_ADR:       dd  0
    75 000000C8 00000000                RTC_TIME:       dd  0
    76                                  
    77                                  ;************************************************
    78                                  ;   モジュール
    79                                  ;************************************************
    80                                  %include  "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5                              <1>                                             ;    + 8| プレーン (インデックス)
     6                              <1>                                             ; ------+---------------
     7 000000CC 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
     8 000000CD 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
     9                              <1>                                             ;-------+---------------
    10                              <1> 
    11                              <1>         ;---------------------------------
    12                              <1>         ; レジスタの保存
    13                              <1>         ;---------------------------------
    14 000000CF 50                  <1>         push    eax
    15 000000D0 52                  <1>         push    edx
    16                              <1> 
    17                              <1>         ;---------------------------------
    18                              <1>         ; 読み込みプレーンの選択
    19                              <1>         ;---------------------------------
    20 000000D1 8A6508              <1>         mov     ah, [ebp + 8]
    21 000000D4 80E403              <1>         and     ah, 0x03
    22 000000D7 B004                <1>         mov     al, 0x04
    23 000000D9 66BACE03            <1>         mov     dx, 0x03CE
    24 000000DD 66EF                <1>         out     dx, ax
    25                              <1> 
    26                              <1>         ;---------------------------------
    27                              <1>         ; レジスタの復帰
    28                              <1>         ;---------------------------------
    29 000000DF 5A                  <1>         pop     edx
    30 000000E0 58                  <1>         pop     eax
    31                              <1> 
    32                              <1>         ;---------------------------------
    33                              <1>         ; スタックフレームの破棄
    34                              <1>         ;---------------------------------
    35 000000E1 89EC                <1>         mov     esp, ebp
    36 000000E3 5D                  <1>         pop     ebp
    37                              <1> 
    38 000000E4 C3                  <1>         ret
    39                              <1> 
    40                              <1> vga_set_write_plane:
    41                              <1>         ;---------------------------------
    42                              <1>         ; スタックフレームの構築
    43                              <1>         ;---------------------------------
    44                              <1>                                             ;    + 8| プレーン (ビット指定)
    45                              <1>                                             ; ------+---------------
    46 000000E5 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
    47 000000E6 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
    48                              <1>                                             ;-------+---------------
    49                              <1> 
    50                              <1>         ;---------------------------------
    51                              <1>         ; レジスタの保存
    52                              <1>         ;---------------------------------
    53 000000E8 50                  <1>         push    eax
    54 000000E9 52                  <1>         push    edx
    55                              <1> 
    56                              <1>         ;---------------------------------
    57                              <1>         ; 書き込みプレーンの選択
    58                              <1>         ;---------------------------------
    59 000000EA 8A6508              <1>         mov     ah, [ebp + 8]
    60 000000ED 80E40F              <1>         and     ah, 0x0F
    61 000000F0 B002                <1>         mov     al, 0x02
    62 000000F2 66BAC403            <1>         mov     dx, 0x03C4
    63 000000F6 66EF                <1>         out     dx, ax
    64                              <1> 
    65                              <1>         ;---------------------------------
    66                              <1>         ; レジスタの復帰
    67                              <1>         ;---------------------------------
    68 000000F8 5A                  <1>         pop     edx
    69 000000F9 58                  <1>         pop     eax
    70                              <1> 
    71                              <1>         ;---------------------------------
    72                              <1>         ; スタックフレームの破棄
    73                              <1>         ;---------------------------------
    74 000000FA 89EC                <1>         mov     esp, ebp
    75 000000FC 5D                  <1>         pop     ebp
    76                              <1> 
    77 000000FD C3                  <1>         ret
    78                              <1> 
    79                              <1> vram_font_copy:
    80                              <1>         ;---------------------------------
    81                              <1>         ; スタックフレームの構築
    82                              <1>         ;---------------------------------
    83                              <1>                                             ;    +20| 描画色
    84                              <1>                                             ;    +16| プレーン(ビット指定)
    85                              <1>                                             ;    +12| VRAMアドレス
    86                              <1>                                             ;    + 8| フォントアドレス
    87                              <1>                                             ; ------+---------------
    88 000000FE 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
    89 000000FF 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
    90                              <1>                                             ; ------+---------------
    91                              <1> 
    92                              <1>         ;---------------------------------
    93                              <1>         ; レジスタの保存
    94                              <1>         ;---------------------------------
    95 00000101 50                  <1>         push    eax
    96 00000102 53                  <1>         push    ebx
    97 00000103 51                  <1>         push    ecx
    98 00000104 52                  <1>         push    edx
    99 00000105 56                  <1>         push    esi
   100 00000106 57                  <1>         push    edi
   101                              <1> 
   102                              <1>         ;---------------------------------
   103                              <1>         ; 処理の開始
   104                              <1>         ;---------------------------------
   105 00000107 8B7508              <1>         mov     esi, [ebp + 8]
   106 0000010A 8B7D0C              <1>         mov     edi, [ebp +12]
   107 0000010D 0FB64510            <1>         movzx   eax, byte [ebp +16]
   108 00000111 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   109                              <1> 
   110 00000115 84C7                <1>         test    bh, al
   111 00000117 0F94C6              <1>         setz    dh
   112 0000011A FECE                <1>         dec     dh
   113                              <1> 
   114 0000011C 84C3                <1>         test    bl, al
   115 0000011E 0F94C2              <1>         setz    dl
   116 00000121 FECA                <1>         dec     dl
   117                              <1> 
   118                              <1>         ;---------------------------------
   119                              <1>         ; 16ドットフォントのコピー
   120                              <1>         ;---------------------------------
   121 00000123 FC                  <1>         cld
   122                              <1> 
   123 00000124 B910000000          <1>         mov     ecx, 16
   124                              <1> .10L:
   125                              <1>         ;---------------------------------
   126                              <1>         ; フォントマスクの作成
   127                              <1>         ;---------------------------------
   128 00000129 AC                  <1>         lodsb
   129 0000012A 88C4                <1>         mov     ah, al
   130 0000012C F6D4                <1>         not     ah
   131                              <1> 
   132                              <1>         ;---------------------------------
   133                              <1>         ; 前景色
   134                              <1>         ;---------------------------------
   135                              <1> 
   136 0000012E 20D0                <1>         and     al, dl
   137                              <1> 
   138                              <1>         ;---------------------------------
   139                              <1>         ; 背景色
   140                              <1>         ;---------------------------------
   141 00000130 F7C310000000        <1>         test    ebx, 0x0010
   142 00000136 7404                <1>         jz      .11F
   143 00000138 2227                <1>         and     ah, [edi]
   144 0000013A EB02                <1>         jmp     .11E
   145                              <1> .11F:
   146                              <1> 
   147 0000013C 20F4                <1>         and     ah, dh
   148                              <1> .11E:
   149                              <1> 
   150                              <1>         ;---------------------------------
   151                              <1>         ; 前景色と背景色を合成
   152                              <1>         ;---------------------------------
   153 0000013E 08E0                <1>         or      al, ah
   154                              <1> 
   155                              <1>         ;---------------------------------
   156                              <1>         ; 新しい値を出力
   157                              <1>         ;---------------------------------
   158 00000140 8807                <1>         mov     [edi], al
   159                              <1> 
   160 00000142 83C750              <1>         add     edi, 80
   161 00000145 E2E2                <1>         loop    .10L
   162                              <1> .10E:
   163                              <1> 
   164                              <1>         ;---------------------------------
   165                              <1>         ; レジスタの復帰
   166                              <1>         ;---------------------------------
   167 00000147 5F                  <1>         pop     edi
   168 00000148 5E                  <1>         pop     esi
   169 00000149 5A                  <1>         pop     edx
   170 0000014A 59                  <1>         pop     ecx
   171 0000014B 5B                  <1>         pop     ebx
   172 0000014C 58                  <1>         pop     eax
   173                              <1> 
   174                              <1>         ;---------------------------------
   175                              <1>         ; スタックフレームの破棄
   176                              <1>         ;---------------------------------
   177 0000014D 89EC                <1>         mov     esp, ebp
   178 0000014F 5D                  <1>         pop     ebp
   179                              <1> 
   180 00000150 C3                  <1>         ret
   181                              <1> 
   182                              <1> vram_bit_copy:
   183                              <1>         ;---------------------------------------
   184                              <1>         ; スタックフレームの構築
   185                              <1>         ;---------------------------------------
   186                              <1>                                                 ; EBP+20| 色（背景/前景色）
   187                              <1>                                                 ; EBP+16| プレーン（ビット指定）
   188                              <1>                                                 ; EBP+12| VRAMアドレス
   189                              <1>                                                 ; EBP+ 8| 出力ビットパターン
   190                              <1> 	                                        ; ------+----------------
   191 00000151 55                  <1>         push    ebp				; EBP+ 4| EIP（戻り番地）
   192 00000152 89E5                <1>         mov     ebp, esp			; EBP+ 0| EBP（元の値）
   193                              <1> 						; ------+----------------
   194                              <1> 
   195                              <1>         ;---------------------------------------
   196                              <1>         ; レジスタの保存
   197                              <1>         ;---------------------------------------
   198 00000154 50                  <1>         push    eax
   199 00000155 53                  <1>         push    ebx
   200 00000156 57                  <1>         push    edi
   201                              <1> 
   202                              <1>         ;---------------------------------------
   203                              <1>         ; 処理の開始
   204                              <1>         ;---------------------------------------
   205 00000157 8B7D0C              <1>         mov     edi, [ebp + 12]                 ; EDI = VRAMアドレス;
   206 0000015A 0FB64510            <1>         movzx   eax, byte [ebp + 16]            ; EAX = プレーン(ビット指定);
   207 0000015E 0FB75D14            <1>         movzx   ebx, word [ebp + 20]            ; EBX = 表示色;
   208                              <1> 
   209 00000162 84C3                <1>         test    bl, al                          ; ZF = (前景色 & プレーン);
   210 00000164 0F94C3              <1>         setz    bl                              ; BL = ZF ? 0x01 : 0x00;
   211 00000167 FECB                <1>         dec     bl                              ; BL--; // 0x00 or 0xFF
   212                              <1> 
   213                              <1>         ;---------------------------------------
   214                              <1>         ;  マスクデータの作成
   215                              <1>         ;---------------------------------------
   216 00000169 8A4508              <1>         mov     al, [ebp + 8]                   ; AL = 出力ビットパターン;
   217 0000016C 88C4                <1>         mov     ah, al                          ; AH ~= AL;     // !出力ビットパターン(ビット反転)
   218 0000016E F6D4                <1>         not     ah
   219                              <1> 
   220                              <1>         ;---------------------------------------
   221                              <1>         ; 現在地の出力を取得
   222                              <1>         ;---------------------------------------
   223 00000170 2227                <1>         and     ah, [edi]                       ; AH = 現在地 & !出力ビットパターン;
   224 00000172 20D8                <1>         and     al, bl                          ; AL = 表示色 &  出力ビットパターン;
   225 00000174 08E0                <1>         or      al, ah                          ; AL |= AH;
   226                              <1> 
   227                              <1>         ;---------------------------------------
   228                              <1>         ; 新しい値を出力
   229                              <1>         ;---------------------------------------
   230 00000176 8807                <1>         mov     [edi], al                       ; [EDI] = BL;   // プレーンに書き込む
   231                              <1> 
   232                              <1>         ;---------------------------------------
   233                              <1>         ; レジスタの復帰
   234                              <1>         ;---------------------------------------
   235 00000178 5F                  <1>         pop     edi
   236 00000179 5B                  <1>         pop     ebx
   237 0000017A 58                  <1>         pop     eax
   238                              <1> 
   239                              <1>         ;---------------------------------------
   240                              <1>         ; スタックフレームの破棄
   241                              <1>         ;---------------------------------------
   242 0000017B 89EC                <1>         mov     esp, ebp
   243 0000017D 5D                  <1>         pop     ebp
   244                              <1> 
   245 0000017E C3                  <1>         ret
    81                                  %include  "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1>     ;---------------------------------
     3                              <1>     ;   スタックフレームの構築
     4                              <1>     ;---------------------------------
     5                              <1>                                         ;     +20| 文字
     6                              <1>                                         ;     +16| 描画色
     7                              <1>                                         ;     +12| 行
     8                              <1>                                         ;     + 8| 列
     9                              <1>                                         ;  ------|------
    10 0000017F 55                  <1>     push    ebp                         ;  EBP+ 4| IP(戻り番地)
    11 00000180 89E5                <1>     mov     ebp, esp                    ;  EBP+ 0| BP(元の値)
    12                              <1>                                         ;  ------+------
    13                              <1> 
    14                              <1>     ;---------------------------------
    15                              <1>     ; レジスタの保存
    16                              <1>     ;---------------------------------
    17 00000182 50                  <1>     push    eax
    18 00000183 53                  <1>     push    ebx
    19 00000184 51                  <1>     push    ecx
    20 00000185 52                  <1>     push    edx
    21 00000186 56                  <1>     push    esi
    22 00000187 57                  <1>     push    edi
    23                              <1> 
    24                              <1>     ;---------------------------------------
    25                              <1>     ; テストアンドセット
    26                              <1>     ;---------------------------------------
    27                              <1> %ifdef	USE_TEST_AND_SET
    28                              <1>     cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    29                              <1> %endif
    30                              <1> 
    31                              <1>     ;---------------------------------------
    32                              <1>     ; コピー元フォントアドレスを設定
    33                              <1>     ;---------------------------------------
    34 00000188 0FB67514            <1>     movzx   esi, byte [ebp + 20]            ; CL  = 文字コード;
    35 0000018C C1E604              <1>     shl     esi, 4							; CL *= 16; // 1文字16バイト
    36 0000018F 0335[C4000000]      <1>     add     esi, [FONT_ADR]					; ESI = フォントアドレス;
    37                              <1> 
    38                              <1>     ;---------------------------------------
    39                              <1>     ; コピー先アドレスを取得
    40                              <1>     ; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    41                              <1>     ;---------------------------------------
    42 00000195 8B7D0C              <1>     mov     edi, [ebp + 12]                 ; Y（行）
    43 00000198 C1E708              <1>     shl     edi, 8							; EDI = Y * 256;
    44 0000019B 8DBCBF00000A00      <1>     lea     edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
    45 000001A2 037D08              <1>     add     edi, [ebp + 8]					; X（列）
    46                              <1> 
    47                              <1>     ;---------------------------------------
    48                              <1>     ; 1文字分のフォントを出力
    49                              <1>     ;---------------------------------------
    50 000001A5 0FB75D10            <1>     movzx   ebx, word [ebp + 16]            ; // 表示色
    51                              <1> 
    52 000001A9 6A03E81CFFFFFF6683- <1>     cdecl   vga_set_read_plane, 0x03		; // 書き込みプレーン：輝度(I)
    52 000001B2 C404                <1>
    53 000001B4 6A08E82AFFFFFF6683- <1>     cdecl   vga_set_write_plane, 0x08		; // 読み込みプレーン：輝度(I)
    53 000001BD C404                <1>
    54 000001BF 536A085756E835FFFF- <1>     cdecl   vram_font_copy, esi, edi, 0x08, ebx
    54 000001C8 FF6683C410          <1>
    55                              <1> 
    56 000001CD 6A02E8F8FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x02		; // 書き込みプレーン：赤(R)
    56 000001D6 C404                <1>
    57 000001D8 6A04E806FFFFFF6683- <1>     cdecl   vga_set_write_plane, 0x04		; // 読み込みプレーン：赤(R)
    57 000001E1 C404                <1>
    58 000001E3 536A045756E811FFFF- <1>     cdecl   vram_font_copy, esi, edi, 0x04, ebx
    58 000001EC FF6683C410          <1>
    59                              <1> 
    60 000001F1 6A01E8D4FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x01		; // 書き込みプレーン：緑(G)
    60 000001FA C404                <1>
    61 000001FC 6A02E8E2FEFFFF6683- <1>     cdecl   vga_set_write_plane, 0x02		; // 読み込みプレーン：緑(G)
    61 00000205 C404                <1>
    62 00000207 536A025756E8EDFEFF- <1>     cdecl   vram_font_copy, esi, edi, 0x02, ebx
    62 00000210 FF6683C410          <1>
    63                              <1> 
    64 00000215 6A00E8B0FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x00		; // 書き込みプレーン：青(B)
    64 0000021E C404                <1>
    65 00000220 6A01E8BEFEFFFF6683- <1>     cdecl   vga_set_write_plane, 0x01		; // 読み込みプレーン：青(B)
    65 00000229 C404                <1>
    66 0000022B 536A015756E8C9FEFF- <1>     cdecl   vram_font_copy, esi, edi, 0x01, ebx
    66 00000234 FF6683C410          <1>
    67                              <1> 
    68                              <1> %ifdef	USE_TEST_AND_SET
    69                              <1>     ;---------------------------------------
    70                              <1>     ; テストアンドセット
    71                              <1>     ;---------------------------------------
    72                              <1>     mov		[IN_USE], dword 0				; 変数のクリア
    73                              <1> %endif
    74                              <1> 
    75                              <1>     ;---------------------------------
    76                              <1>     ; レジスタの復帰
    77                              <1>     ;---------------------------------
    78 00000239 5F                  <1>     pop     edi
    79 0000023A 5E                  <1>     pop     esi
    80 0000023B 5A                  <1>     pop     edx
    81 0000023C 59                  <1>     pop     ecx
    82 0000023D 5B                  <1>     pop     ebx
    83 0000023E 58                  <1>     pop     eax
    84                              <1> 
    85                              <1>     ;---------------------------------
    86                              <1>     ; スタックフレームの破棄
    87                              <1>     ;---------------------------------
    88 0000023F 89EC                <1>     mov     esp, ebp
    89 00000241 5D                  <1>     pop     ebp
    90                              <1> 
    91 00000242 C3                  <1>     ret
    92                              <1> 
    93                              <1> %ifdef USE_TEST_AND_SET
    94                              <1> ALIGN 4, db 0
    95                              <1> IN_USE:	dd	0
    96                              <1> %endif
    82                                  %include  "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; EBP+12| Y（行）
     6                              <1> 												; EBP+ 8| X（列）
     7                              <1> 												; ---------------
     8 00000243 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
     9 00000244 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    10                              <1> 												; ---------------
    11                              <1> 
    12                              <1>         ;----------------------------------
    13                              <1>         ; レジスタの保存
    14                              <1>         ;----------------------------------
    15 00000246 50                  <1>         push    eax
    16 00000247 53                  <1>         push    ebx
    17 00000248 51                  <1>         push    ecx
    18 00000249 52                  <1>         push    edx
    19 0000024A 56                  <1>         push    esi
    20 0000024B 57                  <1>         push    edi
    21                              <1> 
    22                              <1>         ;----------------------------------
    23                              <1>         ; 表示位置
    24                              <1>         ;----------------------------------
    25 0000024C 8B7508              <1>         mov     esi, [ebp + 8]					; ESI = X（列）
    26 0000024F 8B7D0C              <1>         mov     edi, [ebp +12]					; EDI = Y（行）
    27                              <1> 
    28                              <1>         ;----------------------------------
    29                              <1>         ; フォント一覧を表示
    30                              <1>         ;----------------------------------
    31 00000252 B900000000          <1>         mov     ecx, 0							; for (ECX = 0;
    32 00000257 81F900010000        <1> .10L:   cmp     ecx, 256						;      ECX < 256;
    33 0000025D 731F                <1>         jae     .10E                            ;
    34                              <1> 												;      ECX++)
    35                              <1> 												; {
    36                              <1> 												;   // 桁位置の計算
    37 0000025F 89C8                <1>         mov     eax, ecx						;   EAX  = ECX;
    38 00000261 83E00F              <1>         and     eax, 0x0F						;   EAX &= 0x0F
    39 00000264 01F0                <1>         add     eax, esi						;   EAX += X;
    40                              <1>                                                 ;
    41                              <1> 												;   // 行位置の計算
    42 00000266 89CB                <1>         mov     ebx, ecx						;   EBX  = ECX;
    43 00000268 C1EB04              <1>         shr     ebx, 4							;   EBX /= 16
    44 0000026B 01FB                <1>         add     ebx, edi						;   EBX += Y;
    45                              <1> 
    46 0000026D 516A075350E808FFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx	;   draw_char();
    46 00000276 FF6683C410          <1>
    47                              <1> 
    48 0000027B 41                  <1>         inc     ecx								;   // for (... ECX++)
    49 0000027C EBD9                <1>         jmp     .10L                            ;
    50                              <1> .10E:                                           ; }
    51                              <1> 
    52                              <1> 
    53                              <1> 
    54                              <1>         ;----------------------------------
    55                              <1>         ; レジスタの復帰
    56                              <1>         ;----------------------------------
    57 0000027E 5F                  <1>         pop     edi
    58 0000027F 5E                  <1>         pop     esi
    59 00000280 5A                  <1>         pop     edx
    60 00000281 59                  <1>         pop     ecx
    61 00000282 5B                  <1>         pop     ebx
    62 00000283 58                  <1>         pop     eax
    63                              <1> 
    64                              <1>         ;----------------------------------
    65                              <1>         ; スタックフレームの破棄
    66                              <1>         ;----------------------------------
    67 00000284 89EC                <1>         mov     esp, ebp
    68 00000286 5D                  <1>         pop     ebp
    69                              <1> 
    70 00000287 C3                  <1>         ret
    83                                  %include  "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5                              <1>                                             ;     +20| 文字列のアドレス
     6                              <1>                                             ;     +16| 色
     7                              <1>                                             ;     +12| 行
     8                              <1>                                             ;     + 8| 列
     9                              <1>                                             ; -------+--------------
    10 00000288 55                  <1>         push    ebp                         ;     + 4| EIP (戻り番地)
    11 00000289 89E5                <1>         mov     ebp, esp                    ; EBP + 0| EBP (元の値)
    12                              <1> 
    13                              <1>         ;---------------------------------
    14                              <1>         ; レジスタの保存
    15                              <1>         ;---------------------------------
    16 0000028B 50                  <1> 		push	eax
    17 0000028C 53                  <1> 		push	ebx
    18 0000028D 51                  <1> 		push	ecx
    19 0000028E 52                  <1> 		push	edx
    20 0000028F 56                  <1> 		push	esi
    21                              <1> 
    22                              <1>         ;---------------------------------
    23                              <1>         ; 文字列の表示
    24                              <1>         ;---------------------------------
    25 00000290 8B4D08              <1>         mov     ecx, [ebp + 8]              ; ECX = 列;
    26 00000293 8B550C              <1>         mov     edx, [ebp + 12]             ; EDX = 行;
    27 00000296 0FB75D10            <1>         movzx   ebx, word [ebp + 16]        ; EBX = 表示色;
    28 0000029A 8B7514              <1>         mov     esi, [ebp + 20]             ; ESI = 文字列のアドレス;
    29                              <1> 
    30 0000029D FC                  <1>         cld                                 ; DF = 0;   // アドレス加算
    31                              <1> .10L:                                       ; do
    32                              <1>                                             ; {
    33 0000029E AC                  <1>         lodsb                               ;    AL = *ESI++;
    34 0000029F 3C00                <1>         cmp     al, 0                       ;    if(0 == AL)
    35 000002A1 7425                <1>         je      .10E                        ;      break;
    36                              <1> 
    37                              <1>         ;---------------------------------
    38                              <1>         ; 1文字表示
    39                              <1>         ;---------------------------------
    40 000002A3 50535251E8D3FEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax   ;   draw_char();
    40 000002AC 6683C410            <1>
    41                              <1> 
    42                              <1>         ; 次の文字の位置を調整
    43 000002B0 41                  <1>         inc     ecx                         ;   ECX++;
    44 000002B1 83F950              <1>         cmp     ecx, 80                     ;   if(80 <= ECX)
    45 000002B4 7C10                <1>         jl      .12E                        ;   {
    46 000002B6 B900000000          <1>         mov     ecx, 0                      ;      ECX = 0;
    47 000002BB 42                  <1>         inc     edx                         ;      EDX++;
    48 000002BC 83FA1E              <1>         cmp     edx, 30                     ;      if(30 <= EDX)
    49 000002BF 7C05                <1>         jl      .12E                        ;      {
    50 000002C1 BA00000000          <1>         mov     edx, 0                      ;         EDX = 0;
    51                              <1> .12E:                                       ;      }
    52 000002C6 EBD6                <1>         jmp     .10L                        ;   }
    53                              <1> .10E:                                       ; } while(1);
    54                              <1>        
    55                              <1>         ;---------------------------------
    56                              <1>         ; レジスタの復帰
    57                              <1>         ;---------------------------------
    58 000002C8 5E                  <1> 		pop		esi
    59 000002C9 5A                  <1> 		pop		edx
    60 000002CA 59                  <1> 		pop		ecx
    61 000002CB 5B                  <1> 		pop		ebx
    62 000002CC 58                  <1> 		pop		eax
    63                              <1> 
    64                              <1>         ;---------------------------------
    65                              <1>         ; スタックフレームの破棄
    66                              <1>         ;---------------------------------
    67 000002CD 89EC                <1>         mov     esp, ebp
    68 000002CF 5D                  <1>         pop     ebp
    69                              <1> 
    70 000002D0 C3                  <1>         ret
    84                                  %include  "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1>                                                 ; ---------------------
     6                              <1>                                                 ;     +12| Y(行)
     7                              <1>                                                 ;     + 8| X(列)
     8                              <1>                                                 ; -------+-------------
     9 000002D1 55                  <1>         push    ebp                             ;     + 4| EIP(戻り番地)
    10 000002D2 89E5                <1>         mov     ebp, esp                        ; EBP + 0| EBP(元の値)
    11                              <1>                                                 ; ---------------------
    12                              <1> 
    13                              <1> 		;---------------------------------------
    14                              <1> 		; レジスタの保存
    15                              <1> 		;---------------------------------------
    16 000002D4 50                  <1> 		push	eax
    17 000002D5 53                  <1> 		push	ebx
    18 000002D6 51                  <1> 		push	ecx
    19 000002D7 52                  <1> 		push	edx
    20 000002D8 56                  <1> 		push	esi
    21 000002D9 57                  <1> 		push	edi
    22                              <1> 
    23                              <1>         ;---------------------------------------
    24                              <1>         ; 表示位置
    25                              <1>         ;---------------------------------------
    26 000002DA 8B7508              <1>         mov     esi, [ebp + 8]                      ; ESI = X(列);
    27 000002DD 8B7D0C              <1>         mov     edi, [ebp +12]                      ; EDI = Y(行);
    28                              <1> 
    29                              <1>         ;---------------------------------------
    30                              <1>         ; カラーバーを表示
    31                              <1>         ;---------------------------------------
    32 000002E0 B900000000          <1>         mov     ecx, 0                              ; for(ECX = 0;
    33 000002E5 83F910              <1> .10L:   cmp     ecx, 16                             ;     ECX < 16;
    34 000002E8 732E                <1>         jae     .10E                                ;
    35                              <1>                                                     ;     ECX++)
    36                              <1>                                                     ; {
    37                              <1>                                                     ;    // 桁位置の計算
    38 000002EA 89C8                <1>         mov     eax, ecx                            ;    EAX = ECX;
    39 000002EC 83E001              <1>         and     eax, 0x01                           ;    EAX &= 0x01;
    40 000002EF C1E003              <1>         shl     eax, 3                              ;    EAX *= 8;  // 8文字分乗算
    41 000002F2 01F0                <1>         add     eax, esi                            ;    EAX += X;
    42                              <1>                                                     ;
    43                              <1>                                                     ;    // 行位置の計算
    44 000002F4 89CB                <1>         mov     ebx, ecx                            ;    EBX = ECX;
    45 000002F6 D1EB                <1>         shr     ebx, 1                              ;    EBX /= 2;
    46 000002F8 01FB                <1>         add     ebx, edi                            ;    EBX += Y;
    47                              <1>                                                     ;
    48                              <1>                                                     ;    // 表示色の取得
    49 000002FA 89CA                <1>         mov     edx, ecx                            ;    EDX = ECX;
    50 000002FC D1E2                <1>         shl     edx, 1                              ;    EDX /= 2;
    51 000002FE 8B92[2B030000]      <1>         mov     edx, [.t0 + edx]                    ;    EDX += Y;
    52                              <1> 
    53 00000304 68[22030000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0        ;    draw_str();
    53 0000030C E877FFFFFF6683C410  <1>
    54                              <1> 
    55 00000315 41                  <1>         inc     ecx                                 ; // for(... ECX++)
    56 00000316 EBCD                <1>         jmp     .10L                                ;
    57                              <1> .10E:                                               ; }
    58                              <1> 
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; レジスタの復帰
    62                              <1>         ;---------------------------------------
    63 00000318 5F                  <1>         pop     edi
    64 00000319 5E                  <1>         pop     esi
    65 0000031A 5A                  <1>         pop     edx
    66 0000031B 59                  <1>         pop     ecx
    67 0000031C 5B                  <1>         pop     ebx
    68 0000031D 58                  <1>         pop     eax
    69                              <1> 
    70                              <1>         ;---------------------------------------
    71                              <1>         ; スタックフレームの破棄
    72                              <1>         ;---------------------------------------
    73 0000031E 89EC                <1>         mov     esp, ebp
    74 00000320 5D                  <1>         pop     ebp
    75                              <1> 
    76 00000321 C3                  <1>         ret
    77                              <1> 
    78 00000322 202020202020202000  <1> .s0:    db  '        ', 0                           ; 8文字分のスペース（表示色だけを変更）
    79                              <1> 
    80 0000032B 00000008            <1> .t0:    dw  0x0000, 0x0800                          ; カラーバーの背景色
    81 0000032F 00010009            <1>         dw  0x0100, 0x0900
    82 00000333 0002000A            <1>         dw  0x0200, 0x0A00
    83 00000337 0003000B            <1>         dw  0x0300, 0x0B00
    84 0000033B 0004000C            <1>         dw  0x0400, 0x0C00
    85 0000033F 0005000D            <1>         dw  0x0500, 0x0D00
    86 00000343 0006000E            <1>         dw  0x0600, 0x0E00
    87 00000347 0007000F            <1>         dw  0x0700, 0x0F00
    85                                  %include  "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ------+--------
     6                              <1> 												; EBP+16| 色
     7                              <1> 												; EBP+12| Y
     8                              <1> 												; EBP+ 8| X
     9                              <1> 												; ------+--------
    10 0000034B 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
    11 0000034C 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    12                              <1> 												; ------+--------
    13                              <1> 
    14                              <1>         ;---------------------------------------
    15                              <1>         ; レジスタの保存
    16                              <1>         ;---------------------------------------
    17 0000034E 50                  <1>         push    eax
    18 0000034F 53                  <1>         push    ebx
    19 00000350 51                  <1>         push    ecx
    20 00000351 57                  <1>         push    edi
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ;
    24                              <1>         ;---------------------------------------
    25 00000352 8B7D0C              <1>         mov     edi, [ebp + 12]					; EDI  = Y座標
    26 00000355 C1E704              <1>         shl     edi, 4							; EDI *= 16;
    27 00000358 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]	; EDI  = 0xA00000[EDI * 4 + EDI];
    28                              <1> 
    29                              <1> 		;---------------------------------------
    30                              <1> 		; X座標を1/8して加算
    31                              <1> 		;---------------------------------------
    32 0000035F 8B5D08              <1> 		mov		ebx, [ebp + 8]					; EBX  = X座標;
    33 00000362 89D9                <1> 		mov		ecx, ebx						; ECX  = X座標;（一時保存）
    34 00000364 C1EB03              <1> 		shr		ebx, 3							; EBX /= 8;
    35 00000367 01DF                <1> 		add		edi, ebx						; EDI += EBX;
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; X座標を8で割った余りからビット位置を計算
    39                              <1> 		; (0=0x80, 1=0x40,... 7=0x01)
    40                              <1> 		;---------------------------------------
    41 00000369 83E107              <1> 		and		ecx, 0x07						; ECX = X & 0x07;
    42 0000036C BB80000000          <1> 		mov		ebx, 0x80						; EBX = 0x80;
    43 00000371 D3EB                <1> 		shr		ebx, cl							; EBX >>= ECX;
    44                              <1> 
    45                              <1> 		;---------------------------------------
    46                              <1> 		; 色指定
    47                              <1> 		;---------------------------------------
    48 00000373 8B4D10              <1> 		mov		ecx, [ebp +16]					; // 表示色
    49                              <1> 
    50                              <1> 		;---------------------------------------
    51                              <1> 		; プレーン毎に出力
    52                              <1> 		;---------------------------------------
    53 00000376 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
    53 0000037F C404                <1>
    54 00000381 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
    54 0000038A C404                <1>
    55 0000038C 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
    55 00000395 FF6683C410          <1>
    56                              <1> 
    57 0000039A 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
    57 000003A3 C404                <1>
    58 000003A5 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
    58 000003AE C404                <1>
    59 000003B0 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
    59 000003B9 FF6683C410          <1>
    60                              <1> 
    61 000003BE 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
    61 000003C7 C404                <1>
    62 000003C9 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
    62 000003D2 C404                <1>
    63 000003D4 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
    63 000003DD FF6683C410          <1>
    64                              <1> 
    65 000003E2 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
    65 000003EB C404                <1>
    66 000003ED 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
    66 000003F6 C404                <1>
    67 000003F8 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
    67 00000401 FF6683C410          <1>
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; レジスタの復帰
    71                              <1>         ;---------------------------------------
    72 00000406 5F                  <1>         pop     edi
    73 00000407 59                  <1>         pop     ecx
    74 00000408 5B                  <1>         pop     ebx
    75 00000409 58                  <1>         pop     eax
    76                              <1> 
    77                              <1>         ;---------------------------------------
    78                              <1>         ; スタックフレームの破棄
    79                              <1>         ;---------------------------------------
    80 0000040A 89EC                <1>         mov     esp, ebp
    81 0000040C 5D                  <1>         pop     ebp
    82                              <1> 
    83 0000040D C3                  <1>         ret
    86                                  %include  "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ---------------
     6                              <1> 												;    +24| 色
     7                              <1> 												;    +20| Y1
     8                              <1> 												;    +16| X1
     9                              <1> 												;    +12| Y0
    10                              <1> 												;    + 8| X0
    11                              <1> 												; ---------------
    12 0000040E 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
    13 0000040F 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    14                              <1> 												; ---------------
    15 00000411 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
    16 00000413 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
    17 00000415 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
    18 00000417 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
    19 00000419 6A00                <1> 		push	dword 0							;    -20| x0    = 0; // Y座標
    20 0000041B 6A00                <1> 		push	dword 0							;    -24| dx    = 0; // Y増分
    21 0000041D 6A00                <1>         push    dword 0							;    -28| inc_x = 0; // Y座標増分(1 or -1)
    22                              <1> 												; ------|--------
    23                              <1> 
    24                              <1>         ;---------------------------------------
    25                              <1>         ; レジスタの保存
    26                              <1>         ;---------------------------------------
    27 0000041F 50                  <1>         push    eax
    28 00000420 53                  <1>         push    ebx
    29 00000421 51                  <1>         push    ecx
    30 00000422 52                  <1>         push    edx
    31 00000423 56                  <1>         push    esi
    32 00000424 57                  <1>         push    edi
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 幅を計算（X軸）
    36                              <1> 		;---------------------------------------
    37 00000425 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    38 00000428 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
    39 0000042B 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
    40 0000042D 7D09                <1> 		jge		.10F							; if (幅 < 0)
    41                              <1> 												; {
    42 0000042F F7DB                <1> 		neg		ebx								;   幅   *= -1;
    43 00000431 BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
    44 00000436 EB05                <1> 		jmp		.10E							; }
    45                              <1> .10F:											; else
    46                              <1> 												; {
    47 00000438 BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
    48                              <1> .10E:											; }
    49                              <1> 
    50                              <1> 		;---------------------------------------
    51                              <1> 		; 高さを計算（Y軸）
    52                              <1> 		;---------------------------------------
    53 0000043D 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
    54 00000440 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
    55 00000443 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
    56 00000445 7D09                <1> 		jge		.20F							; if (高さ < 0)
    57                              <1> 												; {
    58 00000447 F7DA                <1> 		neg		edx								;   高さ *= -1;
    59 00000449 BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
    60 0000044E EB05                <1> 		jmp		.20E							; }
    61                              <1> .20F:											; else
    62                              <1> 												; {
    63 00000450 BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
    64                              <1> .20E:											; }
    65                              <1> 
    66                              <1> 		;---------------------------------------
    67                              <1> 		; X軸
    68                              <1> 		;---------------------------------------
    69 00000455 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
    70 00000458 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
    71 0000045B 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
    72                              <1> 
    73                              <1> 		;---------------------------------------
    74                              <1> 		; Y軸
    75                              <1> 		;---------------------------------------
    76 0000045E 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
    77 00000461 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
    78 00000464 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
    79                              <1> 
    80                              <1> 		;---------------------------------------
    81                              <1> 		; 基準軸を決める
    82                              <1> 		;---------------------------------------
    83 00000467 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
    84 00000469 7F08                <1> 		jg		.22F							; {
    85                              <1> 												;   
    86 0000046B 8D75EC              <1> 		lea		esi, [ebp -20]					;   // X軸が基準軸
    87 0000046E 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // Y軸が相対軸
    88                              <1> 												;   
    89 00000471 EB06                <1> 		jmp		.22E							; }
    90                              <1> .22F:											; else
    91                              <1> 												; {
    92 00000473 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // Y軸が基準軸
    93 00000476 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // X軸が相対軸
    94                              <1> .22E:											; }
    95                              <1> 
    96                              <1> 		;---------------------------------------
    97                              <1> 		; 繰り返し回数(基準軸のドット数)
    98                              <1> 		;---------------------------------------
    99 00000479 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   100 0000047C 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   101 0000047F 7505                <1> 		jnz		.30E							; {
   102 00000481 B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   103                              <1> .30E:											; }
   104                              <1> 
   105                              <1> 		;---------------------------------------
   106                              <1> 		; 線を描画
   107                              <1> 		;---------------------------------------
   108                              <1> .50L:											; do
   109                              <1> 												; {
   110                              <1> %ifdef	USE_SYSTEM_CALL
   111                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   112                              <1> 
   113                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   114                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   115                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   116                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   117                              <1> 
   118                              <1> 		mov		ecx, eax
   119                              <1> %else
   122 00000486 FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   122 0000048F E8B7FEFFFF6683C40C  <1>
   123                              <1> %endif
   124                              <1> 												;   // 基準軸を更新(1ドット分)
   125 00000498 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   126 0000049B 0106                <1> 		add		[esi - 0], eax					;   
   127                              <1> 
   128                              <1> 												;   // 相対軸を更新
   129 0000049D 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   130 000004A0 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   131 000004A3 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   132                              <1> 
   133 000004A6 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   134 000004A8 7C07                <1> 		jl		.52E							;   {
   135 000004AA 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   136                              <1> 												;     
   137                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   138 000004AC 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   139 000004AF 011F                <1> 		add		[edi - 0], ebx					;     
   140                              <1> .52E:											;   }
   141 000004B1 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   142                              <1> 												;   
   143 000004B4 E2D0                <1> 		loop	.50L							;   
   144                              <1> .50E:											; } while (ループ回数--);
   145                              <1> 
   146                              <1>         ;---------------------------------------
   147                              <1>         ; レジスタの復帰
   148                              <1>         ;---------------------------------------
   149 000004B6 5F                  <1>         pop     edi
   150 000004B7 5E                  <1>         pop     esi
   151 000004B8 5A                  <1>         pop     edx
   152 000004B9 59                  <1>         pop     ecx
   153 000004BA 5B                  <1>         pop     ebx
   154 000004BB 58                  <1>         pop     eax
   155                              <1> 
   156                              <1>         ;---------------------------------------
   157                              <1>         ; スタックフレームの破棄
   158                              <1>         ;---------------------------------------
   159 000004BC 89EC                <1>         mov     esp, ebp
   160 000004BE 5D                  <1>         pop     ebp
   161                              <1> 
   162 000004BF C3                  <1>         ret
    87                                  %include  "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+24| 色
     7                              <1> 												; EBP+20| Y1
     8                              <1> 												; EBP+16| X1
     9                              <1> 												; EBP+12| Y0
    10                              <1> 												; EBP+ 8| X0
    11                              <1> 												; ---------------
    12 000004C0 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    13 000004C1 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    14                              <1> 												; ------|--------
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ; レジスタの保存
    18                              <1>         ;---------------------------------------
    19 000004C3 50                  <1>         push    eax
    20 000004C4 53                  <1>         push    ebx
    21 000004C5 51                  <1>         push    ecx
    22 000004C6 52                  <1>         push    edx
    23 000004C7 56                  <1>         push    esi
    24                              <1> 
    25                              <1> 		;---------------------------------------
    26                              <1> 		; 矩形を描画
    27                              <1> 		;---------------------------------------
    28 000004C8 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    29 000004CB 8B5D0C              <1> 		mov		ebx, [ebp +12]					; EBX = Y0;
    30 000004CE 8B4D10              <1> 		mov		ecx, [ebp +16]					; ECX = X1;
    31 000004D1 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1;
    32 000004D4 8B7518              <1> 		mov		esi, [ebp +24]					; ESI = 色;
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 座標軸の大小を確定
    36                              <1> 		;---------------------------------------
    37 000004D7 39C8                <1> 		cmp		eax, ecx						; if (X1 < X0)
    38 000004D9 7C01                <1> 		jl		.10E							; {
    39 000004DB 91                  <1> 		xchg	eax, ecx						;   X0とX1を入れ替える;
    40                              <1> .10E:											; }
    41                              <1> 
    42 000004DC 39D3                <1> 		cmp		ebx, edx						; if (Y1 < Y0)
    43 000004DE 7C02                <1> 		jl		.20E							; {
    44 000004E0 87DA                <1> 		xchg	ebx, edx						;   Y0とY1を入れ替える;
    45                              <1> .20E:											; }
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; 矩形を描画
    49                              <1> 		;---------------------------------------
    50 000004E2 5653515350E822FFFF- <1> 		cdecl	draw_line, eax, ebx, ecx, ebx, esi	; 上線
    50 000004EB FF6683C414          <1>
    51 000004F0 5652505350E814FFFF- <1> 		cdecl	draw_line, eax, ebx, eax, edx, esi	; 左線
    51 000004F9 FF6683C414          <1>
    52                              <1> 
    53 000004FE 4A                  <1> 		dec		edx									; EDX--; // 下線は1ドット上げる
    54 000004FF 5652515250E805FFFF- <1> 		cdecl	draw_line, eax, edx, ecx, edx, esi	; 下線
    54 00000508 FF6683C414          <1>
    55 0000050D 42                  <1> 		inc		edx
    56                              <1> 
    57 0000050E 49                  <1> 		dec		ecx									; ECX--; // 右線は1ドット左に移動
    58 0000050F 5652515351E8F5FEFF- <1> 		cdecl	draw_line, ecx, ebx, ecx, edx, esi	; 右線
    58 00000518 FF6683C414          <1>
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; レジスタの復帰
    62                              <1>         ;---------------------------------------
    63 0000051D 5E                  <1>         pop     esi
    64 0000051E 5A                  <1>         pop     edx
    65 0000051F 59                  <1>         pop     ecx
    66 00000520 5B                  <1>         pop     ebx
    67 00000521 58                  <1>         pop     eax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 00000522 89EC                <1>         mov     esp, ebp
    73 00000524 5D                  <1>         pop     ebp
    74                              <1> 
    75 00000525 C3                  <1>         ret
    88                                  %include  "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												;    +24| フラグ
     7                              <1> 												;    +20| 基数
     8                              <1> 												;    +16| バッファサイズ
     9                              <1> 												;    +12| バッファアドレス
    10                              <1> 												;    + 8| 数値
    11                              <1> 												; ------|--------
    12                              <1> 												;    + 4| EIP（戻り番地）
    13 00000526 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    14 00000527 89E5                <1> 		mov		ebp, esp						; ------+--------
    15                              <1> 
    16                              <1>         ;----------------------------------
    17                              <1>         ; レジスタの保存
    18                              <1>         ;----------------------------------
    19 00000529 50                  <1>         push    eax
    20 0000052A 53                  <1>         push    ebx
    21 0000052B 51                  <1>         push    ecx
    22 0000052C 52                  <1>         push    edx
    23 0000052D 56                  <1>         push    esi
    24 0000052E 57                  <1>         push    edi
    25                              <1> 
    26                              <1>         ;----------------------------------
    27                              <1>         ; 引数を取得
    28                              <1>         ;----------------------------------
    29 0000052F 8B4508              <1> 		mov		eax, [ebp + 8]					; val  = 数値;
    30 00000532 8B750C              <1> 		mov		esi, [ebp +12]					; dst  = バッファアドレス;
    31 00000535 8B4D10              <1> 		mov		ecx, [ebp +16]					; size = 残りバッファサイズ;
    32                              <1> 
    33 00000538 89F7                <1> 		mov		edi, esi						; // バッファの最後尾
    34 0000053A 01CF                <1> 		add		edi, ecx						; dst  = &dst[size - 1];
    35 0000053C 4F                  <1> 		dec		edi								; 
    36                              <1> 
    37 0000053D 8B5D18              <1> 		mov		ebx, [ebp +24]					; flags = オプション;
    38                              <1> 
    39                              <1>         ;----------------------------------
    40                              <1>         ; 符号付き判定
    41                              <1>         ;----------------------------------
    42 00000540 F7C301000000        <1> 		test	ebx, 0b0001						; if (flags & 0x01)// 符号付き
    43 00000546 7408                <1> .10Q:	je		.10E							; {
    44 00000548 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    45 0000054B 7D03                <1> .12Q:	jge		.12E							;   {
    46 0000054D 83CB02              <1> 		or		ebx, 0b0010						;     flags |=  2; // 符号表示
    47                              <1> .12E:											;   }
    48                              <1> .10E:											; }
    49                              <1> 
    50                              <1>         ;----------------------------------
    51                              <1>         ; 符号出力判定
    52                              <1>         ;----------------------------------
    53 00000550 F7C302000000        <1> 		test	ebx, 0b0010						; if (flags & 0x02)// 符号出力判定
    54 00000556 7410                <1> .20Q:	je		.20E							; {
    55 00000558 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    56 0000055B 7D07                <1> .22Q:	jge		.22F							;   {
    57 0000055D F7D8                <1> 		neg		eax								;     val *= -1;   // 符号反転
    58 0000055F C6062D              <1> 		mov		[esi], byte '-'					;     *dst = '-';  // 符号表示
    59 00000562 EB03                <1> 		jmp		.22E							;   }
    60                              <1> .22F:											;   else
    61                              <1> 												;   {
    62 00000564 C6062B              <1> 		mov		[esi], byte '+'					;     *dst = '+';  // 符号表示
    63                              <1> .22E:											;   }
    64 00000567 49                  <1> 		dec		ecx								;   size--;        // 残りバッファサイズの減算
    65                              <1> .20E:											; }
    66                              <1> 
    67                              <1>         ;----------------------------------
    68                              <1>         ; ASCII変換
    69                              <1>         ;----------------------------------
    70 00000568 8B5D14              <1> 		mov		ebx, [ebp +20]					; BX = 基数;
    71                              <1> .30L:											; do
    72                              <1> 												; {
    73 0000056B BA00000000          <1> 		mov		edx, 0							;   
    74 00000570 F7F3                <1> 		div		ebx								;   DX = DX:AX % 基数;
    75                              <1> 												;   AX = DX:AX / 基数;
    76                              <1> 												;   
    77 00000572 89D6                <1> 		mov		esi, edx						;   // テーブル参照
    78 00000574 8A96[9F050000]      <1> 		mov		dl, byte [.ascii + esi]			;   DL = ASCII[DX];
    79                              <1> 												;   
    80 0000057A 8817                <1> 		mov		[edi], dl						;   *dst = DL;
    81 0000057C 4F                  <1> 		dec		edi								;   dst--;
    82                              <1> 												;   
    83 0000057D 83F800              <1> 		cmp		eax, 0							;   
    84 00000580 E0E9                <1> 		loopnz	.30L							; } while (AX);
    85                              <1> .30E:
    86                              <1> 
    87                              <1>         ;----------------------------------
    88                              <1>         ; 空欄を埋める
    89                              <1>         ;----------------------------------
    90 00000582 83F900              <1> 		cmp		ecx, 0							; if (size)
    91 00000585 740E                <1> .40Q:	je		.40E							; {
    92 00000587 B020                <1> 		mov		al, ' '							;   AL = ' ';  // ' 'で埋める（デフォルト値）
    93 00000589 66837D1804          <1> 		cmp		[ebp +24], word 0b0100			;   if (flags & 0x04)
    94 0000058E 7502                <1> .42Q:	jne		.42E							;   {
    95 00000590 B030                <1> 		mov		al, '0'							;     AL = '0'; // '0'で埋める
    96                              <1> .42E:											;   }
    97 00000592 FD                  <1> 		std										;   // DF = 1（-方向）
    98 00000593 F3AA                <1> 		rep stosb								;   while (--CX) *DI-- = ' ';
    99                              <1> .40E:	
   100                              <1> 
   101                              <1>         ;----------------------------------
   102                              <1>         ; レジスタの復帰
   103                              <1>         ;----------------------------------
   104 00000595 5F                  <1>         pop     edi
   105 00000596 5E                  <1>         pop     esi
   106 00000597 5A                  <1>         pop     edx
   107 00000598 59                  <1>         pop     ecx
   108 00000599 5B                  <1>         pop     ebx
   109 0000059A 58                  <1>         pop     eax
   110                              <1> 
   111                              <1>         ;----------------------------------
   112                              <1>         ; スタックフレームの破棄
   113                              <1>         ;----------------------------------
   114 0000059B 89EC                <1>         mov     esp, ebp
   115 0000059D 5D                  <1>         pop     ebp
   116                              <1> 
   117 0000059E C3                  <1>         ret
   118                              <1> 
   119 0000059F 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"				; 変換テーブル
   119 000005A8 39414243444546      <1>
    89                                  %include  "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+ 8| 保存先アドレス
     7                              <1> 												; ---------------
     8 000005AF 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
     9 000005B0 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    10                              <1> 												; ---------------
    11                              <1>         ;----------------------------------
    12                              <1>         ; レジスタの保存
    13                              <1>         ;----------------------------------
    14 000005B2 53                  <1>         push    ebx
    15                              <1>         
    16                              <1>         ;----------------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;----------------------------------
    19 000005B3 B004                <1> 		mov		al, 0x04						;   AL = 0x04;
    20 000005B5 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    21 000005B7 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 時データ
    22                              <1> 
    23 000005B9 C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    24                              <1> 
    25 000005BC B002                <1> 		mov		al, 0x02						;   AL = 0x02;
    26 000005BE E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    27 000005C0 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 分データ
    28                              <1> 
    29 000005C2 C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    30                              <1> 
    31 000005C5 B000                <1> 		mov		al, 0x00						;   AL = 0x00;
    32 000005C7 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    33 000005C9 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 秒データ
    34                              <1> 
    35 000005CB 25FFFFFF00          <1> 		and		eax, 0x00_FF_FF_FF				;   // 下位3バイトのみ有効
    36 000005D0 8B5D08              <1> 		mov		ebx, [ebp + 8]					;   dst = 保存先;
    37 000005D3 8903                <1> 		mov		[ebx], eax						;   [dst] = 時刻;
    38                              <1> 
    39                              <1>         ;----------------------------------
    40                              <1>         ; レジスタの復帰
    41                              <1>         ;----------------------------------
    42 000005D5 5B                  <1>         pop     ebx
    43                              <1> 
    44                              <1>         ;----------------------------------
    45                              <1>         ; スタックフレームの破棄
    46                              <1>         ;----------------------------------
    47 000005D6 89EC                <1>         mov     esp, ebp
    48 000005D8 5D                  <1>         pop     ebp
    49                              <1> 
    50 000005D9 C3                  <1>         ret
    90                                  %include  "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 
     6 000005DA 55                  <1>         push    ebp
     7 000005DB 89E5                <1>         mov     ebp, esp
     8                              <1> 
     9                              <1>         ;----------------------------------
    10                              <1>         ; レジスタの保存
    11                              <1>         ;----------------------------------
    12 000005DD 50                  <1>         push    eax
    13 000005DE 53                  <1>         push    ebx
    14                              <1> 
    15                              <1>         ;----------------------------------
    16                              <1>         ; 時刻の表示
    17                              <1>         ;----------------------------------
    18 000005DF 8B4514              <1> 		mov		eax, [ebp +20]					; EAX = 時刻データ;
    19                              <1> 
    20 000005E2 0FB6D8              <1>         movzx   ebx, al                         ; EBX = 秒;
    21 000005E5 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100  ; // 文字に変換
    21 000005EC [4C060000]53E830FF- <1>
    21 000005F4 FFFF6683C414        <1>
    22                              <1> 
    23 000005FA 88E3                <1>         mov     bl, ah                          ; EBX = 分;
    24 000005FC 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100  ; // 文字に変換
    24 00000603 [49060000]53E819FF- <1>
    24 0000060B FFFF6683C414        <1>
    25                              <1> 
    26 00000611 C1E810              <1>         shr     eax, 16                         ; EBX = 時;
    27 00000614 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100 ; // 文字に変換
    27 0000061B [46060000]50E801FF- <1>
    27 00000623 FFFF6683C414        <1>
    28                              <1> 
    29                              <1>                                                 ; // 時刻を表示
    30 00000629 68[46060000]FF7510- <1>         cdecl   draw_str,   dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    30 00000631 FF750CFF7508E84CFC- <1>
    30 0000063A FFFF6683C410        <1>
    31                              <1> 
    32                              <1>         ;----------------------------------
    33                              <1>         ; レジスタの復帰
    34                              <1>         ;----------------------------------
    35 00000640 5B                  <1>         pop     ebx
    36 00000641 58                  <1>         pop     eax
    37                              <1> 
    38                              <1>         ;----------------------------------
    39                              <1>         ; スタックフレームの破棄
    40                              <1>         ;----------------------------------
    41 00000642 89EC                <1>         mov     esp, ebp
    42 00000644 5D                  <1>         pop     ebp
    43                              <1> 
    44 00000645 C3                  <1>         ret
    45                              <1> 
    46 00000646 5A5A3A              <1> .hour:  db  "ZZ:"
    47 00000649 5A5A3A              <1> .min:   db  "ZZ:"
    48 0000064C 5A5A00              <1> .sec:   db  "ZZ", 0
    91                                  %include  "../modules/protect/interrupt.s"
     1                              <1> ;************************************************
     2                              <1> ; 割り込みベクタの初期化
     3                              <1> ;************************************************
     4 0000064F 90                  <1> ALIGN 4
     5 00000650 FF07                <1> IDTR:   dw      8 * 256 - 1
     6 00000652 00001000            <1>         dd      VECT_BASE
     7                              <1> 
     8                              <1> 
     9                              <1> ;************************************************
    10                              <1> ; 割り込みテーブルを初期化
    11                              <1> ;************************************************
    12                              <1> init_int:
    13                              <1>         ;----------------------------------
    14                              <1>         ; レジスタの保存
    15                              <1>         ;----------------------------------
    16 00000656 50                  <1>         push    eax
    17 00000657 53                  <1>         push    ebx
    18 00000658 51                  <1>         push    ecx
    19 00000659 57                  <1>         push    edi
    20                              <1> 
    21                              <1>         ;----------------------------------
    22                              <1>         ; すべての割り込みにデフォルト処理を設定
    23                              <1>         ;----------------------------------
    24 0000065A 8D05[9F070000]      <1>         lea     eax, [int_default]
    25 00000660 BB008E0800          <1>         mov     ebx, 0x0008_8E00
    26 00000665 6693                <1>         xchg    ax, bx
    27                              <1>         
    28 00000667 B900010000          <1>         mov     ecx, 256
    29 0000066C BF00001000          <1>         mov     edi, VECT_BASE
    30                              <1> 
    31                              <1> .10L:
    32 00000671 891F                <1>         mov     [edi + 0], ebx
    33 00000673 894704              <1>         mov     [edi + 4], eax
    34 00000676 83C708              <1>         add     edi, 8
    35 00000679 E2F6                <1>         loop    .10L
    36                              <1> 
    37                              <1>         ;----------------------------------
    38                              <1>         ; 割り込みディスクリプタの設定
    39                              <1>         ;----------------------------------
    40 0000067B 0F011D[50060000]    <1>         lidt    [IDTR]
    41                              <1> 
    42                              <1>         ;----------------------------------
    43                              <1>         ; レジスタの復帰
    44                              <1>         ;----------------------------------
    45 00000682 5F                  <1>         pop     edi
    46 00000683 59                  <1>         pop     ecx
    47 00000684 5B                  <1>         pop     ebx
    48 00000685 58                  <1>         pop     eax
    49                              <1> 
    50 00000686 C3                  <1>         ret
    51                              <1> 
    52                              <1> int_stop:
    53                              <1>         ;---------------------------------------
    54                              <1>         ; EAXで示される文字列を表示
    55                              <1>         ;---------------------------------------
    56 00000687 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
    56 00000690 19E8F2FBFFFF6683C4- <1>
    56 00000699 10                  <1>
    57                              <1> 
    58                              <1>         ;---------------------------------------
    59                              <1>         ; スタックのデータを文字列に変換
    60                              <1>         ;---------------------------------------
    61 0000069A 8B0424              <1>         mov     eax, [esp + 0]
    62 0000069D 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    62 000006A4 [62070000]50E878FE- <1>
    62 000006AC FFFF6683C414        <1>
    63                              <1>         
    64 000006B2 8B442404            <1>         mov     eax, [esp + 4]
    65 000006B6 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    65 000006BD [73070000]50E85FFE- <1>
    65 000006C5 FFFF6683C414        <1>
    66                              <1>         
    67 000006CB 8B442408            <1>         mov     eax, [esp + 8]
    68 000006CF 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    68 000006D6 [84070000]50E846FE- <1>
    68 000006DE FFFF6683C414        <1>
    69                              <1>         
    70 000006E4 8B44240C            <1>         mov     eax, [esp + 12]
    71 000006E8 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    71 000006EF [95070000]50E82DFE- <1>
    71 000006F7 FFFF6683C414        <1>
    72                              <1> 
    73                              <1>         ;---------------------------------------
    74                              <1>         ; 文字列の表示
    75                              <1>         ;---------------------------------------
    76 000006FD 68[5B070000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    76 00000705 00006A106A19E878FB- <1>
    76 0000070E FFFF6683C410        <1>
    77 00000714 68[6C070000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    77 0000071C 00006A116A19E861FB- <1>
    77 00000725 FFFF6683C410        <1>
    78 0000072B 68[7D070000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    78 00000733 00006A126A19E84AFB- <1>
    78 0000073C FFFF6683C410        <1>
    79 00000742 68[8E070000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    79 0000074A 00006A136A19E833FB- <1>
    79 00000753 FFFF6683C410        <1>
    80                              <1> 
    81                              <1>         ;---------------------------------------
    82                              <1>         ; 無限ループ
    83                              <1>         ;---------------------------------------
    84 00000759 EBFE                <1>         jmp     $
    85                              <1> 
    86 0000075B 4553502B20303A      <1> .s1     db  "ESP+ 0:"
    87 00000762 5F5F5F5F5F5F5F5F20- <1> .p1     db  "________ ", 0
    87 0000076B 00                  <1>
    88 0000076C 2020202B20343A      <1> .s2     db  "   + 4:"
    89 00000773 5F5F5F5F5F5F5F5F20- <1> .p2     db  "________ ", 0
    89 0000077C 00                  <1>
    90 0000077D 2020202B20383A      <1> .s3     db  "   + 8:"
    91 00000784 5F5F5F5F5F5F5F5F20- <1> .p3     db  "________ ", 0
    91 0000078D 00                  <1>
    92 0000078E 2020202B31323A      <1> .s4     db  "   +12:"
    93 00000795 5F5F5F5F5F5F5F5F20- <1> .p4     db  "________ ", 0
    93 0000079E 00                  <1>
    94                              <1> 
    95                              <1> int_default:
    96 0000079F 9C                  <1>         pushf
    97 000007A0 0E                  <1>         push    cs
    98 000007A1 68[87060000]        <1>         push    int_stop
    99                              <1> 
   100 000007A6 B8[AC070000]        <1>         mov     eax, .s0
   101 000007AB CF                  <1>         iret
   102                              <1> 
   103 000007AC 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
   103 000007B5 50202020203E2000    <1>
   104                              <1> 
   105                              <1> int_zero_div:
   106 000007BD 9C                  <1>         pushf   
   107 000007BE 0E                  <1>         push    cs
   108 000007BF 68[87060000]        <1>         push    int_stop
   109                              <1> 
   110 000007C4 B8[CA070000]        <1>         mov     eax, .s0
   111 000007C9 CF                  <1>         iret
   112                              <1> 
   113 000007CA 203C20205A45524F20- <1> .s0     db  " <  ZERO DIV  > ", 0
   113 000007D3 44495620203E2000    <1>
    92                                  %include  "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;---------------------------------------
     5 000007DB 50                  <1>         push    eax
     6                              <1> 
     7                              <1>         ;---------------------------------------
     8                              <1>         ; マスタの設定
     9                              <1>         ;---------------------------------------
    10                              <1>         outp    0x20, 0x11                      ; // MASTER.ICW1 = 0x11;
    10 000007DC B011                <2>  mov al, %2
    10 000007DE E620                <2>  out %1, al
    11                              <1>         outp    0x21, 0x20                      ; // MASTER.ICW2 = 0x20;
    11 000007E0 B020                <2>  mov al, %2
    11 000007E2 E621                <2>  out %1, al
    12                              <1>         outp    0x21, 0x04                      ; // MASTER.ICW3 = 0x04;
    12 000007E4 B004                <2>  mov al, %2
    12 000007E6 E621                <2>  out %1, al
    13                              <1>         outp    0x21, 0x05                      ; // MASTER.ICW4 = 0x05;
    13 000007E8 B005                <2>  mov al, %2
    13 000007EA E621                <2>  out %1, al
    14                              <1>         outp    0x21, 0xFF                      ; // マスタ割り込みマスク
    14 000007EC B0FF                <2>  mov al, %2
    14 000007EE E621                <2>  out %1, al
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ; スレーブの設定
    18                              <1>         ;---------------------------------------
    19                              <1>         outp    0xA0, 0x11                      ; // SLAVE.ICW1 = 0x11;
    19 000007F0 B011                <2>  mov al, %2
    19 000007F2 E6A0                <2>  out %1, al
    20                              <1>         outp    0xA1, 0x28                      ; // SLAVE.ICW2 = 0x28;
    20 000007F4 B028                <2>  mov al, %2
    20 000007F6 E6A1                <2>  out %1, al
    21                              <1>         outp    0xA1, 0x02                      ; // SLAVE.ICW3 = 0x02;
    21 000007F8 B002                <2>  mov al, %2
    21 000007FA E6A1                <2>  out %1, al
    22                              <1>         outp    0xA1, 0x01                      ; // SLAVE.ICW4 = 0x01;
    22 000007FC B001                <2>  mov al, %2
    22 000007FE E6A1                <2>  out %1, al
    23                              <1>         outp    0xA1, 0xFF                      ; // スレーブ割り込みマスク
    23 00000800 B0FF                <2>  mov al, %2
    23 00000802 E6A1                <2>  out %1, al
    24                              <1> 
    25                              <1>         ;---------------------------------------
    26                              <1>         ; レジスタの復帰
    27                              <1>         ;---------------------------------------
    28 00000804 58                  <1>         pop     eax
    29                              <1> 
    30 00000805 C3                  <1>         ret
    93                                  %include  "../modules/protect/int_rtc.s"
     1                              <1> int_rtc:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;---------------------------------------
     5 00000806 60                  <1>         pusha
     6 00000807 1E                  <1>         push    ds
     7 00000808 06                  <1>         push    es
     8                              <1> 
     9                              <1>         ;---------------------------------------
    10                              <1>         ; データ用セグメントレジスタの設定
    11                              <1>         ;---------------------------------------
    12 00000809 66B81000            <1>         mov     ax, 0x0010
    13 0000080D 8ED8                <1>         mov     ds, ax
    14 0000080F 8EC0                <1>         mov     es, ax
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;---------------------------------------
    19 00000811 68[C8000000]E894FD- <1>         cdecl   rtc_get_time, RTC_TIME
    19 00000819 FFFF6683C404        <1>
    20                              <1> 
    21                              <1>         ;---------------------------------------
    22                              <1>         ; RTCの割り込み要因を取得
    23                              <1>         ;---------------------------------------
    24                              <1>         outp    0x70, 0x0C
    24 0000081F B00C                <2>  mov al, %2
    24 00000821 E670                <2>  out %1, al
    25 00000823 E471                <1>         in      al, 0x71
    26                              <1> 
    27                              <1>         ;---------------------------------------
    28                              <1>         ; 割り込みフラグをクリア(EOI)
    29                              <1>         ;---------------------------------------
    30                              <1>         outp    0xA0, 0x20
    30 00000825 B020                <2>  mov al, %2
    30 00000827 E6A0                <2>  out %1, al
    31                              <1>         outp    0x20, 0x20
    31 00000829 B020                <2>  mov al, %2
    31 0000082B E620                <2>  out %1, al
    32                              <1> 
    33                              <1>         ;---------------------------------------
    34                              <1>         ; レジスタの復帰
    35                              <1>         ;---------------------------------------
    36 0000082D 07                  <1>         pop     es
    37 0000082E 1F                  <1>         pop     ds
    38 0000082F 61                  <1>         popa
    39                              <1> 
    40 00000830 CF                  <1>         iret
    41                              <1> 
    42                              <1> rtc_int_en:
    43                              <1>         ;---------------------------------------
    44                              <1>         ; スタックフレームの構築
    45                              <1>         ;---------------------------------------
    46 00000831 55                  <1>         push    ebp
    47 00000832 89E5                <1>         mov     ebp, esp
    48                              <1> 
    49                              <1>         ;---------------------------------------
    50                              <1>         ; レジスタの保存
    51                              <1>         ;---------------------------------------
    52 00000834 50                  <1>         push    eax
    53                              <1> 
    54                              <1>         ;---------------------------------------
    55                              <1>         ; 割り込み許可設定
    56                              <1>         ;---------------------------------------
    57                              <1>         outp    0x70, 0x0B
    57 00000835 B00B                <2>  mov al, %2
    57 00000837 E670                <2>  out %1, al
    58                              <1> 
    59 00000839 E471                <1>         in      al, 0x71
    60 0000083B 0A4508              <1>         or      al, [ebp + 8]
    61                              <1> 
    62 0000083E E671                <1>         out     0x71, al
    63                              <1> 
    64                              <1>         ;---------------------------------------
    65                              <1>         ; レジスタの復帰
    66                              <1>         ;---------------------------------------
    67 00000840 58                  <1>         pop     eax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 00000841 89EC                <1>         mov     esp, ebp
    73 00000843 5D                  <1>         pop     ebp
    74                              <1> 
    75 00000844 C3                  <1>         ret
    94                                  
    95                                  ;************************************************
    96                                  ;   パディング
    97                                  ;************************************************
    98 00000845 00<rept>                        times   KERNEL_SIZE - ($ - $$)      db  0x00
