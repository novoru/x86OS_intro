     1                                  ;************************************************
     2                                  ;   マクロ
     3                                  ;************************************************
     4                                  %include    "../include/define.s"
     1                              <1>     BOOT_LOAD       equ     0x7C00
     2                              <1> 
     3                              <1>     BOOT_SIZE       equ     (1024 * 8)
     4                              <1>     SECT_SIZE       equ     (512)
     5                              <1>     BOOT_SECT       equ     (BOOT_SIZE / SECT_SIZE)
     5                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1           ; ドライブ番号
    19 00000002 <res 00000002>      <1>         .cyln   resw    1           ; シリンダ
    20 00000004 <res 00000002>      <1>         .head   resw    1           ; ヘッド
    21 00000006 <res 00000002>      <1>         .sect   resw    1           ; セクタ
    22                              <1> endstruc
     6                                  
     7                                      ORG     BOOT_LOAD                   ; ロードアドレスをアセンブラに指示
     8                                  
     9                                  ;************************************************
    10                                  ;   エントリポイント
    11                                  ;************************************************
    12                                  entry:
    13 00000000 EB58                            jmp ipl                             ; IPLへジャンプ
    14                                  
    15                                          ;----------------------------------
    16                                          ;  BPB(BIOS Parameter Block)
    17                                          ;----------------------------------
    18 00000002 90<rept>                        times   90 - ($ - $$) db 0x90       ;
    19                                  
    20                                          ;----------------------------------
    21                                          ;  IPL(Intial Program Loader)
    22                                          ;----------------------------------
    23                                  ipl:
    24 0000005A FA                              cli                                 ; // 割り込み禁止
    25                                  
    26 0000005B B80000                          mov     ax, 0x0000                  ; AX = 0x0000;
    27 0000005E 8ED8                            mov     ds, ax                      ; DS = 0x0000;
    28 00000060 8EC0                            mov     es, ax                      ; ES = 0x0000;
    29 00000062 8ED0                            mov     ss, ax                      ; SS = 0x0000;
    30 00000064 BC007C                          mov     sp, BOOT_LOAD               ; SP = 0x7C00;
    31                                  
    32 00000067 FB                              sti                                 ; // 割り込み許可
    33                                  
    34 00000068 8816[B800]                      mov     [BOOT + drive.no], dl       ; ブートドライブを保持
    35                                  
    36                                          ;----------------------------------
    37                                          ;  文字列を表示
    38                                          ;----------------------------------
    39 0000006C 68[9900]E84E0083C4-             cdecl   puts, .s0                   ; puts(.s0)
    39 00000074 02                 
    40                                  
    41                                          ;----------------------------------
    42                                          ;  残りのセクタをすべて読み込む
    43                                          ;----------------------------------
    44 00000075 BB0F00                          mov     bx, BOOT_SECT - 1           ; BX = 残りのブートセクタ数;
    45 00000078 B9007E                          mov     cx, BOOT_LOAD + SECT_SIZE   ; CX = 次のロードアドレス;
    46                                  
    47 0000007B 515368[B800]E89B00-             cdecl   read_chs, BOOT, bx, cx      ; AX = read_chr(.chs, bx, cx);
    47 00000083 83C406             
    48                                  
    49 00000086 39D8                            cmp     ax, bx                      ; if(AX != 残りのセクタ数)
    50 00000088 730C                    .10Q:   jnc     .10E                        ; {
    51 0000008A 68[A600]E8300083C4-     .10T:   cdecl   puts, .e0                   ;    puts(.e0);
    51 00000092 02                 
    52 00000093 E84900                          call    reboot                      ;    reboot();      // 再起動
    53                                  .10E:                                       ; }
    54                                  
    55                                          ;----------------------------------
    56                                          ;  次のステージへ以降
    57                                          ;----------------------------------
    58 00000096 E96701                          jmp     stage_2
    59                                  
    60                                          ;----------------------------------
    61                                          ;  データ
    62                                          ;----------------------------------
    63 00000099 426F6F74696E672E2E-     .s0     db  "Booting...", 0x0A, 0x0D, 0
    63 000000A2 2E0A0D00           
    64 000000A6 4572726F723A736563-     .e0     db  "Error:sector read", 0
    64 000000AF 746F72207265616400 
    65                                  
    66                                  ;************************************************
    67                                  ;   ブートドライブに関する情報
    68                                  ;************************************************
    69                                  ALIGN 2, db 0
    70                                  BOOT:                                           ; ブートドライブに関する情報
    71                                          istruc  drive
    72 000000B8 0000                                at  drive.no,       dw 0            ; ドライブ番号
    73 000000BA 0000                                at  drive.cyln,     dw 0            ; C: シリンダ
    74 000000BC 0000                                at  drive.head,     dw 0            ; H: ヘッド
    75 000000BE 0200                                at  drive.sect,     dw 2            ; S: セクタ
    76                                          iend
    77                                  
    78                                  ;************************************************
    79                                  ;   モジュール
    80                                  ;************************************************
    81                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1>     ;---------------------------------
     3                              <1>     ;   スタックフレームの構築
     4                              <1>     ;---------------------------------
     5                              <1>                                         ;   BP+ 4| 文字列へのアドレス
     6 000000C0 55                  <1>     push    bp                          ;   BP+ 2| IP(戻り番地)
     7 000000C1 89E5                <1>     mov     bp, sp                      ;   BP+ 0| BP(元の値)
     8                              <1>                                         ;  ------+------
     9                              <1> 
    10                              <1>     ;---------------------------------
    11                              <1>     ;   レジスタの保存
    12                              <1>     ;---------------------------------
    13 000000C3 50                  <1>     push    ax
    14 000000C4 53                  <1>     push    bx
    15 000000C5 56                  <1>     push    si
    16                              <1> 
    17                              <1>     ;---------------------------------
    18                              <1>     ;   引数の取得
    19                              <1>     ;---------------------------------
    20 000000C6 8B7604              <1>     mov     si, [bp + 4]                ; SI = 文字列へのアドレス;
    21                              <1> 
    22                              <1>     ;---------------------------------
    23                              <1>     ;   処理の開始
    24                              <1>     ;---------------------------------
    25 000000C9 B40E                <1>     mov ah, 0x0E                        ; テレタイプ式1文字出力
    26 000000CB BB0000              <1>     mov bx, 0x0000                      ; ページ番号と文字色を0に設定
    27 000000CE FC                  <1>     cld                                 ; DF = 0; // アドレス加算
    28                              <1> .10L:                                   ; do
    29                              <1>                                         ; {
    30 000000CF AC                  <1>     lodsb                               ;   AL = *SI++;
    31                              <1>                                         ;
    32 000000D0 3C00                <1>     cmp     al, 0                       ;   if(0 == AL);
    33 000000D2 7404                <1>     je      .10E                        ;     break;
    34                              <1>                                         ;
    35 000000D4 CD10                <1>     int     0x10                        ;   Int10(0x0E, AL) // 文字列出力
    36 000000D6 EBF7                <1>     jmp     .10L                        ;
    37                              <1> .10E:                                   ; } while(1);
    38                              <1> 
    39                              <1>     ;---------------------------------
    40                              <1>     ;   レジスタの復帰
    41                              <1>     ;---------------------------------
    42 000000D8 5E                  <1>     pop si
    43 000000D9 5B                  <1>     pop bx
    44 000000DA 58                  <1>     pop ax
    45                              <1> 
    46                              <1>     ;---------------------------------
    47                              <1>     ;   スタックフレームの破棄
    48                              <1>     ;---------------------------------
    49 000000DB 89EC                <1>     mov sp, bp
    50 000000DD 5D                  <1>     pop bp
    51                              <1> 
    52 000000DE C3                  <1>     ret
    82                                  %include "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1>         ;------------------------------------
     3                              <1>         ; メッセージを表示
     4                              <1>         ;------------------------------------
     5                              <1> 
     6 000000DF 68[FB00]E8DBFF83C4- <1>         cdecl   puts, .s0
     6 000000E7 02                  <1>
     7                              <1> 
     8                              <1>         ;------------------------------------
     9                              <1>         ; キー入力待ち
    10                              <1>         ;------------------------------------
    11                              <1> .10L:
    12                              <1> 
    13 000000E8 B410                <1>         mov     ah, 0x10
    14 000000EA CD16                <1>         int     0x16
    15                              <1> 
    16 000000EC 3C20                <1>         cmp     al, ' '
    17 000000EE 75F8                <1>         jne     .10L
    18                              <1> 
    19                              <1>         ;------------------------------------
    20                              <1>         ; 開業を出力
    21                              <1>         ;------------------------------------
    22 000000F0 68[1901]E8CAFF83C4- <1>         cdecl   puts, .s1
    22 000000F8 02                  <1>
    23                              <1> 
    24                              <1>         ;------------------------------------
    25                              <1>         ; 再起動
    26                              <1>         ;------------------------------------
    27 000000F9 CD19                <1>         int     0x19
    28                              <1> 
    29                              <1>         ;------------------------------------
    30                              <1>         ; 文字列データ
    31                              <1>         ;------------------------------------
    32 000000FB 0A0D50757368205350- <1> .s0     db  0x0A, 0x0D, "Push SPACE key to reboot...", 0
    32 00000104 414345206B65792074- <1>
    32 0000010D 6F207265626F6F742E- <1>
    32 00000116 2E2E00              <1>
    33 00000119 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    83                                  %include "../modules/real/read_chs.s"
     1                              <1> read_chs:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1>                                             ;    + 8| コピー先
     6                              <1>                                             ;    + 6| セクタ数
     7                              <1>                                             ;    + 4| パラメータバッファ
     8                              <1>                                             ; ------+--------------
     9                              <1>                                             ;    + 2| IP(戻り番地)
    10 0000011E 55                  <1>         push    bp                          ;  BP+ 0| BP(元の値)
    11 0000011F 89E5                <1>         mov     bp, sp                      ; ------+--------------
    12 00000121 6A03                <1>         push    3                           ;    - 2| retry = 3; // リトライ回数
    13 00000123 6A00                <1>         push    0                           ;    - 4| sect  = 0; // 読み込みセクタ数
    14                              <1> 
    15                              <1>         ;----------------------------------
    16                              <1>         ; レジスタの保存
    17                              <1>         ;----------------------------------
    18 00000125 53                  <1>         push    bx
    19 00000126 51                  <1>         push    cx
    20 00000127 52                  <1>         push    dx
    21 00000128 06                  <1>         push    es
    22 00000129 56                  <1>         push    si
    23                              <1> 
    24                              <1>         ;----------------------------------
    25                              <1>         ; 処理の開始
    26                              <1>         ;----------------------------------
    27 0000012A 8B7604              <1>         mov     si, [bp + 4]
    28                              <1> 
    29                              <1>         ;----------------------------------
    30                              <1>         ; CXレジスタの設定
    31                              <1>         ; (BIOSコールの呼び出しに適した型氏に変換)
    32                              <1>         ;----------------------------------
    33 0000012D 8A6C02              <1>         mov     ch, [si + drive.cyln + 0]
    34 00000130 8A4C03              <1>         mov     cl, [si + drive.cyln + 1]
    35 00000133 C0E106              <1>         shl     cl, 6
    36 00000136 0A4C06              <1>         or      cl, [si + drive.sect]
    37                              <1> 
    38                              <1>         ;----------------------------------
    39                              <1>         ; セクタ読み込み
    40                              <1>         ;----------------------------------
    41 00000139 8A7404              <1>         mov     dh, [si + drive.head]
    42 0000013C 8A14                <1>         mov     dl, [si + 0]
    43 0000013E B80000              <1>         mov     ax, 0x0000
    44 00000141 8EC0                <1>         mov     es, ax
    45 00000143 8B5E08              <1>         mov     bx, [bp + 8]
    46                              <1> .10L:
    47                              <1> 
    48 00000146 B402                <1>         mov     ah, 0x02
    49 00000148 8A4606              <1>         mov     al, [bp + 6]
    50                              <1> 
    51 0000014B CD13                <1>         int     0x13
    52 0000014D 7304                <1>         jnc     .11E
    53                              <1> 
    54 0000014F B000                <1>         mov     al, 0
    55 00000151 EB0C                <1>         jmp     .10E
    56                              <1> .11E:
    57                              <1> 
    58 00000153 3C00                <1>         cmp     al, 0
    59 00000155 7508                <1>         jne     .10E
    60                              <1> 
    61 00000157 B80000              <1>         mov     ax, 0
    62 0000015A FF4EFE              <1>         dec     word [bp - 2]
    63 0000015D 75E7                <1>         jnz     .10L
    64                              <1> .10E:
    65 0000015F B400                <1>         mov     ah, 0
    66                              <1> 
    67                              <1>         ;----------------------------------
    68                              <1>         ; レジスタの復帰
    69                              <1>         ;----------------------------------
    70 00000161 5E                  <1>         pop     si
    71 00000162 07                  <1>         pop     es
    72 00000163 5A                  <1>         pop     dx
    73 00000164 59                  <1>         pop     cx
    74 00000165 5B                  <1>         pop     bx
    75                              <1> 
    76                              <1>         ;----------------------------------
    77                              <1>         ; スタックフレームの破棄
    78                              <1>         ;----------------------------------
    79 00000166 89EC                <1>         mov     sp, bp
    80 00000168 5D                  <1>         pop     bp
    81                              <1> 
    82 00000169 C3                  <1>         ret
    84                                  
    85                                  ;************************************************
    86                                  ;   ブートフラグ(先頭512バイトの終了)
    87                                  ;************************************************
    88 0000016A 00<rept>                    times   510 - ($ - $$) db 0x00
    89 000001FE 55AA                        db  0x55, 0xAA
    90                                  
    91                                  ;************************************************
    92                                  ;   ブート処理の第2ステージ
    93                                  ;************************************************
    94                                  stage_2:
    95                                          ;----------------------------------
    96                                          ;  文字列を表示
    97                                          ;----------------------------------
    98 00000200 68[0B02]E8BAFE83C4-             cdecl   puts, .s0
    98 00000208 02                 
    99                                          
   100                                          ;----------------------------------
   101                                          ;  処理の終了
   102                                          ;----------------------------------
   103 00000209 EBFE                            jmp     $
   104                                  
   105                                          ;----------------------------------
   106                                          ;  データ
   107                                          ;----------------------------------
   108 0000020B 326E64207374656765-     .s0     db  "2nd stege...", 0x0A, 0x0D, 0
   108 00000214 2E2E2E0A0D00       
   109                                  
   110                                  ;************************************************
   111                                  ;   パディング
   112                                  ;************************************************
   113 0000021A 00<rept>                        times BOOT_SIZE - ($ - $$)     db  0   ; パディング
