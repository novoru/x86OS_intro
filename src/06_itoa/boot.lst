     1                                      BOOT_LOAD   equ     0x7C00          ; ブートプログラムのロード位置
     2                                  
     3                                      ORG     BOOT_LOAD                   ; ロードアドレスをアセンブラに指示
     4                                  
     5                                  ;**************************************
     6                                  ;   マクロ
     7                                  ;**************************************
     8                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
     9                                  
    10                                  ;**************************************
    11                                  ;   エントリポイント
    12                                  ;**************************************
    13                                  entry:
    14 00000000 EB58                        jmp ipl                             ; IPLへジャンプ
    15                                  
    16                                      ;----------------------------------
    17                                      ;  BPB(BIOS Parameter Block)
    18                                      ;----------------------------------
    19 00000002 90<rept>                    times   90 - ($ - $$) db 0x90       ;
    20                                  
    21                                      ;----------------------------------
    22                                      ;  IPL(Intial Program Loader)
    23                                      ;----------------------------------
    24                                  ipl:
    25 0000005A FA                          cli                                 ; // 割り込み禁止
    26                                  
    27 0000005B B80000                      mov     ax, 0x0000                  ; AX = 0x0000;
    28 0000005E 8ED8                        mov     ds, ax                      ; DS = 0x0000;
    29 00000060 8EC0                        mov     es, ax                      ; ES = 0x0000;
    30 00000062 8ED0                        mov     ss, ax                      ; SS = 0x0000;
    31 00000064 BC007C                      mov     sp, BOOT_LOAD               ; SP = 0x7C00;
    32                                  
    33 00000067 FB                          sti                                 ; // 割り込み許可
    34                                  
    35 00000068 8816[4801]                  mov     [BOOT.DRIVE], dl            ; ブートドライブを保持
    36                                  
    37                                      ;----------------------------------
    38                                      ;  文字列を表示
    39                                      ;----------------------------------
    40 0000006C 68[3001]E8D80083C4-         cdecl   puts, .s0                   ; puts(.s0)
    40 00000074 02                 
    41                                      
    42                                      ;----------------------------------
    43                                      ;  数値を表示
    44                                      ;----------------------------------
    45 00000075 6A016A0A6A0868-             cdecl   itoa,   8086, .s1, 8, 10, 0b0001 ; "    8086"
    45 0000007C [3D01]68961FE8E500-
    45 00000084 83C40A             
    46 00000087 68[3D01]E8BD0083C4-         cdecl   puts, .s1
    46 0000008F 02                 
    47                                      
    48 00000090 6A036A0A6A0868-             cdecl   itoa,   8086, .s1, 8, 10, 0b0011 ; "+   8086"
    48 00000097 [3D01]68961FE8CA00-
    48 0000009F 83C40A             
    49 000000A2 68[3D01]E8A20083C4-         cdecl   puts, .s1
    49 000000AA 02                 
    50                                      
    51 000000AB 6A016A0A6A0868-             cdecl   itoa,  -8086, .s1, 8, 10, 0b0001 ; "-   8086"
    51 000000B2 [3D01]686AE0E8AF00-
    51 000000BA 83C40A             
    52 000000BD 68[3D01]E8870083C4-         cdecl   puts, .s1
    52 000000C5 02                 
    53                                      
    54 000000C6 6A016A0A6A0868-             cdecl   itoa,     -1, .s1, 8, 10, 0b0001 ; "-      1"
    54 000000CD [3D01]6AFFE8950083-
    54 000000D5 C40A               
    55 000000D7 68[3D01]E86D0083C4-         cdecl   puts, .s1
    55 000000DF 02                 
    56                                      
    57 000000E0 6A006A0A6A0868-             cdecl   itoa,     -1, .s1, 8, 10, 0b0000 ; "   65535"
    57 000000E7 [3D01]6AFFE87B0083-
    57 000000EF C40A               
    58 000000F1 68[3D01]E8530083C4-         cdecl   puts, .s1
    58 000000F9 02                 
    59                                      
    60 000000FA 6A006A106A0868-             cdecl   itoa,     -1, .s1, 8, 16, 0b0000 ; "   65535"
    60 00000101 [3D01]6AFFE8610083-
    60 00000109 C40A               
    61 0000010B 68[3D01]E8390083C4-         cdecl   puts, .s1
    61 00000113 02                 
    62                                      
    63 00000114 6A046A026A0868-             cdecl   itoa,     12, .s1, 8,  2, 0b0100 ; "00001100"
    63 0000011B [3D01]6A0CE8470083-
    63 00000123 C40A               
    64 00000125 68[3D01]E81F0083C4-         cdecl   puts, .s1
    64 0000012D 02                 
    65                                  
    66                                      ;----------------------------------
    67                                      ;  処理の終了
    68                                      ;----------------------------------
    69 0000012E EBFE                        jmp     $                           ; while(1); // 無限ループ
    70                                  
    71                                      ;----------------------------------
    72                                      ;  データ
    73                                      ;----------------------------------
    74 00000130 426F6F74696E672E2E-     .s0 db  "Booting...", 0x0A, 0x0D, 0
    74 00000139 2E0A0D00           
    75 0000013D 2D2D2D2D2D2D2D2D0A-     .s1 db  "--------", 0x0A, 0x0D, 0
    75 00000146 0D00               
    76                                  
    77                                  ALIGN 2, db 0
    78                                  BOOT:                                   ; ブートドライブに関する情報
    79 00000148 0000                    .DRIVE:     dw  0                       ; ドライブ番号
    80                                  
    81                                  ;**************************************
    82                                  ;   モジュール
    83                                  ;**************************************
    84                                  %include "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1>     ;---------------------------------
     3                              <1>     ;   スタックフレームの構築
     4                              <1>     ;---------------------------------
     5                              <1>                                         ;   BP+ 4| 文字列へのアドレス
     6 0000014A 55                  <1>     push    bp                          ;   BP+ 2| IP(戻り番地)
     7 0000014B 89E5                <1>     mov     bp, sp                      ;   BP+ 0| BP(元の値)
     8                              <1>                                         ;  ------+------
     9                              <1> 
    10                              <1>     ;---------------------------------
    11                              <1>     ;   レジスタの保存
    12                              <1>     ;---------------------------------
    13 0000014D 50                  <1>     push    ax
    14 0000014E 53                  <1>     push    bx
    15 0000014F 56                  <1>     push    si
    16                              <1> 
    17                              <1>     ;---------------------------------
    18                              <1>     ;   引数の取得
    19                              <1>     ;---------------------------------
    20 00000150 8B7604              <1>     mov     si, [bp + 4]                ; SI = 文字列へのアドレス;
    21                              <1> 
    22                              <1>     ;---------------------------------
    23                              <1>     ;   処理の開始
    24                              <1>     ;---------------------------------
    25 00000153 B40E                <1>     mov ah, 0x0E                        ; テレタイプ式1文字出力
    26 00000155 BB0000              <1>     mov bx, 0x0000                      ; ページ番号と文字色を0に設定
    27 00000158 FC                  <1>     cld                                 ; DF = 0; // アドレス加算
    28                              <1> .10L:                                   ; do
    29                              <1>                                         ; {
    30 00000159 AC                  <1>     lodsb                               ;   AL = *SI++;
    31                              <1>                                         ;
    32 0000015A 3C00                <1>     cmp     al, 0                       ;   if(0 == AL);
    33 0000015C 7404                <1>     je      .10E                        ;     break;
    34                              <1>                                         ;
    35 0000015E CD10                <1>     int     0x10                        ;   Int10(0x0E, AL) // 文字列出力
    36 00000160 EBF7                <1>     jmp     .10L                        ;
    37                              <1> .10E:                                   ; } while(1);
    38                              <1> 
    39                              <1>     ;---------------------------------
    40                              <1>     ;   レジスタの復帰
    41                              <1>     ;---------------------------------
    42 00000162 5E                  <1>     pop si
    43 00000163 5B                  <1>     pop bx
    44 00000164 58                  <1>     pop ax
    45                              <1> 
    46                              <1>     ;---------------------------------
    47                              <1>     ;   スタックフレームの破棄
    48                              <1>     ;---------------------------------
    49 00000165 89EC                <1>     mov sp, bp
    50 00000167 5D                  <1>     pop bp
    51                              <1> 
    52 00000168 C3                  <1>     ret
    85                                  %include "../modules/real/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;------------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;------------------------------------------
     5                              <1>                                                     ;     +12| BP(元の値)
     6                              <1>                                                     ;     +10| BP(元の値)
     7                              <1>                                                     ;     + 8| BP(元の値)
     8                              <1>                                                     ;     + 6| BP(元の値)
     9                              <1>                                                     ;     + 4| BP(元の値)
    10                              <1>                                                     ;     + 2| IP(戻り番地)
    11 00000169 55                  <1>         push    bp                                  ;   BP+ 0| BP(元の値)
    12 0000016A 89E5                <1>         mov     bp, sp                              ; -------+-------------
    13                              <1> 
    14                              <1>         ;------------------------------------------
    15                              <1>         ; レジスタの保存
    16                              <1>         ;------------------------------------------
    17 0000016C 50                  <1>         push    ax
    18 0000016D 53                  <1>         push    bx
    19 0000016E 51                  <1>         push    cx
    20 0000016F 52                  <1>         push    dx
    21 00000170 56                  <1>         push    si
    22 00000171 57                  <1>         push    di
    23                              <1> 
    24                              <1>         ;------------------------------------------
    25                              <1>         ; 引数を取得
    26                              <1>         ;------------------------------------------
    27 00000172 8B4604              <1>         mov     ax, [bp + 4]                        ; val   = 数値;
    28 00000175 8B7606              <1>         mov     si, [bp + 6]                        ; dst   = バッファアドレス;
    29 00000178 8B4E08              <1>         mov     cx, [bp + 8]                        ; size  = 残りバッファサイズ; 
    30                              <1>         
    31 0000017B 89F7                <1>         mov     di, si                              ; // バッファの最後尾
    32 0000017D 01CF                <1>         add     di, cx                              ; dst = &dst[size - 1];
    33 0000017F 4F                  <1>         dec     di                                  ;
    34                              <1> 
    35 00000180 8B5E0C              <1>         mov     bx, word [bp + 12]                  ; flags = オプション;
    36                              <1> 
    37                              <1>         ;------------------------------------------
    38                              <1>         ; 符号付き判定
    39                              <1>         ;------------------------------------------
    40 00000183 F7C30100            <1>         test    bx, 0b0001                          ; if(flags & 0x01)  // 符号付き
    41 00000187 7408                <1> .10Q:   je      .10E                                ; {
    42 00000189 83F800              <1>         cmp     ax, 0                               ;   if(val < 0)
    43 0000018C 7D03                <1> .12Q:   jge     .12E                                ;   {
    44 0000018E 83CB02              <1>         or      bx, 0b0010                          ;      flags |= 2;  // 符号表示
    45                              <1> .12E:                                               ;   }
    46                              <1> .10E:                                               ; }
    47                              <1> 
    48                              <1>         ;------------------------------------------
    49                              <1>         ; 符号出力判定
    50                              <1>         ;------------------------------------------
    51 00000191 F7C31A27            <1>         test    bx, 010010                          ; if(flags & 0x02)  // 符号出力判定
    52 00000195 7410                <1> .20Q:   je      .20E                                ; {
    53 00000197 83F800              <1>         cmp     ax, 0                               ;    if(val < 0)
    54 0000019A 7D07                <1> .22Q:   jge     .22F                                ;    {
    55 0000019C F7D8                <1>         neg     ax                                  ;       val *= -1;  // 符号判定
    56 0000019E C6042D              <1>         mov     [si], byte '-'                      ;       *dst = '-'; // 符号表示
    57 000001A1 EB03                <1>         jmp     .22E                                ;    }
    58                              <1> .22F:                                               ;    else
    59                              <1>                                                     ;    {
    60 000001A3 C6042B              <1>         mov     [si], byte '+'                      ;       *dst = '+';    // 符号表示
    61                              <1> .22E:                                               ;    }
    62 000001A6 49                  <1>         dec     cx                                  ;    size--;           // 残りバッファサイズの減算
    63                              <1> .20E:                                               ; }
    64                              <1> 
    65                              <1>         ;------------------------------------------
    66                              <1>         ; ASCII変換
    67                              <1>         ;------------------------------------------
    68 000001A7 8B5E0A              <1>         mov     bx, [bp + 10]                       ; BX = 基数;
    69                              <1> .30L:                                               ; do
    70                              <1>                                                     ; {
    71 000001AA BA0000              <1>         mov     dx, 0                               ;
    72 000001AD F7F3                <1>         div     bx                                  ;   DX = DX:AX % 基数;
    73                              <1>                                                     ;   AX = DX:AX / 基数;
    74                              <1>                                                     ;
    75 000001AF 89D6                <1>         mov     si, dx                              ;   // テーブル参照
    76 000001B1 8A94[D901]          <1>         mov     dl, byte [.ascii + si]              ;   DL = ASCII[DX];
    77                              <1>                                                     ;
    78 000001B5 8815                <1>         mov     [di], dl                            ;   *dst = DL;
    79 000001B7 4F                  <1>         dec     di                                  ;   dst--;
    80                              <1>                                                     ;
    81 000001B8 83F800              <1>         cmp     ax, 0                               ;
    82 000001BB E0ED                <1>         loopnz  .30L                                ; } while(AX);
    83                              <1> .30E:
    84                              <1> 
    85                              <1>         ;------------------------------------------
    86                              <1>         ; 空欄を埋める
    87                              <1>         ;------------------------------------------
    88 000001BD 83F900              <1>         cmp     cx, 0                               ; if(size)
    89 000001C0 740D                <1> .40Q:   je      .40E                                ; {
    90 000001C2 B020                <1>         mov     al, ' '                             ;   AL = ' ';   // ' 'で埋める(デフォルト値)
    91 000001C4 837E0C04            <1>         cmp     [bp + 12], word 0b0100              ;   if(flags & 0x04)
    92 000001C8 7502                <1> .42Q:   jne     .42E                                ;   {
    93 000001CA B030                <1>         mov     al, '0'                             ;       AL = '0';
    94                              <1> .42E:                                               ;   }
    95 000001CC FD                  <1>         std                                         ;   // DF = 1(-方向)
    96 000001CD F3AA                <1>         rep     stosb                               ;   while(--CX) *DI -- = ' ';
    97                              <1> .40E:                                               ; }
    98                              <1> 
    99                              <1>         ;------------------------------------------
   100                              <1>         ; レジスタの復帰
   101                              <1>         ;------------------------------------------
   102 000001CF 5F                  <1>         pop     di
   103 000001D0 5E                  <1>         pop     si
   104 000001D1 5A                  <1>         pop     dx
   105 000001D2 59                  <1>         pop     cx
   106 000001D3 5B                  <1>         pop     bx
   107 000001D4 58                  <1>         pop     ax
   108                              <1> 
   109                              <1>         ;------------------------------------------
   110                              <1>         ; スタックフレームの破棄
   111                              <1>         ;------------------------------------------
   112 000001D5 89EC                <1>         mov     sp, bp
   113 000001D7 5D                  <1>         pop     bp
   114                              <1> 
   115 000001D8 C3                  <1>         ret
   116                              <1> 
   117 000001D9 303132333435363738- <1> .ascii  db      "0123456789ABCDEF"                  ; 変換テーブル
   117 000001E2 39414243444546      <1>
    86                                  
    87                                  ;**************************************
    88                                  ;   ブートフラグ(先頭512バイトの終了)
    89                                  ;**************************************
    90 000001E9 00<rept>                    times   510 - ($ - $$) db 0x00
    91 000001FE 55AA                        db  0x55, 0xAA
