     1                                  %include "../include/define.s"
     1                              <1>     BOOT_LOAD       equ     0x7C00
     2                              <1>     BOOT_END        equ     (BOOT_LOAD + BOOT_SIZE)
     3                              <1> 
     4                              <1>     BOOT_SIZE       equ     (1024 * 8)
     5                              <1>     SECT_SIZE       equ     (512)
     6                              <1>     BOOT_SECT       equ     (BOOT_SIZE / SECT_SIZE)
     7                              <1> 
     8                              <1>     E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>     KERNEL_LOAD     equ     0x0010_1000
    11                              <1>     KERNEL_SIZE     equ     (1024 * 8)      ; カーネルサイズ
    12                              <1>     KERNEL_SECT     equ     (KERNEL_SIZE / SECT_SIZE)
    13                              <1> 
    14                              <1>     VECT_BASE       equ     0x0010_0000     ; 0010_0000:0010_07FF
    15                              <1> 
    16                              <1>     STACK_BASE      equ     0x0010_3000
    17                              <1>     STACK_SIZE      equ     1024
    18                              <1> 
    19                              <1>     SP_TASK_0       equ     STACK_BASE + (STACK_SIZE * 1)
    20                              <1>     SP_TASK_1       equ     STACK_BASE + (STACK_SIZE * 2)
     2                                  %include "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> %macro  set_vect 1-*
    18                              <1>         push    eax
    19                              <1>         push    edi
    20                              <1> 
    21                              <1>         mov     edi, VECT_BASE + (%1 * 8)
    22                              <1>         mov     eax, %2
    23                              <1> 
    24                              <1>         mov     [edi + 0], ax
    25                              <1>         shr     eax, 16
    26                              <1>         mov     [edi + 6], ax
    27                              <1> 
    28                              <1>         pop     edi
    29                              <1>         pop     eax
    30                              <1> %endmacro
    31                              <1> 
    32                              <1> %macro  outp 2
    33                              <1>         mov     al, %2
    34                              <1>         out     %1, al
    35                              <1> %endmacro
    36                              <1> 
    37                              <1> %macro  set_desc 2-*
    38                              <1>         push    eax
    39                              <1>         push    edi
    40                              <1> 
    41                              <1>         mov     edi, %1
    42                              <1>         mov     eax, %2
    43                              <1>     %if 3 == %0
    44                              <1>         mov     [edi + 0], %3
    45                              <1>     %endif
    46                              <1> 
    47                              <1>         mov     [edi + 2], ax
    48                              <1>         shr     eax, 16
    49                              <1>         mov     [edi + 4], al
    50                              <1>         mov     [edi + 7], ah
    51                              <1> 
    52                              <1>         pop     edi
    53                              <1>         pop     eax
    54                              <1> %endmacro
    55                              <1> 
    56                              <1> 
    57                              <1> 
    58                              <1> struc drive
    59 00000000 <res 00000002>      <1>         .no     resw    1           ; ドライブ番号
    60 00000002 <res 00000002>      <1>         .cyln   resw    1           ; シリンダ
    61 00000004 <res 00000002>      <1>         .head   resw    1           ; ヘッド
    62 00000006 <res 00000002>      <1>         .sect   resw    1           ; セクタ
    63                              <1> endstruc
    64                              <1> 
    65                              <1> %define     RING_ITEM_SIZE      (1 << 4)
    66                              <1> %define     RING_INDEX_MASK     (RING_ITEM_SIZE - 1)
    67                              <1> 
    68                              <1> struc ring_buff
    69 00000000 <res 00000004>      <1>         .rp     resd    1
    70 00000004 <res 00000004>      <1>         .wp     resd    1
    71 00000008 <res 00000010>      <1>         .item   resb    RING_ITEM_SIZE
    72                              <1> endstruc
     3                                  
     4                                          ORG     KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  ;************************************************
     8                                  ;   エントリポイント
     9                                  ;************************************************
    10                                  kernel:
    11                                          ;----------------------------------
    12                                          ; フォントアドレスを取得
    13                                          ;----------------------------------
    14 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE      ; ESI = 0x7C00 + 512;
    15 00000005 0FB706                          movzx   eax, word [esi + 0]             ; EAX = [ESI + 0]; // セグメント
    16 00000008 0FB75E02                        movzx   ebx, word [esi + 2]             ; EBX = [ESI + 2]; // オフセット
    17 0000000C C1E004                          shl     eax, 4                          ; EAX <<= 4;
    18 0000000F 01D8                            add     eax, ebx                        ; EAX += EBX;
    19 00000011 A3[7C010000]                    mov     [FONT_ADR], eax                 ; FONT_ADR[0] = EAX;
    20                                          
    21                                          ;----------------------------------
    22                                          ; TSSディスクリプタの設定
    23                                          ;----------------------------------
    24                                          set_desc        GDT.tss_0, TSS_0
    24 00000016 50                  <1>  push eax
    24 00000017 57                  <1>  push edi
    24                              <1> 
    24 00000018 BF[74020000]        <1>  mov edi, %1
    24 0000001D B8[84010000]        <1>  mov eax, %2
    24                              <1>  %if 3 == %0
    24                              <1>  mov [edi + 0], %3
    24                              <1>  %endif
    24                              <1> 
    24 00000022 66894702            <1>  mov [edi + 2], ax
    24 00000026 C1E810              <1>  shr eax, 16
    24 00000029 884704              <1>  mov [edi + 4], al
    24 0000002C 886707              <1>  mov [edi + 7], ah
    24                              <1> 
    24 0000002F 5F                  <1>  pop edi
    24 00000030 58                  <1>  pop eax
    25                                          set_desc        GDT.tss_1, TSS_1
    25 00000031 50                  <1>  push eax
    25 00000032 57                  <1>  push edi
    25                              <1> 
    25 00000033 BF[7C020000]        <1>  mov edi, %1
    25 00000038 B8[EC010000]        <1>  mov eax, %2
    25                              <1>  %if 3 == %0
    25                              <1>  mov [edi + 0], %3
    25                              <1>  %endif
    25                              <1> 
    25 0000003D 66894702            <1>  mov [edi + 2], ax
    25 00000041 C1E810              <1>  shr eax, 16
    25 00000044 884704              <1>  mov [edi + 4], al
    25 00000047 886707              <1>  mov [edi + 7], ah
    25                              <1> 
    25 0000004A 5F                  <1>  pop edi
    25 0000004B 58                  <1>  pop eax
    26                                  
    27                                          ;----------------------------------
    28                                          ; LDTの設定
    29                                          ;----------------------------------
    30                                          set_desc        GDT.ldt, LDT, word LDT_LIMIT
    30 0000004C 50                  <1>  push eax
    30 0000004D 57                  <1>  push edi
    30                              <1> 
    30 0000004E BF[6C020000]        <1>  mov edi, %1
    30 00000053 B8[8A020000]        <1>  mov eax, %2
    30                              <1>  %if 3 == %0
    30 00000058 66C7072700          <1>  mov [edi + 0], %3
    30                              <1>  %endif
    30                              <1> 
    30 0000005D 66894702            <1>  mov [edi + 2], ax
    30 00000061 C1E810              <1>  shr eax, 16
    30 00000064 884704              <1>  mov [edi + 4], al
    30 00000067 886707              <1>  mov [edi + 7], ah
    30                              <1> 
    30 0000006A 5F                  <1>  pop edi
    30 0000006B 58                  <1>  pop eax
    31                                  
    32                                          ;----------------------------------
    33                                          ; GDTをロード(再設定)
    34                                          ;----------------------------------
    35 0000006C 0F0115[84020000]                lgdt    [GDTR]
    36                                  
    37                                          ;----------------------------------
    38                                          ; スタックの設定
    39                                          ;----------------------------------
    40 00000073 BC00341000                      mov     esp, SP_TASK_0
    41                                  
    42                                          ;----------------------------------
    43                                          ; タスクレジスタの初期化
    44                                          ;----------------------------------
    45 00000078 66B82000                        mov     ax, SS_TASK_0
    46 0000007C 0F00D8                          ltr     ax
    47                                  
    48                                          ;----------------------------------
    49                                          ; 初期化
    50                                          ;----------------------------------
    51 0000007F E82A080000                      cdecl   init_int
    52 00000084 E8AB090000                      cdecl   init_pic
    53                                  
    54                                          set_vect        0x00, int_zero_div
    54 00000089 50                  <1>  push eax
    54 0000008A 57                  <1>  push edi
    54                              <1> 
    54 0000008B BF00001000          <1>  mov edi, VECT_BASE + (%1 * 8)
    54 00000090 B8[160A0000]        <1>  mov eax, %2
    54                              <1> 
    54 00000095 668907              <1>  mov [edi + 0], ax
    54 00000098 C1E810              <1>  shr eax, 16
    54 0000009B 66894706            <1>  mov [edi + 6], ax
    54                              <1> 
    54 0000009F 5F                  <1>  pop edi
    54 000000A0 58                  <1>  pop eax
    55                                          set_vect        0x20, int_timer
    55 000000A1 50                  <1>  push eax
    55 000000A2 57                  <1>  push edi
    55                              <1> 
    55 000000A3 BF00011000          <1>  mov edi, VECT_BASE + (%1 * 8)
    55 000000A8 B8[B2020000]        <1>  mov eax, %2
    55                              <1> 
    55 000000AD 668907              <1>  mov [edi + 0], ax
    55 000000B0 C1E810              <1>  shr eax, 16
    55 000000B3 66894706            <1>  mov [edi + 6], ax
    55                              <1> 
    55 000000B7 5F                  <1>  pop edi
    55 000000B8 58                  <1>  pop eax
    56                                          set_vect        0x21, int_keyboard
    56 000000B9 50                  <1>  push eax
    56 000000BA 57                  <1>  push edi
    56                              <1> 
    56 000000BB BF08011000          <1>  mov edi, VECT_BASE + (%1 * 8)
    56 000000C0 B8[520B0000]        <1>  mov eax, %2
    56                              <1> 
    56 000000C5 668907              <1>  mov [edi + 0], ax
    56 000000C8 C1E810              <1>  shr eax, 16
    56 000000CB 66894706            <1>  mov [edi + 6], ax
    56                              <1> 
    56 000000CF 5F                  <1>  pop edi
    56 000000D0 58                  <1>  pop eax
    57                                          set_vect        0x28, int_rtc
    57 000000D1 50                  <1>  push eax
    57 000000D2 57                  <1>  push edi
    57                              <1> 
    57 000000D3 BF40011000          <1>  mov edi, VECT_BASE + (%1 * 8)
    57 000000D8 B8[5F0A0000]        <1>  mov eax, %2
    57                              <1> 
    57 000000DD 668907              <1>  mov [edi + 0], ax
    57 000000E0 C1E810              <1>  shr eax, 16
    57 000000E3 66894706            <1>  mov [edi + 6], ax
    57                              <1> 
    57 000000E7 5F                  <1>  pop edi
    57 000000E8 58                  <1>  pop eax
    58                                  
    59                                          ;----------------------------------
    60                                          ; デバイスの割り込み許可
    61                                          ;----------------------------------
    62 000000E9 6A10E89A0900006683-             cdecl   rtc_int_en, 0x10
    62 000000F2 C404               
    63 000000F4 E8970A0000                      cdecl   int_en_timer0
    64                                  
    65                                          ;---------------------------------------
    66                                          ; IMR(割り込みマスクレジスタ)の設定
    67                                          ;---------------------------------------
    68                                          outp    0x21, 0b1111_1000
    68 000000F9 B0F8                <1>  mov al, %2
    68 000000FB E621                <1>  out %1, al
    69                                          outp    0xA1, 0b1111_1110
    69 000000FD B0FE                <1>  mov al, %2
    69 000000FF E6A1                <1>  out %1, al
    70                                  
    71                                          ;---------------------------------------
    72                                          ; CPUの割り込み許可
    73                                          ;---------------------------------------
    74 00000101 FB                              sti
    75                                  
    76                                          ;---------------------------------------
    77                                          ; フォントの一覧表示
    78                                          ;---------------------------------------
    79 00000102 6A0D6A3FE891030000-             cdecl   draw_font, 63, 13               ; // フォントの一覧表示
    79 0000010B 6683C408           
    80 0000010F 6A046A3FE812040000-             cdecl   draw_color_bar, 63, 4           ; // カラーバーの表示
    80 00000118 6683C408           
    81                                  
    82                                          ;---------------------------------------
    83                                          ; 文字列の表示
    84                                          ;---------------------------------------
    85 0000011C 68[64010000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    85 00000124 00006A0E6A19E8B203-
    85 0000012D 00006683C410       
    86                                  
    87                                  .10L:
    88                                  
    89                                          ;----------------------------------
    90                                          ; 回転する棒を表示
    91                                          ;----------------------------------
    92 00000133 E8670A0000                      cdecl   draw_rotation_bar
    93                                  
    94                                          ;----------------------------------
    95                                          ; キーコードの取得
    96                                          ;----------------------------------
    97 00000138 68[78010000]68-                 cdecl   ring_rd, _KEY_BUFF, .int_key
    97 0000013E [780B0000]E8570900-
    97 00000146 006683C408         
    98 0000014B 83F800                          cmp     eax, 0
    99 0000014E 7412                            je      .10E
   100                                  
   101                                          ;----------------------------------
   102                                          ; キーコードの表示
   103                                          ;----------------------------------
   104 00000150 68[780B0000]6A1D6A-             cdecl   draw_key, 2, 29, _KEY_BUFF
   104 00000158 02E8A10900006683C4-
   104 00000161 0C                 
   105                                  .10E:
   106 00000162 EBCF                            jmp     .10L
   107                                  
   108 00000164 2048656C6C6F2C206B-     .s0:    db  " Hello, kernel! ", 0
   108 0000016D 65726E656C212000   
   109                                  
   110 00000175 00<rept>                ALIGN 4, db 0
   111 00000178 00000000                .int_key:       dd  0
   112                                  
   113                                  ALIGN 4, db 0
   114 0000017C 00000000                FONT_ADR:       dd  0
   115 00000180 00000000                RTC_TIME:       dd  0
   116                                  
   117                                  ;************************************************
   118                                  ;   タスク
   119                                  ;************************************************
   120                                  %include  "descriptor.s"
     1                              <1> ;************************************************************************
     2                              <1> ; TSS
     3                              <1> ;************************************************************************
     4                              <1> TSS_0:
     5 00000184 00000000            <1> .link:      dd  0
     6 00000188 00321000            <1> .esp0:      dd  SP_TASK_0 - 512
     7 0000018C 10000000            <1> .ss0:       dd  DS_KERNEL
     8 00000190 00000000            <1> .esp1:      dd  0
     9 00000194 00000000            <1> .ss1:       dd  0
    10 00000198 00000000            <1> .esp2:      dd  0
    11 0000019C 00000000            <1> .ss2:       dd  0
    12 000001A0 00000000            <1> .cr3:       dd  0
    13 000001A4 00000000            <1> .eip:       dd  0
    14 000001A8 00000000            <1> .eflags:    dd  0
    15 000001AC 00000000            <1> .eax:       dd  0
    16 000001B0 00000000            <1> .ecx:       dd  0
    17 000001B4 00000000            <1> .edx:       dd  0
    18 000001B8 00000000            <1> .ebx:       dd  0
    19 000001BC 00000000            <1> .esp:       dd  0
    20 000001C0 00000000            <1> .ebp:       dd  0
    21 000001C4 00000000            <1> .esi:       dd  0
    22 000001C8 00000000            <1> .edi:       dd  0
    23 000001CC 00000000            <1> .es:        dd  0
    24 000001D0 00000000            <1> .cs:        dd  0
    25 000001D4 00000000            <1> .ss:        dd  0
    26 000001D8 00000000            <1> .ds:        dd  0
    27 000001DC 00000000            <1> .fs:        dd  0
    28 000001E0 00000000            <1> .gs:        dd  0
    29 000001E4 00000000            <1> .ldt:       dd  0
    30 000001E8 00000000            <1> .io:        dd  0
    31                              <1> 
    32                              <1> TSS_1:
    33 000001EC 00000000            <1> .link:      dd  0
    34 000001F0 00361000            <1> .esp0:      dd  SP_TASK_1 - 512
    35 000001F4 10000000            <1> .ss0:       dd  DS_KERNEL
    36 000001F8 00000000            <1> .esp1:      dd  0
    37 000001FC 00000000            <1> .ss1:       dd  0
    38 00000200 00000000            <1> .esp2:      dd  0
    39 00000204 00000000            <1> .ss2:       dd  0
    40 00000208 00000000            <1> .cr3:       dd  0
    41 0000020C [F0020000]          <1> .eip:       dd  task_1
    42 00000210 02020000            <1> .eflags:    dd  0x0202
    43 00000214 00000000            <1> .eax:       dd  0
    44 00000218 00000000            <1> .ecx:       dd  0
    45 0000021C 00000000            <1> .edx:       dd  0
    46 00000220 00000000            <1> .ebx:       dd  0
    47 00000224 00381000            <1> .esp:       dd  SP_TASK_1
    48 00000228 00000000            <1> .ebp:       dd  0
    49 0000022C 00000000            <1> .esi:       dd  0
    50 00000230 00000000            <1> .edi:       dd  0
    51 00000234 24000000            <1> .es:        dd  DS_TASK_1
    52 00000238 1C000000            <1> .cs:        dd  CS_TASK_1
    53 0000023C 24000000            <1> .ss:        dd  DS_TASK_1
    54 00000240 24000000            <1> .ds:        dd  DS_TASK_1
    55 00000244 24000000            <1> .fs:        dd  DS_TASK_1
    56 00000248 24000000            <1> .gs:        dd  DS_TASK_1
    57 0000024C 18000000            <1> .ldt:       dd  SS_LDT
    58 00000250 00000000            <1> .io:        dd  0
    59                              <1> 
    60                              <1> ;************************************************************************
    61                              <1> ; グローバルディスクリプタテーブル
    62                              <1> ;************************************************************************
    63 00000254 0000000000000000    <1> GDT:            dq  0x0000000000000000
    64 0000025C FFFF0000009ACF00    <1> .cs_kernel:     dq  0x00CF9A000000FFFF
    65 00000264 FFFF00000092CF00    <1> .ds_kernel:     dq  0x00CF92000000FFFF
    66 0000026C 0000000000820000    <1> .ldt            dq  0x0000820000000000
    67 00000274 6700000000890000    <1> .tss_0:         dq  0x0000890000000067
    68 0000027C 6700000000890000    <1> .tss_1:         dq  0x0000890000000067
    69                              <1> .end:
    70                              <1> 
    71                              <1> CS_KERNEL       equ .cs_kernel  - GDT
    72                              <1> DS_KERNEL       equ .ds_kernel  - GDT
    73                              <1> SS_LDT          equ .ldt        - GDT
    74                              <1> SS_TASK_0       equ .tss_0      - GDT
    75                              <1> SS_TASK_1       equ .tss_1      - GDT
    76                              <1> 
    77 00000284 2F00                <1> GDTR:   dw      GDT.end - GDT - 1
    78 00000286 [54020000]          <1>         dd      GDT
    79                              <1> 
    80                              <1> ;************************************************************************
    81                              <1> ; ローカルディスクリプタテーブル
    82                              <1> ;************************************************************************
    83 0000028A 0000000000000000    <1> LDT:            dq  0x0000000000000000
    84 00000292 FFFF0000009ACF00    <1> .cs_task_0:     dq  0x00CF9A000000FFFF
    85 0000029A FFFF00000092CF00    <1> .ds_task_0:     dq  0x00CF92000000FFFF
    86 000002A2 FFFF0000009ACF00    <1> .cs_task_1:     dq  0x00CF9A000000FFFF
    87 000002AA FFFF00000092CF00    <1> .ds_task_1:     dq  0x00CF92000000FFFF
    88                              <1> .end:
    89                              <1> 
    90                              <1> CS_TASK_0       equ (.cs_task_0 - LDT) | 4
    91                              <1> DS_TASK_0       equ (.ds_task_0 - LDT) | 4
    92                              <1> CS_TASK_1       equ (.cs_task_1 - LDT) | 4
    93                              <1> DS_TASK_1       equ (.ds_task_1 - LDT) | 4
    94                              <1> 
    95                              <1> LDT_LIMIT       equ .end        - LDT - 1
   121                                  %include  "modules/int_timer.s"
     1                              <1> int_timer:
     2                              <1>         ;----------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;----------------------------------
     5 000002B2 60                  <1>         pusha
     6 000002B3 1E                  <1>         push    ds
     7 000002B4 06                  <1>         push    es
     8                              <1> 
     9                              <1>         ;----------------------------------
    10                              <1>         ; データ用セグメントの設定
    11                              <1>         ;----------------------------------
    12 000002B5 66B81000            <1>         mov     ax, 0x0010
    13 000002B9 8ED8                <1>         mov     ds, ax
    14 000002BB 8EC0                <1>         mov     es, ax
    15                              <1> 
    16                              <1>         ;----------------------------------
    17                              <1>         ; TICK
    18                              <1>         ;----------------------------------
    19 000002BD FF05[E8020000]      <1>         inc     dword [TIMER_COUNT]
    20                              <1> 
    21                              <1>         ;----------------------------------
    22                              <1>         ; 割り込みフラグをクリア(EOI)
    23                              <1>         ;----------------------------------
    24                              <1>         outp    0x20, 0x20
    24 000002C3 B020                <2>  mov al, %2
    24 000002C5 E620                <2>  out %1, al
    25                              <1> 
    26                              <1>         ;----------------------------------
    27                              <1>         ; タスクの切り替え
    28                              <1>         ;----------------------------------
    29 000002C7 660F00C8            <1>         str     ax
    30 000002CB 6683F828            <1>         cmp     ax, SS_TASK_1
    31 000002CF 7409                <1>         je      .11L
    32                              <1> 
    33 000002D1 EA000000002800      <1>         jmp     SS_TASK_1:0
    34 000002D8 EB09                <1>         jmp     .10E
    35                              <1> .11L:
    36 000002DA EA000000002000      <1>         jmp     SS_TASK_0:0
    37 000002E1 EB00                <1>         jmp     .10E
    38                              <1> .10E:
    39                              <1> 
    40                              <1>         ;----------------------------------
    41                              <1>         ; レジスタの復帰
    42                              <1>         ;----------------------------------
    43 000002E3 07                  <1>         pop     es
    44 000002E4 1F                  <1>         pop     ds
    45 000002E5 61                  <1>         popa
    46                              <1> 
    47 000002E6 CF                  <1>         iret
    48                              <1> 
    49 000002E7 00                  <1> ALIGN 4, db 0
    50 000002E8 0000000000000000    <1> TIMER_COUNT:    dq  0
   122                                  %include  "tasks/task_1.s"
     1                              <1> task_1:
     2                              <1>         ;----------------------------------
     3                              <1>         ; 文字列の表示
     4                              <1>         ;----------------------------------
     5 000002F0 68[1E030000]6A076A- <1>         cdecl   draw_str, 63, 0, 0x07, .s0
     5 000002F8 006A3FE8E101000066- <1>
     5 00000301 83C410              <1>
     6                              <1> 
     7                              <1> .10L:
     8                              <1> 
     9                              <1>         ;----------------------------------
    10                              <1>         ; 時刻の表示
    11                              <1>         ;----------------------------------
    12 00000304 A1[80010000]        <1>         mov     eax, [RTC_TIME]
    13 00000309 5068000700006A006A- <1>         cdecl   draw_time, 72, 0, 0x0700, eax
    13 00000312 48E81B0500006683C4- <1>
    13 0000031B 10                  <1>
    14                              <1> 
    15 0000031C EBE6                <1>         jmp     .10L
    16                              <1> 
    17                              <1>         ;----------------------------------
    18                              <1>         ; データ
    19                              <1>         ;----------------------------------
    20 0000031E 5461736B2D3100      <1> .s0     db  "Task-1", 0
   123                                  
   124                                  ;************************************************
   125                                  ;   モジュール
   126                                  ;************************************************
   127                                  %include  "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5                              <1>                                             ;    + 8| プレーン (インデックス)
     6                              <1>                                             ; ------+---------------
     7 00000325 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
     8 00000326 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
     9                              <1>                                             ;-------+---------------
    10                              <1> 
    11                              <1>         ;---------------------------------
    12                              <1>         ; レジスタの保存
    13                              <1>         ;---------------------------------
    14 00000328 50                  <1>         push    eax
    15 00000329 52                  <1>         push    edx
    16                              <1> 
    17                              <1>         ;---------------------------------
    18                              <1>         ; 読み込みプレーンの選択
    19                              <1>         ;---------------------------------
    20 0000032A 8A6508              <1>         mov     ah, [ebp + 8]
    21 0000032D 80E403              <1>         and     ah, 0x03
    22 00000330 B004                <1>         mov     al, 0x04
    23 00000332 66BACE03            <1>         mov     dx, 0x03CE
    24 00000336 66EF                <1>         out     dx, ax
    25                              <1> 
    26                              <1>         ;---------------------------------
    27                              <1>         ; レジスタの復帰
    28                              <1>         ;---------------------------------
    29 00000338 5A                  <1>         pop     edx
    30 00000339 58                  <1>         pop     eax
    31                              <1> 
    32                              <1>         ;---------------------------------
    33                              <1>         ; スタックフレームの破棄
    34                              <1>         ;---------------------------------
    35 0000033A 89EC                <1>         mov     esp, ebp
    36 0000033C 5D                  <1>         pop     ebp
    37                              <1> 
    38 0000033D C3                  <1>         ret
    39                              <1> 
    40                              <1> vga_set_write_plane:
    41                              <1>         ;---------------------------------
    42                              <1>         ; スタックフレームの構築
    43                              <1>         ;---------------------------------
    44                              <1>                                             ;    + 8| プレーン (ビット指定)
    45                              <1>                                             ; ------+---------------
    46 0000033E 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
    47 0000033F 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
    48                              <1>                                             ;-------+---------------
    49                              <1> 
    50                              <1>         ;---------------------------------
    51                              <1>         ; レジスタの保存
    52                              <1>         ;---------------------------------
    53 00000341 50                  <1>         push    eax
    54 00000342 52                  <1>         push    edx
    55                              <1> 
    56                              <1>         ;---------------------------------
    57                              <1>         ; 書き込みプレーンの選択
    58                              <1>         ;---------------------------------
    59 00000343 8A6508              <1>         mov     ah, [ebp + 8]
    60 00000346 80E40F              <1>         and     ah, 0x0F
    61 00000349 B002                <1>         mov     al, 0x02
    62 0000034B 66BAC403            <1>         mov     dx, 0x03C4
    63 0000034F 66EF                <1>         out     dx, ax
    64                              <1> 
    65                              <1>         ;---------------------------------
    66                              <1>         ; レジスタの復帰
    67                              <1>         ;---------------------------------
    68 00000351 5A                  <1>         pop     edx
    69 00000352 58                  <1>         pop     eax
    70                              <1> 
    71                              <1>         ;---------------------------------
    72                              <1>         ; スタックフレームの破棄
    73                              <1>         ;---------------------------------
    74 00000353 89EC                <1>         mov     esp, ebp
    75 00000355 5D                  <1>         pop     ebp
    76                              <1> 
    77 00000356 C3                  <1>         ret
    78                              <1> 
    79                              <1> vram_font_copy:
    80                              <1>         ;---------------------------------
    81                              <1>         ; スタックフレームの構築
    82                              <1>         ;---------------------------------
    83                              <1>                                             ;    +20| 描画色
    84                              <1>                                             ;    +16| プレーン(ビット指定)
    85                              <1>                                             ;    +12| VRAMアドレス
    86                              <1>                                             ;    + 8| フォントアドレス
    87                              <1>                                             ; ------+---------------
    88 00000357 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
    89 00000358 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
    90                              <1>                                             ; ------+---------------
    91                              <1> 
    92                              <1>         ;---------------------------------
    93                              <1>         ; レジスタの保存
    94                              <1>         ;---------------------------------
    95 0000035A 50                  <1>         push    eax
    96 0000035B 53                  <1>         push    ebx
    97 0000035C 51                  <1>         push    ecx
    98 0000035D 52                  <1>         push    edx
    99 0000035E 56                  <1>         push    esi
   100 0000035F 57                  <1>         push    edi
   101                              <1> 
   102                              <1>         ;---------------------------------
   103                              <1>         ; 処理の開始
   104                              <1>         ;---------------------------------
   105 00000360 8B7508              <1>         mov     esi, [ebp + 8]
   106 00000363 8B7D0C              <1>         mov     edi, [ebp +12]
   107 00000366 0FB64510            <1>         movzx   eax, byte [ebp +16]
   108 0000036A 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   109                              <1> 
   110 0000036E 84C7                <1>         test    bh, al
   111 00000370 0F94C6              <1>         setz    dh
   112 00000373 FECE                <1>         dec     dh
   113                              <1> 
   114 00000375 84C3                <1>         test    bl, al
   115 00000377 0F94C2              <1>         setz    dl
   116 0000037A FECA                <1>         dec     dl
   117                              <1> 
   118                              <1>         ;---------------------------------
   119                              <1>         ; 16ドットフォントのコピー
   120                              <1>         ;---------------------------------
   121 0000037C FC                  <1>         cld
   122                              <1> 
   123 0000037D B910000000          <1>         mov     ecx, 16
   124                              <1> .10L:
   125                              <1>         ;---------------------------------
   126                              <1>         ; フォントマスクの作成
   127                              <1>         ;---------------------------------
   128 00000382 AC                  <1>         lodsb
   129 00000383 88C4                <1>         mov     ah, al
   130 00000385 F6D4                <1>         not     ah
   131                              <1> 
   132                              <1>         ;---------------------------------
   133                              <1>         ; 前景色
   134                              <1>         ;---------------------------------
   135                              <1> 
   136 00000387 20D0                <1>         and     al, dl
   137                              <1> 
   138                              <1>         ;---------------------------------
   139                              <1>         ; 背景色
   140                              <1>         ;---------------------------------
   141 00000389 F7C310000000        <1>         test    ebx, 0x0010
   142 0000038F 7404                <1>         jz      .11F
   143 00000391 2227                <1>         and     ah, [edi]
   144 00000393 EB02                <1>         jmp     .11E
   145                              <1> .11F:
   146                              <1> 
   147 00000395 20F4                <1>         and     ah, dh
   148                              <1> .11E:
   149                              <1> 
   150                              <1>         ;---------------------------------
   151                              <1>         ; 前景色と背景色を合成
   152                              <1>         ;---------------------------------
   153 00000397 08E0                <1>         or      al, ah
   154                              <1> 
   155                              <1>         ;---------------------------------
   156                              <1>         ; 新しい値を出力
   157                              <1>         ;---------------------------------
   158 00000399 8807                <1>         mov     [edi], al
   159                              <1> 
   160 0000039B 83C750              <1>         add     edi, 80
   161 0000039E E2E2                <1>         loop    .10L
   162                              <1> .10E:
   163                              <1> 
   164                              <1>         ;---------------------------------
   165                              <1>         ; レジスタの復帰
   166                              <1>         ;---------------------------------
   167 000003A0 5F                  <1>         pop     edi
   168 000003A1 5E                  <1>         pop     esi
   169 000003A2 5A                  <1>         pop     edx
   170 000003A3 59                  <1>         pop     ecx
   171 000003A4 5B                  <1>         pop     ebx
   172 000003A5 58                  <1>         pop     eax
   173                              <1> 
   174                              <1>         ;---------------------------------
   175                              <1>         ; スタックフレームの破棄
   176                              <1>         ;---------------------------------
   177 000003A6 89EC                <1>         mov     esp, ebp
   178 000003A8 5D                  <1>         pop     ebp
   179                              <1> 
   180 000003A9 C3                  <1>         ret
   181                              <1> 
   182                              <1> vram_bit_copy:
   183                              <1>         ;---------------------------------------
   184                              <1>         ; スタックフレームの構築
   185                              <1>         ;---------------------------------------
   186                              <1>                                                 ; EBP+20| 色（背景/前景色）
   187                              <1>                                                 ; EBP+16| プレーン（ビット指定）
   188                              <1>                                                 ; EBP+12| VRAMアドレス
   189                              <1>                                                 ; EBP+ 8| 出力ビットパターン
   190                              <1> 	                                        ; ------+----------------
   191 000003AA 55                  <1>         push    ebp				; EBP+ 4| EIP（戻り番地）
   192 000003AB 89E5                <1>         mov     ebp, esp			; EBP+ 0| EBP（元の値）
   193                              <1> 						; ------+----------------
   194                              <1> 
   195                              <1>         ;---------------------------------------
   196                              <1>         ; レジスタの保存
   197                              <1>         ;---------------------------------------
   198 000003AD 50                  <1>         push    eax
   199 000003AE 53                  <1>         push    ebx
   200 000003AF 57                  <1>         push    edi
   201                              <1> 
   202                              <1>         ;---------------------------------------
   203                              <1>         ; 処理の開始
   204                              <1>         ;---------------------------------------
   205 000003B0 8B7D0C              <1>         mov     edi, [ebp + 12]                 ; EDI = VRAMアドレス;
   206 000003B3 0FB64510            <1>         movzx   eax, byte [ebp + 16]            ; EAX = プレーン(ビット指定);
   207 000003B7 0FB75D14            <1>         movzx   ebx, word [ebp + 20]            ; EBX = 表示色;
   208                              <1> 
   209 000003BB 84C3                <1>         test    bl, al                          ; ZF = (前景色 & プレーン);
   210 000003BD 0F94C3              <1>         setz    bl                              ; BL = ZF ? 0x01 : 0x00;
   211 000003C0 FECB                <1>         dec     bl                              ; BL--; // 0x00 or 0xFF
   212                              <1> 
   213                              <1>         ;---------------------------------------
   214                              <1>         ;  マスクデータの作成
   215                              <1>         ;---------------------------------------
   216 000003C2 8A4508              <1>         mov     al, [ebp + 8]                   ; AL = 出力ビットパターン;
   217 000003C5 88C4                <1>         mov     ah, al                          ; AH ~= AL;     // !出力ビットパターン(ビット反転)
   218 000003C7 F6D4                <1>         not     ah
   219                              <1> 
   220                              <1>         ;---------------------------------------
   221                              <1>         ; 現在地の出力を取得
   222                              <1>         ;---------------------------------------
   223 000003C9 2227                <1>         and     ah, [edi]                       ; AH = 現在地 & !出力ビットパターン;
   224 000003CB 20D8                <1>         and     al, bl                          ; AL = 表示色 &  出力ビットパターン;
   225 000003CD 08E0                <1>         or      al, ah                          ; AL |= AH;
   226                              <1> 
   227                              <1>         ;---------------------------------------
   228                              <1>         ; 新しい値を出力
   229                              <1>         ;---------------------------------------
   230 000003CF 8807                <1>         mov     [edi], al                       ; [EDI] = BL;   // プレーンに書き込む
   231                              <1> 
   232                              <1>         ;---------------------------------------
   233                              <1>         ; レジスタの復帰
   234                              <1>         ;---------------------------------------
   235 000003D1 5F                  <1>         pop     edi
   236 000003D2 5B                  <1>         pop     ebx
   237 000003D3 58                  <1>         pop     eax
   238                              <1> 
   239                              <1>         ;---------------------------------------
   240                              <1>         ; スタックフレームの破棄
   241                              <1>         ;---------------------------------------
   242 000003D4 89EC                <1>         mov     esp, ebp
   243 000003D6 5D                  <1>         pop     ebp
   244                              <1> 
   245 000003D7 C3                  <1>         ret
   128                                  %include  "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1>     ;---------------------------------
     3                              <1>     ;   スタックフレームの構築
     4                              <1>     ;---------------------------------
     5                              <1>                                         ;     +20| 文字
     6                              <1>                                         ;     +16| 描画色
     7                              <1>                                         ;     +12| 行
     8                              <1>                                         ;     + 8| 列
     9                              <1>                                         ;  ------|------
    10 000003D8 55                  <1>     push    ebp                         ;  EBP+ 4| IP(戻り番地)
    11 000003D9 89E5                <1>     mov     ebp, esp                    ;  EBP+ 0| BP(元の値)
    12                              <1>                                         ;  ------+------
    13                              <1> 
    14                              <1>     ;---------------------------------
    15                              <1>     ; レジスタの保存
    16                              <1>     ;---------------------------------
    17 000003DB 50                  <1>     push    eax
    18 000003DC 53                  <1>     push    ebx
    19 000003DD 51                  <1>     push    ecx
    20 000003DE 52                  <1>     push    edx
    21 000003DF 56                  <1>     push    esi
    22 000003E0 57                  <1>     push    edi
    23                              <1> 
    24                              <1>     ;---------------------------------------
    25                              <1>     ; テストアンドセット
    26                              <1>     ;---------------------------------------
    27                              <1> %ifdef	USE_TEST_AND_SET
    28                              <1>     cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    29                              <1> %endif
    30                              <1> 
    31                              <1>     ;---------------------------------------
    32                              <1>     ; コピー元フォントアドレスを設定
    33                              <1>     ;---------------------------------------
    34 000003E1 0FB67514            <1>     movzx   esi, byte [ebp + 20]            ; CL  = 文字コード;
    35 000003E5 C1E604              <1>     shl     esi, 4							; CL *= 16; // 1文字16バイト
    36 000003E8 0335[7C010000]      <1>     add     esi, [FONT_ADR]					; ESI = フォントアドレス;
    37                              <1> 
    38                              <1>     ;---------------------------------------
    39                              <1>     ; コピー先アドレスを取得
    40                              <1>     ; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    41                              <1>     ;---------------------------------------
    42 000003EE 8B7D0C              <1>     mov     edi, [ebp + 12]                 ; Y（行）
    43 000003F1 C1E708              <1>     shl     edi, 8							; EDI = Y * 256;
    44 000003F4 8DBCBF00000A00      <1>     lea     edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
    45 000003FB 037D08              <1>     add     edi, [ebp + 8]					; X（列）
    46                              <1> 
    47                              <1>     ;---------------------------------------
    48                              <1>     ; 1文字分のフォントを出力
    49                              <1>     ;---------------------------------------
    50 000003FE 0FB75D10            <1>     movzx   ebx, word [ebp + 16]            ; // 表示色
    51                              <1> 
    52 00000402 6A03E81CFFFFFF6683- <1>     cdecl   vga_set_read_plane, 0x03		; // 書き込みプレーン：輝度(I)
    52 0000040B C404                <1>
    53 0000040D 6A08E82AFFFFFF6683- <1>     cdecl   vga_set_write_plane, 0x08		; // 読み込みプレーン：輝度(I)
    53 00000416 C404                <1>
    54 00000418 536A085756E835FFFF- <1>     cdecl   vram_font_copy, esi, edi, 0x08, ebx
    54 00000421 FF6683C410          <1>
    55                              <1> 
    56 00000426 6A02E8F8FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x02		; // 書き込みプレーン：赤(R)
    56 0000042F C404                <1>
    57 00000431 6A04E806FFFFFF6683- <1>     cdecl   vga_set_write_plane, 0x04		; // 読み込みプレーン：赤(R)
    57 0000043A C404                <1>
    58 0000043C 536A045756E811FFFF- <1>     cdecl   vram_font_copy, esi, edi, 0x04, ebx
    58 00000445 FF6683C410          <1>
    59                              <1> 
    60 0000044A 6A01E8D4FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x01		; // 書き込みプレーン：緑(G)
    60 00000453 C404                <1>
    61 00000455 6A02E8E2FEFFFF6683- <1>     cdecl   vga_set_write_plane, 0x02		; // 読み込みプレーン：緑(G)
    61 0000045E C404                <1>
    62 00000460 536A025756E8EDFEFF- <1>     cdecl   vram_font_copy, esi, edi, 0x02, ebx
    62 00000469 FF6683C410          <1>
    63                              <1> 
    64 0000046E 6A00E8B0FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x00		; // 書き込みプレーン：青(B)
    64 00000477 C404                <1>
    65 00000479 6A01E8BEFEFFFF6683- <1>     cdecl   vga_set_write_plane, 0x01		; // 読み込みプレーン：青(B)
    65 00000482 C404                <1>
    66 00000484 536A015756E8C9FEFF- <1>     cdecl   vram_font_copy, esi, edi, 0x01, ebx
    66 0000048D FF6683C410          <1>
    67                              <1> 
    68                              <1> %ifdef	USE_TEST_AND_SET
    69                              <1>     ;---------------------------------------
    70                              <1>     ; テストアンドセット
    71                              <1>     ;---------------------------------------
    72                              <1>     mov		[IN_USE], dword 0				; 変数のクリア
    73                              <1> %endif
    74                              <1> 
    75                              <1>     ;---------------------------------
    76                              <1>     ; レジスタの復帰
    77                              <1>     ;---------------------------------
    78 00000492 5F                  <1>     pop     edi
    79 00000493 5E                  <1>     pop     esi
    80 00000494 5A                  <1>     pop     edx
    81 00000495 59                  <1>     pop     ecx
    82 00000496 5B                  <1>     pop     ebx
    83 00000497 58                  <1>     pop     eax
    84                              <1> 
    85                              <1>     ;---------------------------------
    86                              <1>     ; スタックフレームの破棄
    87                              <1>     ;---------------------------------
    88 00000498 89EC                <1>     mov     esp, ebp
    89 0000049A 5D                  <1>     pop     ebp
    90                              <1> 
    91 0000049B C3                  <1>     ret
    92                              <1> 
    93                              <1> %ifdef USE_TEST_AND_SET
    94                              <1> ALIGN 4, db 0
    95                              <1> IN_USE:	dd	0
    96                              <1> %endif
   129                                  %include  "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; EBP+12| Y（行）
     6                              <1> 												; EBP+ 8| X（列）
     7                              <1> 												; ---------------
     8 0000049C 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
     9 0000049D 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    10                              <1> 												; ---------------
    11                              <1> 
    12                              <1>         ;----------------------------------
    13                              <1>         ; レジスタの保存
    14                              <1>         ;----------------------------------
    15 0000049F 50                  <1>         push    eax
    16 000004A0 53                  <1>         push    ebx
    17 000004A1 51                  <1>         push    ecx
    18 000004A2 52                  <1>         push    edx
    19 000004A3 56                  <1>         push    esi
    20 000004A4 57                  <1>         push    edi
    21                              <1> 
    22                              <1>         ;----------------------------------
    23                              <1>         ; 表示位置
    24                              <1>         ;----------------------------------
    25 000004A5 8B7508              <1>         mov     esi, [ebp + 8]					; ESI = X（列）
    26 000004A8 8B7D0C              <1>         mov     edi, [ebp +12]					; EDI = Y（行）
    27                              <1> 
    28                              <1>         ;----------------------------------
    29                              <1>         ; フォント一覧を表示
    30                              <1>         ;----------------------------------
    31 000004AB B900000000          <1>         mov     ecx, 0							; for (ECX = 0;
    32 000004B0 81F900010000        <1> .10L:   cmp     ecx, 256						;      ECX < 256;
    33 000004B6 731F                <1>         jae     .10E                            ;
    34                              <1> 												;      ECX++)
    35                              <1> 												; {
    36                              <1> 												;   // 桁位置の計算
    37 000004B8 89C8                <1>         mov     eax, ecx						;   EAX  = ECX;
    38 000004BA 83E00F              <1>         and     eax, 0x0F						;   EAX &= 0x0F
    39 000004BD 01F0                <1>         add     eax, esi						;   EAX += X;
    40                              <1>                                                 ;
    41                              <1> 												;   // 行位置の計算
    42 000004BF 89CB                <1>         mov     ebx, ecx						;   EBX  = ECX;
    43 000004C1 C1EB04              <1>         shr     ebx, 4							;   EBX /= 16
    44 000004C4 01FB                <1>         add     ebx, edi						;   EBX += Y;
    45                              <1> 
    46 000004C6 516A075350E808FFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx	;   draw_char();
    46 000004CF FF6683C410          <1>
    47                              <1> 
    48 000004D4 41                  <1>         inc     ecx								;   // for (... ECX++)
    49 000004D5 EBD9                <1>         jmp     .10L                            ;
    50                              <1> .10E:                                           ; }
    51                              <1> 
    52                              <1> 
    53                              <1> 
    54                              <1>         ;----------------------------------
    55                              <1>         ; レジスタの復帰
    56                              <1>         ;----------------------------------
    57 000004D7 5F                  <1>         pop     edi
    58 000004D8 5E                  <1>         pop     esi
    59 000004D9 5A                  <1>         pop     edx
    60 000004DA 59                  <1>         pop     ecx
    61 000004DB 5B                  <1>         pop     ebx
    62 000004DC 58                  <1>         pop     eax
    63                              <1> 
    64                              <1>         ;----------------------------------
    65                              <1>         ; スタックフレームの破棄
    66                              <1>         ;----------------------------------
    67 000004DD 89EC                <1>         mov     esp, ebp
    68 000004DF 5D                  <1>         pop     ebp
    69                              <1> 
    70 000004E0 C3                  <1>         ret
   130                                  %include  "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5                              <1>                                             ;     +20| 文字列のアドレス
     6                              <1>                                             ;     +16| 色
     7                              <1>                                             ;     +12| 行
     8                              <1>                                             ;     + 8| 列
     9                              <1>                                             ; -------+--------------
    10 000004E1 55                  <1>         push    ebp                         ;     + 4| EIP (戻り番地)
    11 000004E2 89E5                <1>         mov     ebp, esp                    ; EBP + 0| EBP (元の値)
    12                              <1> 
    13                              <1>         ;---------------------------------
    14                              <1>         ; レジスタの保存
    15                              <1>         ;---------------------------------
    16 000004E4 50                  <1> 		push	eax
    17 000004E5 53                  <1> 		push	ebx
    18 000004E6 51                  <1> 		push	ecx
    19 000004E7 52                  <1> 		push	edx
    20 000004E8 56                  <1> 		push	esi
    21                              <1> 
    22                              <1>         ;---------------------------------
    23                              <1>         ; 文字列の表示
    24                              <1>         ;---------------------------------
    25 000004E9 8B4D08              <1>         mov     ecx, [ebp + 8]              ; ECX = 列;
    26 000004EC 8B550C              <1>         mov     edx, [ebp + 12]             ; EDX = 行;
    27 000004EF 0FB75D10            <1>         movzx   ebx, word [ebp + 16]        ; EBX = 表示色;
    28 000004F3 8B7514              <1>         mov     esi, [ebp + 20]             ; ESI = 文字列のアドレス;
    29                              <1> 
    30 000004F6 FC                  <1>         cld                                 ; DF = 0;   // アドレス加算
    31                              <1> .10L:                                       ; do
    32                              <1>                                             ; {
    33 000004F7 AC                  <1>         lodsb                               ;    AL = *ESI++;
    34 000004F8 3C00                <1>         cmp     al, 0                       ;    if(0 == AL)
    35 000004FA 7425                <1>         je      .10E                        ;      break;
    36                              <1> 
    37                              <1>         ;---------------------------------
    38                              <1>         ; 1文字表示
    39                              <1>         ;---------------------------------
    40 000004FC 50535251E8D3FEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax   ;   draw_char();
    40 00000505 6683C410            <1>
    41                              <1> 
    42                              <1>         ; 次の文字の位置を調整
    43 00000509 41                  <1>         inc     ecx                         ;   ECX++;
    44 0000050A 83F950              <1>         cmp     ecx, 80                     ;   if(80 <= ECX)
    45 0000050D 7C10                <1>         jl      .12E                        ;   {
    46 0000050F B900000000          <1>         mov     ecx, 0                      ;      ECX = 0;
    47 00000514 42                  <1>         inc     edx                         ;      EDX++;
    48 00000515 83FA1E              <1>         cmp     edx, 30                     ;      if(30 <= EDX)
    49 00000518 7C05                <1>         jl      .12E                        ;      {
    50 0000051A BA00000000          <1>         mov     edx, 0                      ;         EDX = 0;
    51                              <1> .12E:                                       ;      }
    52 0000051F EBD6                <1>         jmp     .10L                        ;   }
    53                              <1> .10E:                                       ; } while(1);
    54                              <1>        
    55                              <1>         ;---------------------------------
    56                              <1>         ; レジスタの復帰
    57                              <1>         ;---------------------------------
    58 00000521 5E                  <1> 		pop		esi
    59 00000522 5A                  <1> 		pop		edx
    60 00000523 59                  <1> 		pop		ecx
    61 00000524 5B                  <1> 		pop		ebx
    62 00000525 58                  <1> 		pop		eax
    63                              <1> 
    64                              <1>         ;---------------------------------
    65                              <1>         ; スタックフレームの破棄
    66                              <1>         ;---------------------------------
    67 00000526 89EC                <1>         mov     esp, ebp
    68 00000528 5D                  <1>         pop     ebp
    69                              <1> 
    70 00000529 C3                  <1>         ret
   131                                  %include  "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1>                                                 ; ---------------------
     6                              <1>                                                 ;     +12| Y(行)
     7                              <1>                                                 ;     + 8| X(列)
     8                              <1>                                                 ; -------+-------------
     9 0000052A 55                  <1>         push    ebp                             ;     + 4| EIP(戻り番地)
    10 0000052B 89E5                <1>         mov     ebp, esp                        ; EBP + 0| EBP(元の値)
    11                              <1>                                                 ; ---------------------
    12                              <1> 
    13                              <1> 		;---------------------------------------
    14                              <1> 		; レジスタの保存
    15                              <1> 		;---------------------------------------
    16 0000052D 50                  <1> 		push	eax
    17 0000052E 53                  <1> 		push	ebx
    18 0000052F 51                  <1> 		push	ecx
    19 00000530 52                  <1> 		push	edx
    20 00000531 56                  <1> 		push	esi
    21 00000532 57                  <1> 		push	edi
    22                              <1> 
    23                              <1>         ;---------------------------------------
    24                              <1>         ; 表示位置
    25                              <1>         ;---------------------------------------
    26 00000533 8B7508              <1>         mov     esi, [ebp + 8]                      ; ESI = X(列);
    27 00000536 8B7D0C              <1>         mov     edi, [ebp +12]                      ; EDI = Y(行);
    28                              <1> 
    29                              <1>         ;---------------------------------------
    30                              <1>         ; カラーバーを表示
    31                              <1>         ;---------------------------------------
    32 00000539 B900000000          <1>         mov     ecx, 0                              ; for(ECX = 0;
    33 0000053E 83F910              <1> .10L:   cmp     ecx, 16                             ;     ECX < 16;
    34 00000541 732E                <1>         jae     .10E                                ;
    35                              <1>                                                     ;     ECX++)
    36                              <1>                                                     ; {
    37                              <1>                                                     ;    // 桁位置の計算
    38 00000543 89C8                <1>         mov     eax, ecx                            ;    EAX = ECX;
    39 00000545 83E001              <1>         and     eax, 0x01                           ;    EAX &= 0x01;
    40 00000548 C1E003              <1>         shl     eax, 3                              ;    EAX *= 8;  // 8文字分乗算
    41 0000054B 01F0                <1>         add     eax, esi                            ;    EAX += X;
    42                              <1>                                                     ;
    43                              <1>                                                     ;    // 行位置の計算
    44 0000054D 89CB                <1>         mov     ebx, ecx                            ;    EBX = ECX;
    45 0000054F D1EB                <1>         shr     ebx, 1                              ;    EBX /= 2;
    46 00000551 01FB                <1>         add     ebx, edi                            ;    EBX += Y;
    47                              <1>                                                     ;
    48                              <1>                                                     ;    // 表示色の取得
    49 00000553 89CA                <1>         mov     edx, ecx                            ;    EDX = ECX;
    50 00000555 D1E2                <1>         shl     edx, 1                              ;    EDX /= 2;
    51 00000557 8B92[84050000]      <1>         mov     edx, [.t0 + edx]                    ;    EDX += Y;
    52                              <1> 
    53 0000055D 68[7B050000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0        ;    draw_str();
    53 00000565 E877FFFFFF6683C410  <1>
    54                              <1> 
    55 0000056E 41                  <1>         inc     ecx                                 ; // for(... ECX++)
    56 0000056F EBCD                <1>         jmp     .10L                                ;
    57                              <1> .10E:                                               ; }
    58                              <1> 
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; レジスタの復帰
    62                              <1>         ;---------------------------------------
    63 00000571 5F                  <1>         pop     edi
    64 00000572 5E                  <1>         pop     esi
    65 00000573 5A                  <1>         pop     edx
    66 00000574 59                  <1>         pop     ecx
    67 00000575 5B                  <1>         pop     ebx
    68 00000576 58                  <1>         pop     eax
    69                              <1> 
    70                              <1>         ;---------------------------------------
    71                              <1>         ; スタックフレームの破棄
    72                              <1>         ;---------------------------------------
    73 00000577 89EC                <1>         mov     esp, ebp
    74 00000579 5D                  <1>         pop     ebp
    75                              <1> 
    76 0000057A C3                  <1>         ret
    77                              <1> 
    78 0000057B 202020202020202000  <1> .s0:    db  '        ', 0                           ; 8文字分のスペース（表示色だけを変更）
    79                              <1> 
    80 00000584 00000008            <1> .t0:    dw  0x0000, 0x0800                          ; カラーバーの背景色
    81 00000588 00010009            <1>         dw  0x0100, 0x0900
    82 0000058C 0002000A            <1>         dw  0x0200, 0x0A00
    83 00000590 0003000B            <1>         dw  0x0300, 0x0B00
    84 00000594 0004000C            <1>         dw  0x0400, 0x0C00
    85 00000598 0005000D            <1>         dw  0x0500, 0x0D00
    86 0000059C 0006000E            <1>         dw  0x0600, 0x0E00
    87 000005A0 0007000F            <1>         dw  0x0700, 0x0F00
   132                                  %include  "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ------+--------
     6                              <1> 												; EBP+16| 色
     7                              <1> 												; EBP+12| Y
     8                              <1> 												; EBP+ 8| X
     9                              <1> 												; ------+--------
    10 000005A4 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
    11 000005A5 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    12                              <1> 												; ------+--------
    13                              <1> 
    14                              <1>         ;---------------------------------------
    15                              <1>         ; レジスタの保存
    16                              <1>         ;---------------------------------------
    17 000005A7 50                  <1>         push    eax
    18 000005A8 53                  <1>         push    ebx
    19 000005A9 51                  <1>         push    ecx
    20 000005AA 57                  <1>         push    edi
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ;
    24                              <1>         ;---------------------------------------
    25 000005AB 8B7D0C              <1>         mov     edi, [ebp + 12]					; EDI  = Y座標
    26 000005AE C1E704              <1>         shl     edi, 4							; EDI *= 16;
    27 000005B1 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]	; EDI  = 0xA00000[EDI * 4 + EDI];
    28                              <1> 
    29                              <1> 		;---------------------------------------
    30                              <1> 		; X座標を1/8して加算
    31                              <1> 		;---------------------------------------
    32 000005B8 8B5D08              <1> 		mov		ebx, [ebp + 8]					; EBX  = X座標;
    33 000005BB 89D9                <1> 		mov		ecx, ebx						; ECX  = X座標;（一時保存）
    34 000005BD C1EB03              <1> 		shr		ebx, 3							; EBX /= 8;
    35 000005C0 01DF                <1> 		add		edi, ebx						; EDI += EBX;
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; X座標を8で割った余りからビット位置を計算
    39                              <1> 		; (0=0x80, 1=0x40,... 7=0x01)
    40                              <1> 		;---------------------------------------
    41 000005C2 83E107              <1> 		and		ecx, 0x07						; ECX = X & 0x07;
    42 000005C5 BB80000000          <1> 		mov		ebx, 0x80						; EBX = 0x80;
    43 000005CA D3EB                <1> 		shr		ebx, cl							; EBX >>= ECX;
    44                              <1> 
    45                              <1> 		;---------------------------------------
    46                              <1> 		; 色指定
    47                              <1> 		;---------------------------------------
    48 000005CC 8B4D10              <1> 		mov		ecx, [ebp +16]					; // 表示色
    49                              <1> 
    50                              <1> 		;---------------------------------------
    51                              <1> 		; プレーン毎に出力
    52                              <1> 		;---------------------------------------
    53 000005CF 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
    53 000005D8 C404                <1>
    54 000005DA 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
    54 000005E3 C404                <1>
    55 000005E5 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
    55 000005EE FF6683C410          <1>
    56                              <1> 
    57 000005F3 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
    57 000005FC C404                <1>
    58 000005FE 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
    58 00000607 C404                <1>
    59 00000609 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
    59 00000612 FF6683C410          <1>
    60                              <1> 
    61 00000617 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
    61 00000620 C404                <1>
    62 00000622 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
    62 0000062B C404                <1>
    63 0000062D 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
    63 00000636 FF6683C410          <1>
    64                              <1> 
    65 0000063B 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
    65 00000644 C404                <1>
    66 00000646 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
    66 0000064F C404                <1>
    67 00000651 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
    67 0000065A FF6683C410          <1>
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; レジスタの復帰
    71                              <1>         ;---------------------------------------
    72 0000065F 5F                  <1>         pop     edi
    73 00000660 59                  <1>         pop     ecx
    74 00000661 5B                  <1>         pop     ebx
    75 00000662 58                  <1>         pop     eax
    76                              <1> 
    77                              <1>         ;---------------------------------------
    78                              <1>         ; スタックフレームの破棄
    79                              <1>         ;---------------------------------------
    80 00000663 89EC                <1>         mov     esp, ebp
    81 00000665 5D                  <1>         pop     ebp
    82                              <1> 
    83 00000666 C3                  <1>         ret
   133                                  %include  "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ---------------
     6                              <1> 												;    +24| 色
     7                              <1> 												;    +20| Y1
     8                              <1> 												;    +16| X1
     9                              <1> 												;    +12| Y0
    10                              <1> 												;    + 8| X0
    11                              <1> 												; ---------------
    12 00000667 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
    13 00000668 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    14                              <1> 												; ---------------
    15 0000066A 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
    16 0000066C 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
    17 0000066E 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
    18 00000670 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
    19 00000672 6A00                <1> 		push	dword 0							;    -20| x0    = 0; // Y座標
    20 00000674 6A00                <1> 		push	dword 0							;    -24| dx    = 0; // Y増分
    21 00000676 6A00                <1>         push    dword 0							;    -28| inc_x = 0; // Y座標増分(1 or -1)
    22                              <1> 												; ------|--------
    23                              <1> 
    24                              <1>         ;---------------------------------------
    25                              <1>         ; レジスタの保存
    26                              <1>         ;---------------------------------------
    27 00000678 50                  <1>         push    eax
    28 00000679 53                  <1>         push    ebx
    29 0000067A 51                  <1>         push    ecx
    30 0000067B 52                  <1>         push    edx
    31 0000067C 56                  <1>         push    esi
    32 0000067D 57                  <1>         push    edi
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 幅を計算（X軸）
    36                              <1> 		;---------------------------------------
    37 0000067E 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    38 00000681 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
    39 00000684 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
    40 00000686 7D09                <1> 		jge		.10F							; if (幅 < 0)
    41                              <1> 												; {
    42 00000688 F7DB                <1> 		neg		ebx								;   幅   *= -1;
    43 0000068A BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
    44 0000068F EB05                <1> 		jmp		.10E							; }
    45                              <1> .10F:											; else
    46                              <1> 												; {
    47 00000691 BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
    48                              <1> .10E:											; }
    49                              <1> 
    50                              <1> 		;---------------------------------------
    51                              <1> 		; 高さを計算（Y軸）
    52                              <1> 		;---------------------------------------
    53 00000696 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
    54 00000699 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
    55 0000069C 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
    56 0000069E 7D09                <1> 		jge		.20F							; if (高さ < 0)
    57                              <1> 												; {
    58 000006A0 F7DA                <1> 		neg		edx								;   高さ *= -1;
    59 000006A2 BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
    60 000006A7 EB05                <1> 		jmp		.20E							; }
    61                              <1> .20F:											; else
    62                              <1> 												; {
    63 000006A9 BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
    64                              <1> .20E:											; }
    65                              <1> 
    66                              <1> 		;---------------------------------------
    67                              <1> 		; X軸
    68                              <1> 		;---------------------------------------
    69 000006AE 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
    70 000006B1 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
    71 000006B4 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
    72                              <1> 
    73                              <1> 		;---------------------------------------
    74                              <1> 		; Y軸
    75                              <1> 		;---------------------------------------
    76 000006B7 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
    77 000006BA 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
    78 000006BD 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
    79                              <1> 
    80                              <1> 		;---------------------------------------
    81                              <1> 		; 基準軸を決める
    82                              <1> 		;---------------------------------------
    83 000006C0 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
    84 000006C2 7F08                <1> 		jg		.22F							; {
    85                              <1> 												;   
    86 000006C4 8D75EC              <1> 		lea		esi, [ebp -20]					;   // X軸が基準軸
    87 000006C7 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // Y軸が相対軸
    88                              <1> 												;   
    89 000006CA EB06                <1> 		jmp		.22E							; }
    90                              <1> .22F:											; else
    91                              <1> 												; {
    92 000006CC 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // Y軸が基準軸
    93 000006CF 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // X軸が相対軸
    94                              <1> .22E:											; }
    95                              <1> 
    96                              <1> 		;---------------------------------------
    97                              <1> 		; 繰り返し回数(基準軸のドット数)
    98                              <1> 		;---------------------------------------
    99 000006D2 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   100 000006D5 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   101 000006D8 7505                <1> 		jnz		.30E							; {
   102 000006DA B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   103                              <1> .30E:											; }
   104                              <1> 
   105                              <1> 		;---------------------------------------
   106                              <1> 		; 線を描画
   107                              <1> 		;---------------------------------------
   108                              <1> .50L:											; do
   109                              <1> 												; {
   110                              <1> %ifdef	USE_SYSTEM_CALL
   111                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   112                              <1> 
   113                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   114                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   115                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   116                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   117                              <1> 
   118                              <1> 		mov		ecx, eax
   119                              <1> %else
   122 000006DF FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   122 000006E8 E8B7FEFFFF6683C40C  <1>
   123                              <1> %endif
   124                              <1> 												;   // 基準軸を更新(1ドット分)
   125 000006F1 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   126 000006F4 0106                <1> 		add		[esi - 0], eax					;   
   127                              <1> 
   128                              <1> 												;   // 相対軸を更新
   129 000006F6 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   130 000006F9 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   131 000006FC 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   132                              <1> 
   133 000006FF 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   134 00000701 7C07                <1> 		jl		.52E							;   {
   135 00000703 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   136                              <1> 												;     
   137                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   138 00000705 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   139 00000708 011F                <1> 		add		[edi - 0], ebx					;     
   140                              <1> .52E:											;   }
   141 0000070A 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   142                              <1> 												;   
   143 0000070D E2D0                <1> 		loop	.50L							;   
   144                              <1> .50E:											; } while (ループ回数--);
   145                              <1> 
   146                              <1>         ;---------------------------------------
   147                              <1>         ; レジスタの復帰
   148                              <1>         ;---------------------------------------
   149 0000070F 5F                  <1>         pop     edi
   150 00000710 5E                  <1>         pop     esi
   151 00000711 5A                  <1>         pop     edx
   152 00000712 59                  <1>         pop     ecx
   153 00000713 5B                  <1>         pop     ebx
   154 00000714 58                  <1>         pop     eax
   155                              <1> 
   156                              <1>         ;---------------------------------------
   157                              <1>         ; スタックフレームの破棄
   158                              <1>         ;---------------------------------------
   159 00000715 89EC                <1>         mov     esp, ebp
   160 00000717 5D                  <1>         pop     ebp
   161                              <1> 
   162 00000718 C3                  <1>         ret
   134                                  %include  "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+24| 色
     7                              <1> 												; EBP+20| Y1
     8                              <1> 												; EBP+16| X1
     9                              <1> 												; EBP+12| Y0
    10                              <1> 												; EBP+ 8| X0
    11                              <1> 												; ---------------
    12 00000719 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    13 0000071A 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    14                              <1> 												; ------|--------
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ; レジスタの保存
    18                              <1>         ;---------------------------------------
    19 0000071C 50                  <1>         push    eax
    20 0000071D 53                  <1>         push    ebx
    21 0000071E 51                  <1>         push    ecx
    22 0000071F 52                  <1>         push    edx
    23 00000720 56                  <1>         push    esi
    24                              <1> 
    25                              <1> 		;---------------------------------------
    26                              <1> 		; 矩形を描画
    27                              <1> 		;---------------------------------------
    28 00000721 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    29 00000724 8B5D0C              <1> 		mov		ebx, [ebp +12]					; EBX = Y0;
    30 00000727 8B4D10              <1> 		mov		ecx, [ebp +16]					; ECX = X1;
    31 0000072A 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1;
    32 0000072D 8B7518              <1> 		mov		esi, [ebp +24]					; ESI = 色;
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 座標軸の大小を確定
    36                              <1> 		;---------------------------------------
    37 00000730 39C8                <1> 		cmp		eax, ecx						; if (X1 < X0)
    38 00000732 7C01                <1> 		jl		.10E							; {
    39 00000734 91                  <1> 		xchg	eax, ecx						;   X0とX1を入れ替える;
    40                              <1> .10E:											; }
    41                              <1> 
    42 00000735 39D3                <1> 		cmp		ebx, edx						; if (Y1 < Y0)
    43 00000737 7C02                <1> 		jl		.20E							; {
    44 00000739 87DA                <1> 		xchg	ebx, edx						;   Y0とY1を入れ替える;
    45                              <1> .20E:											; }
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; 矩形を描画
    49                              <1> 		;---------------------------------------
    50 0000073B 5653515350E822FFFF- <1> 		cdecl	draw_line, eax, ebx, ecx, ebx, esi	; 上線
    50 00000744 FF6683C414          <1>
    51 00000749 5652505350E814FFFF- <1> 		cdecl	draw_line, eax, ebx, eax, edx, esi	; 左線
    51 00000752 FF6683C414          <1>
    52                              <1> 
    53 00000757 4A                  <1> 		dec		edx									; EDX--; // 下線は1ドット上げる
    54 00000758 5652515250E805FFFF- <1> 		cdecl	draw_line, eax, edx, ecx, edx, esi	; 下線
    54 00000761 FF6683C414          <1>
    55 00000766 42                  <1> 		inc		edx
    56                              <1> 
    57 00000767 49                  <1> 		dec		ecx									; ECX--; // 右線は1ドット左に移動
    58 00000768 5652515351E8F5FEFF- <1> 		cdecl	draw_line, ecx, ebx, ecx, edx, esi	; 右線
    58 00000771 FF6683C414          <1>
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; レジスタの復帰
    62                              <1>         ;---------------------------------------
    63 00000776 5E                  <1>         pop     esi
    64 00000777 5A                  <1>         pop     edx
    65 00000778 59                  <1>         pop     ecx
    66 00000779 5B                  <1>         pop     ebx
    67 0000077A 58                  <1>         pop     eax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 0000077B 89EC                <1>         mov     esp, ebp
    73 0000077D 5D                  <1>         pop     ebp
    74                              <1> 
    75 0000077E C3                  <1>         ret
   135                                  %include  "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												;    +24| フラグ
     7                              <1> 												;    +20| 基数
     8                              <1> 												;    +16| バッファサイズ
     9                              <1> 												;    +12| バッファアドレス
    10                              <1> 												;    + 8| 数値
    11                              <1> 												; ------|--------
    12                              <1> 												;    + 4| EIP（戻り番地）
    13 0000077F 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    14 00000780 89E5                <1> 		mov		ebp, esp						; ------+--------
    15                              <1> 
    16                              <1>         ;----------------------------------
    17                              <1>         ; レジスタの保存
    18                              <1>         ;----------------------------------
    19 00000782 50                  <1>         push    eax
    20 00000783 53                  <1>         push    ebx
    21 00000784 51                  <1>         push    ecx
    22 00000785 52                  <1>         push    edx
    23 00000786 56                  <1>         push    esi
    24 00000787 57                  <1>         push    edi
    25                              <1> 
    26                              <1>         ;----------------------------------
    27                              <1>         ; 引数を取得
    28                              <1>         ;----------------------------------
    29 00000788 8B4508              <1> 		mov		eax, [ebp + 8]					; val  = 数値;
    30 0000078B 8B750C              <1> 		mov		esi, [ebp +12]					; dst  = バッファアドレス;
    31 0000078E 8B4D10              <1> 		mov		ecx, [ebp +16]					; size = 残りバッファサイズ;
    32                              <1> 
    33 00000791 89F7                <1> 		mov		edi, esi						; // バッファの最後尾
    34 00000793 01CF                <1> 		add		edi, ecx						; dst  = &dst[size - 1];
    35 00000795 4F                  <1> 		dec		edi								; 
    36                              <1> 
    37 00000796 8B5D18              <1> 		mov		ebx, [ebp +24]					; flags = オプション;
    38                              <1> 
    39                              <1>         ;----------------------------------
    40                              <1>         ; 符号付き判定
    41                              <1>         ;----------------------------------
    42 00000799 F7C301000000        <1> 		test	ebx, 0b0001						; if (flags & 0x01)// 符号付き
    43 0000079F 7408                <1> .10Q:	je		.10E							; {
    44 000007A1 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    45 000007A4 7D03                <1> .12Q:	jge		.12E							;   {
    46 000007A6 83CB02              <1> 		or		ebx, 0b0010						;     flags |=  2; // 符号表示
    47                              <1> .12E:											;   }
    48                              <1> .10E:											; }
    49                              <1> 
    50                              <1>         ;----------------------------------
    51                              <1>         ; 符号出力判定
    52                              <1>         ;----------------------------------
    53 000007A9 F7C302000000        <1> 		test	ebx, 0b0010						; if (flags & 0x02)// 符号出力判定
    54 000007AF 7410                <1> .20Q:	je		.20E							; {
    55 000007B1 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    56 000007B4 7D07                <1> .22Q:	jge		.22F							;   {
    57 000007B6 F7D8                <1> 		neg		eax								;     val *= -1;   // 符号反転
    58 000007B8 C6062D              <1> 		mov		[esi], byte '-'					;     *dst = '-';  // 符号表示
    59 000007BB EB03                <1> 		jmp		.22E							;   }
    60                              <1> .22F:											;   else
    61                              <1> 												;   {
    62 000007BD C6062B              <1> 		mov		[esi], byte '+'					;     *dst = '+';  // 符号表示
    63                              <1> .22E:											;   }
    64 000007C0 49                  <1> 		dec		ecx								;   size--;        // 残りバッファサイズの減算
    65                              <1> .20E:											; }
    66                              <1> 
    67                              <1>         ;----------------------------------
    68                              <1>         ; ASCII変換
    69                              <1>         ;----------------------------------
    70 000007C1 8B5D14              <1> 		mov		ebx, [ebp +20]					; BX = 基数;
    71                              <1> .30L:											; do
    72                              <1> 												; {
    73 000007C4 BA00000000          <1> 		mov		edx, 0							;   
    74 000007C9 F7F3                <1> 		div		ebx								;   DX = DX:AX % 基数;
    75                              <1> 												;   AX = DX:AX / 基数;
    76                              <1> 												;   
    77 000007CB 89D6                <1> 		mov		esi, edx						;   // テーブル参照
    78 000007CD 8A96[F8070000]      <1> 		mov		dl, byte [.ascii + esi]			;   DL = ASCII[DX];
    79                              <1> 												;   
    80 000007D3 8817                <1> 		mov		[edi], dl						;   *dst = DL;
    81 000007D5 4F                  <1> 		dec		edi								;   dst--;
    82                              <1> 												;   
    83 000007D6 83F800              <1> 		cmp		eax, 0							;   
    84 000007D9 E0E9                <1> 		loopnz	.30L							; } while (AX);
    85                              <1> .30E:
    86                              <1> 
    87                              <1>         ;----------------------------------
    88                              <1>         ; 空欄を埋める
    89                              <1>         ;----------------------------------
    90 000007DB 83F900              <1> 		cmp		ecx, 0							; if (size)
    91 000007DE 740E                <1> .40Q:	je		.40E							; {
    92 000007E0 B020                <1> 		mov		al, ' '							;   AL = ' ';  // ' 'で埋める（デフォルト値）
    93 000007E2 66837D1804          <1> 		cmp		[ebp +24], word 0b0100			;   if (flags & 0x04)
    94 000007E7 7502                <1> .42Q:	jne		.42E							;   {
    95 000007E9 B030                <1> 		mov		al, '0'							;     AL = '0'; // '0'で埋める
    96                              <1> .42E:											;   }
    97 000007EB FD                  <1> 		std										;   // DF = 1（-方向）
    98 000007EC F3AA                <1> 		rep stosb								;   while (--CX) *DI-- = ' ';
    99                              <1> .40E:	
   100                              <1> 
   101                              <1>         ;----------------------------------
   102                              <1>         ; レジスタの復帰
   103                              <1>         ;----------------------------------
   104 000007EE 5F                  <1>         pop     edi
   105 000007EF 5E                  <1>         pop     esi
   106 000007F0 5A                  <1>         pop     edx
   107 000007F1 59                  <1>         pop     ecx
   108 000007F2 5B                  <1>         pop     ebx
   109 000007F3 58                  <1>         pop     eax
   110                              <1> 
   111                              <1>         ;----------------------------------
   112                              <1>         ; スタックフレームの破棄
   113                              <1>         ;----------------------------------
   114 000007F4 89EC                <1>         mov     esp, ebp
   115 000007F6 5D                  <1>         pop     ebp
   116                              <1> 
   117 000007F7 C3                  <1>         ret
   118                              <1> 
   119 000007F8 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"				; 変換テーブル
   119 00000801 39414243444546      <1>
   136                                  %include  "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+ 8| 保存先アドレス
     7                              <1> 												; ---------------
     8 00000808 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
     9 00000809 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    10                              <1> 												; ---------------
    11                              <1>         ;----------------------------------
    12                              <1>         ; レジスタの保存
    13                              <1>         ;----------------------------------
    14 0000080B 53                  <1>         push    ebx
    15                              <1>         
    16                              <1>         ;----------------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;----------------------------------
    19 0000080C B004                <1> 		mov		al, 0x04						;   AL = 0x04;
    20 0000080E E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    21 00000810 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 時データ
    22                              <1> 
    23 00000812 C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    24                              <1> 
    25 00000815 B002                <1> 		mov		al, 0x02						;   AL = 0x02;
    26 00000817 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    27 00000819 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 分データ
    28                              <1> 
    29 0000081B C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    30                              <1> 
    31 0000081E B000                <1> 		mov		al, 0x00						;   AL = 0x00;
    32 00000820 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    33 00000822 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 秒データ
    34                              <1> 
    35 00000824 25FFFFFF00          <1> 		and		eax, 0x00_FF_FF_FF				;   // 下位3バイトのみ有効
    36 00000829 8B5D08              <1> 		mov		ebx, [ebp + 8]					;   dst = 保存先;
    37 0000082C 8903                <1> 		mov		[ebx], eax						;   [dst] = 時刻;
    38                              <1> 
    39                              <1>         ;----------------------------------
    40                              <1>         ; レジスタの復帰
    41                              <1>         ;----------------------------------
    42 0000082E 5B                  <1>         pop     ebx
    43                              <1> 
    44                              <1>         ;----------------------------------
    45                              <1>         ; スタックフレームの破棄
    46                              <1>         ;----------------------------------
    47 0000082F 89EC                <1>         mov     esp, ebp
    48 00000831 5D                  <1>         pop     ebp
    49                              <1> 
    50 00000832 C3                  <1>         ret
   137                                  %include  "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 
     6 00000833 55                  <1>         push    ebp
     7 00000834 89E5                <1>         mov     ebp, esp
     8                              <1> 
     9                              <1>         ;----------------------------------
    10                              <1>         ; レジスタの保存
    11                              <1>         ;----------------------------------
    12 00000836 50                  <1>         push    eax
    13 00000837 53                  <1>         push    ebx
    14                              <1> 
    15                              <1>         ;----------------------------------
    16                              <1>         ; 時刻の表示
    17                              <1>         ;----------------------------------
    18 00000838 8B4514              <1> 		mov		eax, [ebp +20]					; EAX = 時刻データ;
    19                              <1> 
    20 0000083B 0FB6D8              <1>         movzx   ebx, al                         ; EBX = 秒;
    21 0000083E 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100  ; // 文字に変換
    21 00000845 [A5080000]53E830FF- <1>
    21 0000084D FFFF6683C414        <1>
    22                              <1> 
    23 00000853 88E3                <1>         mov     bl, ah                          ; EBX = 分;
    24 00000855 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100  ; // 文字に変換
    24 0000085C [A2080000]53E819FF- <1>
    24 00000864 FFFF6683C414        <1>
    25                              <1> 
    26 0000086A C1E810              <1>         shr     eax, 16                         ; EBX = 時;
    27 0000086D 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100 ; // 文字に変換
    27 00000874 [9F080000]50E801FF- <1>
    27 0000087C FFFF6683C414        <1>
    28                              <1> 
    29                              <1>                                                 ; // 時刻を表示
    30 00000882 68[9F080000]FF7510- <1>         cdecl   draw_str,   dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    30 0000088A FF750CFF7508E84CFC- <1>
    30 00000893 FFFF6683C410        <1>
    31                              <1> 
    32                              <1>         ;----------------------------------
    33                              <1>         ; レジスタの復帰
    34                              <1>         ;----------------------------------
    35 00000899 5B                  <1>         pop     ebx
    36 0000089A 58                  <1>         pop     eax
    37                              <1> 
    38                              <1>         ;----------------------------------
    39                              <1>         ; スタックフレームの破棄
    40                              <1>         ;----------------------------------
    41 0000089B 89EC                <1>         mov     esp, ebp
    42 0000089D 5D                  <1>         pop     ebp
    43                              <1> 
    44 0000089E C3                  <1>         ret
    45                              <1> 
    46 0000089F 5A5A3A              <1> .hour:  db  "ZZ:"
    47 000008A2 5A5A3A              <1> .min:   db  "ZZ:"
    48 000008A5 5A5A00              <1> .sec:   db  "ZZ", 0
   138                                  %include  "../modules/protect/interrupt.s"
     1                              <1> ;************************************************
     2                              <1> ; 割り込みベクタの初期化
     3                              <1> ;************************************************
     4                              <1> ALIGN 4
     5 000008A8 FF07                <1> IDTR:   dw      8 * 256 - 1
     6 000008AA 00001000            <1>         dd      VECT_BASE
     7                              <1> 
     8                              <1> 
     9                              <1> ;************************************************
    10                              <1> ; 割り込みテーブルを初期化
    11                              <1> ;************************************************
    12                              <1> init_int:
    13                              <1>         ;----------------------------------
    14                              <1>         ; レジスタの保存
    15                              <1>         ;----------------------------------
    16 000008AE 50                  <1>         push    eax
    17 000008AF 53                  <1>         push    ebx
    18 000008B0 51                  <1>         push    ecx
    19 000008B1 57                  <1>         push    edi
    20                              <1> 
    21                              <1>         ;----------------------------------
    22                              <1>         ; すべての割り込みにデフォルト処理を設定
    23                              <1>         ;----------------------------------
    24 000008B2 8D05[F8090000]      <1>         lea     eax, [int_default]
    25 000008B8 BB008E0800          <1>         mov     ebx, 0x0008_8E00
    26 000008BD 6693                <1>         xchg    ax, bx
    27                              <1>         
    28 000008BF B900010000          <1>         mov     ecx, 256
    29 000008C4 BF00001000          <1>         mov     edi, VECT_BASE
    30                              <1> 
    31                              <1> .10L:
    32 000008C9 891F                <1>         mov     [edi + 0], ebx
    33 000008CB 894704              <1>         mov     [edi + 4], eax
    34 000008CE 83C708              <1>         add     edi, 8
    35 000008D1 E2F6                <1>         loop    .10L
    36                              <1> 
    37                              <1>         ;----------------------------------
    38                              <1>         ; 割り込みディスクリプタの設定
    39                              <1>         ;----------------------------------
    40 000008D3 0F011D[A8080000]    <1>         lidt    [IDTR]
    41                              <1> 
    42                              <1>         ;----------------------------------
    43                              <1>         ; レジスタの復帰
    44                              <1>         ;----------------------------------
    45 000008DA 5F                  <1>         pop     edi
    46 000008DB 59                  <1>         pop     ecx
    47 000008DC 5B                  <1>         pop     ebx
    48 000008DD 58                  <1>         pop     eax
    49                              <1> 
    50 000008DE C3                  <1>         ret
    51                              <1> 
    52                              <1> int_stop:
    53 000008DF FB                  <1>         sti
    54                              <1>         
    55                              <1>         ;---------------------------------------
    56                              <1>         ; EAXで示される文字列を表示
    57                              <1>         ;---------------------------------------
    58 000008E0 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
    58 000008E9 19E8F2FBFFFF6683C4- <1>
    58 000008F2 10                  <1>
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; スタックのデータを文字列に変換
    62                              <1>         ;---------------------------------------
    63 000008F3 8B0424              <1>         mov     eax, [esp + 0]
    64 000008F6 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    64 000008FD [BB090000]50E878FE- <1>
    64 00000905 FFFF6683C414        <1>
    65                              <1>         
    66 0000090B 8B442404            <1>         mov     eax, [esp + 4]
    67 0000090F 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    67 00000916 [CC090000]50E85FFE- <1>
    67 0000091E FFFF6683C414        <1>
    68                              <1>         
    69 00000924 8B442408            <1>         mov     eax, [esp + 8]
    70 00000928 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    70 0000092F [DD090000]50E846FE- <1>
    70 00000937 FFFF6683C414        <1>
    71                              <1>         
    72 0000093D 8B44240C            <1>         mov     eax, [esp + 12]
    73 00000941 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    73 00000948 [EE090000]50E82DFE- <1>
    73 00000950 FFFF6683C414        <1>
    74                              <1> 
    75                              <1>         ;---------------------------------------
    76                              <1>         ; 文字列の表示
    77                              <1>         ;---------------------------------------
    78 00000956 68[B4090000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    78 0000095E 00006A106A19E878FB- <1>
    78 00000967 FFFF6683C410        <1>
    79 0000096D 68[C5090000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    79 00000975 00006A116A19E861FB- <1>
    79 0000097E FFFF6683C410        <1>
    80 00000984 68[D6090000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    80 0000098C 00006A126A19E84AFB- <1>
    80 00000995 FFFF6683C410        <1>
    81 0000099B 68[E7090000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    81 000009A3 00006A136A19E833FB- <1>
    81 000009AC FFFF6683C410        <1>
    82                              <1> 
    83                              <1>         ;---------------------------------------
    84                              <1>         ; 無限ループ
    85                              <1>         ;---------------------------------------
    86 000009B2 EBFE                <1>         jmp     $
    87                              <1> 
    88 000009B4 4553502B20303A      <1> .s1     db  "ESP+ 0:"
    89 000009BB 5F5F5F5F5F5F5F5F20- <1> .p1     db  "________ ", 0
    89 000009C4 00                  <1>
    90 000009C5 2020202B20343A      <1> .s2     db  "   + 4:"
    91 000009CC 5F5F5F5F5F5F5F5F20- <1> .p2     db  "________ ", 0
    91 000009D5 00                  <1>
    92 000009D6 2020202B20383A      <1> .s3     db  "   + 8:"
    93 000009DD 5F5F5F5F5F5F5F5F20- <1> .p3     db  "________ ", 0
    93 000009E6 00                  <1>
    94 000009E7 2020202B31323A      <1> .s4     db  "   +12:"
    95 000009EE 5F5F5F5F5F5F5F5F20- <1> .p4     db  "________ ", 0
    95 000009F7 00                  <1>
    96                              <1> 
    97                              <1> int_default:
    98 000009F8 9C                  <1>         pushf
    99 000009F9 0E                  <1>         push    cs
   100 000009FA 68[DF080000]        <1>         push    int_stop
   101                              <1> 
   102 000009FF B8[050A0000]        <1>         mov     eax, .s0
   103 00000A04 CF                  <1>         iret
   104                              <1> 
   105 00000A05 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
   105 00000A0E 50202020203E2000    <1>
   106                              <1> 
   107                              <1> int_zero_div:
   108 00000A16 9C                  <1>         pushf   
   109 00000A17 0E                  <1>         push    cs
   110 00000A18 68[DF080000]        <1>         push    int_stop
   111                              <1> 
   112 00000A1D B8[230A0000]        <1>         mov     eax, .s0
   113 00000A22 CF                  <1>         iret
   114                              <1> 
   115 00000A23 203C20205A45524F20- <1> .s0     db  " <  ZERO DIV  > ", 0
   115 00000A2C 44495620203E2000    <1>
   139                                  %include  "../modules/protect/pic.s"
     1                              <1> init_pic:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;---------------------------------------
     5 00000A34 50                  <1>         push    eax
     6                              <1> 
     7                              <1>         ;---------------------------------------
     8                              <1>         ; マスタの設定
     9                              <1>         ;---------------------------------------
    10                              <1>         outp    0x20, 0x11                      ; // MASTER.ICW1 = 0x11;
    10 00000A35 B011                <2>  mov al, %2
    10 00000A37 E620                <2>  out %1, al
    11                              <1>         outp    0x21, 0x20                      ; // MASTER.ICW2 = 0x20;
    11 00000A39 B020                <2>  mov al, %2
    11 00000A3B E621                <2>  out %1, al
    12                              <1>         outp    0x21, 0x04                      ; // MASTER.ICW3 = 0x04;
    12 00000A3D B004                <2>  mov al, %2
    12 00000A3F E621                <2>  out %1, al
    13                              <1>         outp    0x21, 0x05                      ; // MASTER.ICW4 = 0x05;
    13 00000A41 B005                <2>  mov al, %2
    13 00000A43 E621                <2>  out %1, al
    14                              <1>         outp    0x21, 0xFF                      ; // マスタ割り込みマスク
    14 00000A45 B0FF                <2>  mov al, %2
    14 00000A47 E621                <2>  out %1, al
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ; スレーブの設定
    18                              <1>         ;---------------------------------------
    19                              <1>         outp    0xA0, 0x11                      ; // SLAVE.ICW1 = 0x11;
    19 00000A49 B011                <2>  mov al, %2
    19 00000A4B E6A0                <2>  out %1, al
    20                              <1>         outp    0xA1, 0x28                      ; // SLAVE.ICW2 = 0x28;
    20 00000A4D B028                <2>  mov al, %2
    20 00000A4F E6A1                <2>  out %1, al
    21                              <1>         outp    0xA1, 0x02                      ; // SLAVE.ICW3 = 0x02;
    21 00000A51 B002                <2>  mov al, %2
    21 00000A53 E6A1                <2>  out %1, al
    22                              <1>         outp    0xA1, 0x01                      ; // SLAVE.ICW4 = 0x01;
    22 00000A55 B001                <2>  mov al, %2
    22 00000A57 E6A1                <2>  out %1, al
    23                              <1>         outp    0xA1, 0xFF                      ; // スレーブ割り込みマスク
    23 00000A59 B0FF                <2>  mov al, %2
    23 00000A5B E6A1                <2>  out %1, al
    24                              <1> 
    25                              <1>         ;---------------------------------------
    26                              <1>         ; レジスタの復帰
    27                              <1>         ;---------------------------------------
    28 00000A5D 58                  <1>         pop     eax
    29                              <1> 
    30 00000A5E C3                  <1>         ret
   140                                  %include  "../modules/protect/int_rtc.s"
     1                              <1> int_rtc:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;---------------------------------------
     5 00000A5F 60                  <1>         pusha
     6 00000A60 1E                  <1>         push    ds
     7 00000A61 06                  <1>         push    es
     8                              <1> 
     9                              <1>         ;---------------------------------------
    10                              <1>         ; データ用セグメントレジスタの設定
    11                              <1>         ;---------------------------------------
    12 00000A62 66B81000            <1>         mov     ax, 0x0010
    13 00000A66 8ED8                <1>         mov     ds, ax
    14 00000A68 8EC0                <1>         mov     es, ax
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;---------------------------------------
    19 00000A6A 68[80010000]E894FD- <1>         cdecl   rtc_get_time, RTC_TIME
    19 00000A72 FFFF6683C404        <1>
    20                              <1> 
    21                              <1>         ;---------------------------------------
    22                              <1>         ; RTCの割り込み要因を取得
    23                              <1>         ;---------------------------------------
    24                              <1>         outp    0x70, 0x0C
    24 00000A78 B00C                <2>  mov al, %2
    24 00000A7A E670                <2>  out %1, al
    25 00000A7C E471                <1>         in      al, 0x71
    26                              <1> 
    27                              <1>         ;---------------------------------------
    28                              <1>         ; 割り込みフラグをクリア(EOI)
    29                              <1>         ;---------------------------------------
    30                              <1>         outp    0xA0, 0x20
    30 00000A7E B020                <2>  mov al, %2
    30 00000A80 E6A0                <2>  out %1, al
    31                              <1>         outp    0x20, 0x20
    31 00000A82 B020                <2>  mov al, %2
    31 00000A84 E620                <2>  out %1, al
    32                              <1> 
    33                              <1>         ;---------------------------------------
    34                              <1>         ; レジスタの復帰
    35                              <1>         ;---------------------------------------
    36 00000A86 07                  <1>         pop     es
    37 00000A87 1F                  <1>         pop     ds
    38 00000A88 61                  <1>         popa
    39                              <1> 
    40 00000A89 CF                  <1>         iret
    41                              <1> 
    42                              <1> rtc_int_en:
    43                              <1>         ;---------------------------------------
    44                              <1>         ; スタックフレームの構築
    45                              <1>         ;---------------------------------------
    46 00000A8A 55                  <1>         push    ebp
    47 00000A8B 89E5                <1>         mov     ebp, esp
    48                              <1> 
    49                              <1>         ;---------------------------------------
    50                              <1>         ; レジスタの保存
    51                              <1>         ;---------------------------------------
    52 00000A8D 50                  <1>         push    eax
    53                              <1> 
    54                              <1>         ;---------------------------------------
    55                              <1>         ; 割り込み許可設定
    56                              <1>         ;---------------------------------------
    57                              <1>         outp    0x70, 0x0B
    57 00000A8E B00B                <2>  mov al, %2
    57 00000A90 E670                <2>  out %1, al
    58                              <1> 
    59 00000A92 E471                <1>         in      al, 0x71
    60 00000A94 0A4508              <1>         or      al, [ebp + 8]
    61                              <1> 
    62 00000A97 E671                <1>         out     0x71, al
    63                              <1> 
    64                              <1>         ;---------------------------------------
    65                              <1>         ; レジスタの復帰
    66                              <1>         ;---------------------------------------
    67 00000A99 58                  <1>         pop     eax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 00000A9A 89EC                <1>         mov     esp, ebp
    73 00000A9C 5D                  <1>         pop     ebp
    74                              <1> 
    75 00000A9D C3                  <1>         ret
   141                                  %include  "../modules/protect/ring_buff.s"
     1                              <1> ring_rd:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5 00000A9E 55                  <1>         push    ebp
     6 00000A9F 89E5                <1>         mov     ebp, esp
     7                              <1> 
     8                              <1>         ;----------------------------------
     9                              <1>         ; レジスタの保存
    10                              <1>         ;----------------------------------
    11 00000AA1 53                  <1>         push    ebx
    12 00000AA2 56                  <1>         push    esi
    13 00000AA3 57                  <1>         push    edi
    14                              <1> 
    15                              <1>         ;----------------------------------
    16                              <1>         ; 引数を取得
    17                              <1>         ;----------------------------------
    18 00000AA4 8B7508              <1>         mov     esi, [ebp + 8]
    19 00000AA7 8B7D0C              <1>         mov     edi, [ebp + 12]
    20                              <1> 
    21                              <1>         ;----------------------------------
    22                              <1>         ; 読み込み位置を確認
    23                              <1>         ;----------------------------------
    24 00000AAA B800000000          <1>         mov     eax, 0
    25 00000AAF 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
    26 00000AB1 3B5E04              <1>         cmp     ebx, [esi + ring_buff.wp]
    27 00000AB4 7411                <1>         je      .10E
    28                              <1> 
    29 00000AB6 8A441E08            <1>         mov     al, [esi + ring_buff.item + ebx]
    30                              <1> 
    31 00000ABA 8807                <1>         mov     [edi], al
    32                              <1> 
    33 00000ABC 43                  <1>         inc     ebx
    34 00000ABD 83E30F              <1>         and     ebx, RING_INDEX_MASK
    35 00000AC0 891E                <1>         mov     [esi + ring_buff.rp], ebx
    36                              <1> 
    37 00000AC2 B801000000          <1>         mov     eax, 1
    38                              <1> .10E:
    39                              <1> 
    40                              <1>         ;----------------------------------
    41                              <1>         ; レジスタの復帰
    42                              <1>         ;----------------------------------
    43 00000AC7 5F                  <1>         pop     edi
    44 00000AC8 5E                  <1>         pop     esi
    45 00000AC9 5B                  <1>         pop     ebx
    46                              <1> 
    47                              <1>         ;----------------------------------
    48                              <1>         ; スタックフレームの破棄
    49                              <1>         ;----------------------------------
    50 00000ACA 89EC                <1>         mov     esp, ebp
    51 00000ACC 5D                  <1>         pop     ebp
    52                              <1> 
    53 00000ACD C3                  <1>         ret
    54                              <1> 
    55                              <1> ring_wr:
    56                              <1>         ;----------------------------------
    57                              <1>         ; スタックフレームの構築
    58                              <1>         ;----------------------------------
    59 00000ACE 55                  <1>         push    ebp
    60 00000ACF 89E5                <1>         mov     ebp, esp
    61                              <1> 
    62                              <1>         ;----------------------------------
    63                              <1>         ; レジスタの保存
    64                              <1>         ;----------------------------------
    65 00000AD1 53                  <1>         push    ebx
    66 00000AD2 51                  <1>         push    ecx
    67 00000AD3 56                  <1>         push    esi
    68                              <1> 
    69                              <1>         ;----------------------------------
    70                              <1>         ; 引数を取得
    71                              <1>         ;----------------------------------
    72 00000AD4 8B7508              <1>         mov     esi, [ebp + 8]
    73                              <1> 
    74                              <1>         ;----------------------------------
    75                              <1>         ; 書き込み位置を確認
    76                              <1>         ;----------------------------------
    77 00000AD7 B800000000          <1>         mov     eax, 0
    78 00000ADC 8B5E04              <1>         mov     ebx, [esi + ring_buff.wp]
    79 00000ADF 89D9                <1>         mov     ecx, ebx
    80 00000AE1 41                  <1>         inc     ecx
    81 00000AE2 83E10F              <1>         and     ecx, RING_INDEX_MASK
    82                              <1> 
    83 00000AE5 3B0E                <1>         cmp     ecx, [esi + ring_buff.rp]
    84 00000AE7 740F                <1>         je      .10E
    85                              <1> 
    86 00000AE9 8A450C              <1>         mov     al, [ebp + 12]
    87                              <1> 
    88 00000AEC 88441E08            <1>         mov     [esi + ring_buff.item + ebx], al
    89 00000AF0 894E04              <1>         mov     [esi + ring_buff.wp], ecx
    90 00000AF3 B801000000          <1>         mov     eax, 1
    91                              <1> .10E:
    92                              <1> 
    93                              <1>         ;----------------------------------
    94                              <1>         ; レジスタの復帰
    95                              <1>         ;----------------------------------
    96 00000AF8 5E                  <1>         pop     esi
    97 00000AF9 59                  <1>         pop     ecx
    98 00000AFA 5B                  <1>         pop     ebx
    99                              <1> 
   100                              <1>         ;----------------------------------
   101                              <1>         ; スタックフレームの破棄
   102                              <1>         ;----------------------------------
   103 00000AFB 89EC                <1>         mov     esp, ebp
   104 00000AFD 5D                  <1>         pop     ebp
   105                              <1> 
   106 00000AFE C3                  <1>         ret
   107                              <1> 
   108                              <1> draw_key:
   109                              <1>         ;----------------------------------
   110                              <1>         ; スタックフレームの構築
   111                              <1>         ;----------------------------------
   112                              <1> 
   113 00000AFF 55                  <1>         push    ebp
   114 00000B00 89E5                <1>         mov     ebp, esp
   115                              <1> 
   116                              <1>         ;----------------------------------
   117                              <1>         ; レジスタの保存
   118                              <1>         ;----------------------------------
   119 00000B02 60                  <1>         pusha
   120                              <1> 
   121                              <1>         ;----------------------------------
   122                              <1>         ; 引数の取得
   123                              <1>         ;----------------------------------
   124 00000B03 8B5508              <1>         mov     edx, [ebp + 8]
   125 00000B06 8B7D0C              <1>         mov     edi, [ebp + 12]
   126 00000B09 8B7510              <1>         mov     esi, [ebp + 16]
   127                              <1> 
   128                              <1>         ;----------------------------------
   129                              <1>         ; リングバッファの情報を取得
   130                              <1>         ;----------------------------------
   131 00000B0C 8B1E                <1>         mov     ebx, [esi + ring_buff.rp]
   132 00000B0E 8D7608              <1>         lea     esi, [esi + ring_buff.item]
   133 00000B11 B910000000          <1>         mov     ecx, RING_ITEM_SIZE
   134                              <1> 
   135                              <1>         ;----------------------------------
   136                              <1>         ; 文字に変換しながら表示
   137                              <1>         ;----------------------------------
   138                              <1> .10L:
   139                              <1> 
   140 00000B16 4B                  <1>         dec     ebx
   141 00000B17 83E30F              <1>         and     ebx, RING_INDEX_MASK
   142 00000B1A 8A041E              <1>         mov     al, [esi + ebx]
   143                              <1> 
   144 00000B1D 6A046A106A0268-     <1>         cdecl   itoa, eax, .tmp, 2, 16, 0b0100
   144 00000B24 [4E0B0000]50E851FC- <1>
   144 00000B2C FFFF6683C414        <1>
   145 00000B32 68[4E0B0000]6A0257- <1>         cdecl   draw_str, edx, edi, 0x02, .tmp
   145 00000B3A 52E8A1F9FFFF6683C4- <1>
   145 00000B43 10                  <1>
   146                              <1> 
   147 00000B44 83C203              <1>         add     edx, 3
   148                              <1> 
   149 00000B47 E2CD                <1>         loop    .10L
   150                              <1> .10E:
   151                              <1> 
   152                              <1>         ;----------------------------------
   153                              <1>         ; レジスタの復帰
   154                              <1>         ;----------------------------------
   155 00000B49 61                  <1>         popa
   156                              <1> 
   157                              <1>         ;----------------------------------
   158                              <1>         ; スタックフレームの破棄
   159                              <1>         ;----------------------------------
   160 00000B4A 89EC                <1>         mov     esp, ebp
   161 00000B4C 5D                  <1>         pop     ebp
   162                              <1> 
   163 00000B4D C3                  <1>         ret
   164                              <1> 
   165 00000B4E 2D2D2000            <1> .tmp    db "-- ", 0
   142                                  %include  "../modules/protect/int_keyboard.s"
     1                              <1> int_keyboard:
     2                              <1>         ;----------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;----------------------------------
     5 00000B52 60                  <1>         pusha
     6 00000B53 1E                  <1>         push    ds
     7 00000B54 06                  <1>         push    es
     8                              <1> 
     9                              <1>         ;----------------------------------
    10                              <1>         ; データセグメント用の設定
    11                              <1>         ;----------------------------------
    12 00000B55 66B81000            <1>         mov     ax, 0x0010
    13 00000B59 8ED8                <1>         mov     ds, ax
    14 00000B5B 8EC0                <1>         mov     es, ax
    15                              <1> 
    16                              <1>         ;----------------------------------
    17                              <1>         ; KBCのバッファ読み取り
    18                              <1>         ;----------------------------------
    19 00000B5D E460                <1>         in      al, 0x60
    20                              <1> 
    21                              <1>         ;----------------------------------
    22                              <1>         ; キーコードの保存
    23                              <1>         ;----------------------------------
    24 00000B5F 5068[780B0000]E864- <1>         cdecl   ring_wr, _KEY_BUFF, eax
    24 00000B67 FFFFFF6683C408      <1>
    25                              <1> 
    26                              <1>         ;----------------------------------
    27                              <1>         ; 割り込み終了コマンド送信
    28                              <1>         ;----------------------------------
    29                              <1>         outp    0x20, 0x20
    29 00000B6E B020                <2>  mov al, %2
    29 00000B70 E620                <2>  out %1, al
    30                              <1> 
    31                              <1>         ;----------------------------------
    32                              <1>         ; レジスタの復帰
    33                              <1>         ;----------------------------------
    34 00000B72 07                  <1>         pop     es
    35 00000B73 1F                  <1>         pop     ds
    36 00000B74 61                  <1>         popa
    37                              <1> 
    38 00000B75 CF                  <1>         iret
    39                              <1>         
    40 00000B76 00<rept>            <1> ALIGN 4,  db 0
    41 00000B78 00<rept>            <1> _KEY_BUFF:  times ring_buff_size db 0
   143                                  %include  "../modules/protect/timer.s"
     1                              <1> int_en_timer0:
     2                              <1>         ;----------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;----------------------------------
     5 00000B90 50                  <1>         push    eax
     6                              <1> 
     7                              <1>         ;----------------------------------
     8                              <1>         ; 8254 Timer
     9                              <1>         ; 0x2e9c(11932)=10[ms] @ CLK=1,193,182[Hz]
    10                              <1>         ;----------------------------------
    11                              <1>         outp    0x43, 0b_00_11_010_0
    11 00000B91 B034                <2>  mov al, %2
    11 00000B93 E643                <2>  out %1, al
    12                              <1>         outp    0x40, 0x9C
    12 00000B95 B09C                <2>  mov al, %2
    12 00000B97 E640                <2>  out %1, al
    13                              <1>         outp    0x40, 0x2E
    13 00000B99 B02E                <2>  mov al, %2
    13 00000B9B E640                <2>  out %1, al
    14                              <1> 
    15                              <1>         ;----------------------------------
    16                              <1>         ; レジスタの復帰
    17                              <1>         ;----------------------------------
    18 00000B9D 58                  <1>         pop     eax
    19                              <1> 
    20 00000B9E C3                  <1>         ret
   144                                  %include  "../modules/protect/draw_rotation_bar.s"
     1                              <1> draw_rotation_bar:
     2                              <1>         ;----------------------------------
     3                              <1>         ; レジスタの保存
     4                              <1>         ;----------------------------------
     5 00000B9F 50                  <1>         push    eax
     6                              <1> 
     7                              <1>         ;----------------------------------
     8                              <1>         ; タイマー割り込みカウンタを確認
     9                              <1>         ;----------------------------------
    10 00000BA0 A1[E8020000]        <1>         mov     eax, [TIMER_COUNT]
    11 00000BA5 C1E804              <1>         shr     eax, 4
    12 00000BA8 3B05[D00B0000]      <1>         cmp     eax, [.index]
    13 00000BAE 741E                <1>         je      .10E
    14                              <1> 
    15 00000BB0 A3[D00B0000]        <1>         mov     [.index], eax
    16 00000BB5 83E003              <1>         and     eax, 0x03
    17                              <1> 
    18 00000BB8 8A80[D40B0000]      <1>         mov     al, [.table + eax]
    19 00000BBE 506A0F6A1D6A00E80E- <1>         cdecl   draw_char, 0, 29, 0x000F, eax
    19 00000BC7 F8FFFF6683C410      <1>
    20                              <1> 
    21                              <1> .10E:
    22                              <1> 
    23                              <1>         ;----------------------------------
    24                              <1>         ; レジスタの復帰
    25                              <1>         ;----------------------------------
    26 00000BCE 58                  <1>         pop     eax
    27 00000BCF C3                  <1>         ret
    28                              <1> 
    29                              <1> ALIGN 4, db 0
    30 00000BD0 00000000            <1> .index:     dd 0
    31 00000BD4 7C2F2D5C            <1> .table:     db  "|/-\"
   145                                  
   146                                  ;************************************************
   147                                  ;   パディング
   148                                  ;************************************************
   149 00000BD8 00<rept>                        times   KERNEL_SIZE - ($ - $$)      db  0x00
