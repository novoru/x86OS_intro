     1                                  %include "../include/define.s"
     1                              <1>     BOOT_LOAD       equ     0x7C00
     2                              <1>     BOOT_END        equ     (BOOT_LOAD + BOOT_SIZE)
     3                              <1> 
     4                              <1>     BOOT_SIZE       equ     (1024 * 8)
     5                              <1>     SECT_SIZE       equ     (512)
     6                              <1>     BOOT_SECT       equ     (BOOT_SIZE / SECT_SIZE)
     7                              <1> 
     8                              <1>     E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>     KERNEL_LOAD     equ     0x0010_1000
    11                              <1>     KERNEL_SIZE     equ     (1024 * 8)      ; カーネルサイズ
    12                              <1>     KERNEL_SECT     equ     (KERNEL_SIZE / SECT_SIZE)
     2                                  %include "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1           ; ドライブ番号
    19 00000002 <res 00000002>      <1>         .cyln   resw    1           ; シリンダ
    20 00000004 <res 00000002>      <1>         .head   resw    1           ; ヘッド
    21 00000006 <res 00000002>      <1>         .sect   resw    1           ; セクタ
    22                              <1> endstruc
     3                                  
     4                                          ORG     KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  ;************************************************
     8                                  ;   エントリポイント
     9                                  ;************************************************
    10                                  kernel:
    11                                          ;----------------------------------
    12                                          ; フォントアドレスを取得
    13                                          ;----------------------------------
    14 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE      ; ESI = 0x7C00 + 512;
    15 00000005 0FB706                          movzx   eax, word [esi + 0]             ; EAX = [ESI + 0]; // セグメント
    16 00000008 0FB75E02                        movzx   ebx, word [esi + 2]             ; EBX = [ESI + 2]; // オフセット
    17 0000000C C1E004                          shl     eax, 4                          ; EAX <<= 4;
    18 0000000F 01D8                            add     eax, ebx                        ; EAX += EBX;
    19 00000011 A3[D8000000]                    mov     [FONT_ADR], eax                 ; FONT_ADR[0] = EAX;
    20                                          
    21                                          ;---------------------------------------
    22                                          ; フォントの一覧表示
    23                                          ;---------------------------------------
    24 00000016 6A0D6A3FE838020000-             cdecl   draw_font, 63, 13               ; // フォントの一覧表示
    24 0000001F 6683C408           
    25 00000023 6A046A3FE8B9020000-             cdecl   draw_color_bar, 63, 4           ; // カラーバーの表示
    25 0000002C 6683C408           
    26                                  
    27 00000030 68[C5000000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    27 00000038 00006A0E6A19E85902-
    27 00000041 00006683C410       
    28                                  
    29 00000047 6A0368C800000068C8-             cdecl   draw_rect, 100, 100, 200, 200, 0x03
    29 00000050 0000006A646A64E878-
    29 00000059 0400006683C414     
    30 00000060 6A0568960000006896-             cdecl   draw_rect, 400, 250, 150, 150, 0x05
    30 00000069 00000068FA00000068-
    30 00000072 90010000E859040000-
    30 0000007B 6683C414           
    31 0000007F 6A066A64682C010000-             cdecl   draw_rect, 350, 400, 300, 100, 0x06
    31 00000088 6890010000685E0100-
    31 00000091 00E83D0400006683C4-
    31 0000009A 14                 
    32                                  
    33                                          ;----------------------------------
    34                                          ; 時刻の表示
    35                                          ;----------------------------------
    36                                  .10L:                                                   ; do
    37                                                                                          ; {
    38 0000009B 68[DC000000]E81E05-             cdecl   rtc_get_time, RTC_TIME                  ;    EAX = get_time(&RTC_TIME);
    38 000000A3 00006683C404       
    40 000000A9 FF35[DC000000]6800-             cdecl   draw_time, 72, 0, 0x0700,                                       dword [RTC_TIME]
    40 000000B1 0700006A006A48E831-
    40 000000BA 0500006683C410     
    41 000000C1 EBD8                            jmp     .10L                                    ; } while(1);
    42                                  
    43                                          ;----------------------------------
    44                                          ; 処理の終了
    45                                          ;----------------------------------
    46 000000C3 EBFE                            jmp     $                               ; while(1);     // 無限ループ
    47                                  
    48 000000C5 2048656C6C6F2C206B-     .s0:    db  " Hello, kernel!", 0
    48 000000CE 65726E656C2100     
    49                                  
    50 000000D5 00<rept>                ALIGN 4, db 0
    51 000000D8 00000000                FONT_ADR:       dd  0
    52 000000DC 00000000                RTC_TIME:       dd  0
    53                                  
    54                                  ;************************************************
    55                                  ;   モジュール
    56                                  ;************************************************
    57                                  %include  "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5                              <1>                                             ;    + 8| プレーン (インデックス)
     6                              <1>                                             ; ------+---------------
     7 000000E0 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
     8 000000E1 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
     9                              <1>                                             ;-------+---------------
    10                              <1> 
    11                              <1>         ;---------------------------------
    12                              <1>         ; レジスタの保存
    13                              <1>         ;---------------------------------
    14 000000E3 50                  <1>         push    eax
    15 000000E4 52                  <1>         push    edx
    16                              <1> 
    17                              <1>         ;---------------------------------
    18                              <1>         ; 読み込みプレーンの選択
    19                              <1>         ;---------------------------------
    20 000000E5 8A6508              <1>         mov     ah, [ebp + 8]
    21 000000E8 80E403              <1>         and     ah, 0x03
    22 000000EB B004                <1>         mov     al, 0x04
    23 000000ED 66BACE03            <1>         mov     dx, 0x03CE
    24 000000F1 66EF                <1>         out     dx, ax
    25                              <1> 
    26                              <1>         ;---------------------------------
    27                              <1>         ; レジスタの復帰
    28                              <1>         ;---------------------------------
    29 000000F3 5A                  <1>         pop     edx
    30 000000F4 58                  <1>         pop     eax
    31                              <1> 
    32                              <1>         ;---------------------------------
    33                              <1>         ; スタックフレームの破棄
    34                              <1>         ;---------------------------------
    35 000000F5 89EC                <1>         mov     esp, ebp
    36 000000F7 5D                  <1>         pop     ebp
    37                              <1> 
    38 000000F8 C3                  <1>         ret
    39                              <1> 
    40                              <1> vga_set_write_plane:
    41                              <1>         ;---------------------------------
    42                              <1>         ; スタックフレームの構築
    43                              <1>         ;---------------------------------
    44                              <1>                                             ;    + 8| プレーン (ビット指定)
    45                              <1>                                             ; ------+---------------
    46 000000F9 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
    47 000000FA 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
    48                              <1>                                             ;-------+---------------
    49                              <1> 
    50                              <1>         ;---------------------------------
    51                              <1>         ; レジスタの保存
    52                              <1>         ;---------------------------------
    53 000000FC 50                  <1>         push    eax
    54 000000FD 52                  <1>         push    edx
    55                              <1> 
    56                              <1>         ;---------------------------------
    57                              <1>         ; 書き込みプレーンの選択
    58                              <1>         ;---------------------------------
    59 000000FE 8A6508              <1>         mov     ah, [ebp + 8]
    60 00000101 80E40F              <1>         and     ah, 0x0F
    61 00000104 B002                <1>         mov     al, 0x02
    62 00000106 66BAC403            <1>         mov     dx, 0x03C4
    63 0000010A 66EF                <1>         out     dx, ax
    64                              <1> 
    65                              <1>         ;---------------------------------
    66                              <1>         ; レジスタの復帰
    67                              <1>         ;---------------------------------
    68 0000010C 5A                  <1>         pop     edx
    69 0000010D 58                  <1>         pop     eax
    70                              <1> 
    71                              <1>         ;---------------------------------
    72                              <1>         ; スタックフレームの破棄
    73                              <1>         ;---------------------------------
    74 0000010E 89EC                <1>         mov     esp, ebp
    75 00000110 5D                  <1>         pop     ebp
    76                              <1> 
    77 00000111 C3                  <1>         ret
    78                              <1> 
    79                              <1> vram_font_copy:
    80                              <1>         ;---------------------------------
    81                              <1>         ; スタックフレームの構築
    82                              <1>         ;---------------------------------
    83                              <1>                                             ;    +20| 描画色
    84                              <1>                                             ;    +16| プレーン(ビット指定)
    85                              <1>                                             ;    +12| VRAMアドレス
    86                              <1>                                             ;    + 8| フォントアドレス
    87                              <1>                                             ; ------+---------------
    88 00000112 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
    89 00000113 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
    90                              <1>                                             ; ------+---------------
    91                              <1> 
    92                              <1>         ;---------------------------------
    93                              <1>         ; レジスタの保存
    94                              <1>         ;---------------------------------
    95 00000115 50                  <1>         push    eax
    96 00000116 53                  <1>         push    ebx
    97 00000117 51                  <1>         push    ecx
    98 00000118 52                  <1>         push    edx
    99 00000119 56                  <1>         push    esi
   100 0000011A 57                  <1>         push    edi
   101                              <1> 
   102                              <1>         ;---------------------------------
   103                              <1>         ; 処理の開始
   104                              <1>         ;---------------------------------
   105 0000011B 8B7508              <1>         mov     esi, [ebp + 8]
   106 0000011E 8B7D0C              <1>         mov     edi, [ebp +12]
   107 00000121 0FB64510            <1>         movzx   eax, byte [ebp +16]
   108 00000125 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   109                              <1> 
   110 00000129 84C7                <1>         test    bh, al
   111 0000012B 0F94C6              <1>         setz    dh
   112 0000012E FECE                <1>         dec     dh
   113                              <1> 
   114 00000130 84C3                <1>         test    bl, al
   115 00000132 0F94C2              <1>         setz    dl
   116 00000135 FECA                <1>         dec     dl
   117                              <1> 
   118                              <1>         ;---------------------------------
   119                              <1>         ; 16ドットフォントのコピー
   120                              <1>         ;---------------------------------
   121 00000137 FC                  <1>         cld
   122                              <1> 
   123 00000138 B910000000          <1>         mov     ecx, 16
   124                              <1> .10L:
   125                              <1>         ;---------------------------------
   126                              <1>         ; フォントマスクの作成
   127                              <1>         ;---------------------------------
   128 0000013D AC                  <1>         lodsb
   129 0000013E 88C4                <1>         mov     ah, al
   130 00000140 F6D4                <1>         not     ah
   131                              <1> 
   132                              <1>         ;---------------------------------
   133                              <1>         ; 前景色
   134                              <1>         ;---------------------------------
   135                              <1> 
   136 00000142 20D0                <1>         and     al, dl
   137                              <1> 
   138                              <1>         ;---------------------------------
   139                              <1>         ; 背景色
   140                              <1>         ;---------------------------------
   141 00000144 F7C310000000        <1>         test    ebx, 0x0010
   142 0000014A 7404                <1>         jz      .11F
   143 0000014C 2227                <1>         and     ah, [edi]
   144 0000014E EB02                <1>         jmp     .11E
   145                              <1> .11F:
   146                              <1> 
   147 00000150 20F4                <1>         and     ah, dh
   148                              <1> .11E:
   149                              <1> 
   150                              <1>         ;---------------------------------
   151                              <1>         ; 前景色と背景色を合成
   152                              <1>         ;---------------------------------
   153 00000152 08E0                <1>         or      al, ah
   154                              <1> 
   155                              <1>         ;---------------------------------
   156                              <1>         ; 新しい値を出力
   157                              <1>         ;---------------------------------
   158 00000154 8807                <1>         mov     [edi], al
   159                              <1> 
   160 00000156 83C750              <1>         add     edi, 80
   161 00000159 E2E2                <1>         loop    .10L
   162                              <1> .10E:
   163                              <1> 
   164                              <1>         ;---------------------------------
   165                              <1>         ; レジスタの復帰
   166                              <1>         ;---------------------------------
   167 0000015B 5F                  <1>         pop     edi
   168 0000015C 5E                  <1>         pop     esi
   169 0000015D 5A                  <1>         pop     edx
   170 0000015E 59                  <1>         pop     ecx
   171 0000015F 5B                  <1>         pop     ebx
   172 00000160 58                  <1>         pop     eax
   173                              <1> 
   174                              <1>         ;---------------------------------
   175                              <1>         ; スタックフレームの破棄
   176                              <1>         ;---------------------------------
   177 00000161 89EC                <1>         mov     esp, ebp
   178 00000163 5D                  <1>         pop     ebp
   179                              <1> 
   180 00000164 C3                  <1>         ret
   181                              <1> 
   182                              <1> vram_bit_copy:
   183                              <1>         ;---------------------------------------
   184                              <1>         ; スタックフレームの構築
   185                              <1>         ;---------------------------------------
   186                              <1>                                                 ; EBP+20| 色（背景/前景色）
   187                              <1>                                                 ; EBP+16| プレーン（ビット指定）
   188                              <1>                                                 ; EBP+12| VRAMアドレス
   189                              <1>                                                 ; EBP+ 8| 出力ビットパターン
   190                              <1> 	                                        ; ------+----------------
   191 00000165 55                  <1>         push    ebp				; EBP+ 4| EIP（戻り番地）
   192 00000166 89E5                <1>         mov     ebp, esp			; EBP+ 0| EBP（元の値）
   193                              <1> 						; ------+----------------
   194                              <1> 
   195                              <1>         ;---------------------------------------
   196                              <1>         ; レジスタの保存
   197                              <1>         ;---------------------------------------
   198 00000168 50                  <1>         push    eax
   199 00000169 53                  <1>         push    ebx
   200 0000016A 57                  <1>         push    edi
   201                              <1> 
   202                              <1>         ;---------------------------------------
   203                              <1>         ; 処理の開始
   204                              <1>         ;---------------------------------------
   205 0000016B 8B7D0C              <1>         mov     edi, [ebp + 12]                 ; EDI = VRAMアドレス;
   206 0000016E 0FB64510            <1>         movzx   eax, byte [ebp + 16]            ; EAX = プレーン(ビット指定);
   207 00000172 0FB75D14            <1>         movzx   ebx, word [ebp + 20]            ; EBX = 表示色;
   208                              <1> 
   209 00000176 84C3                <1>         test    bl, al                          ; ZF = (前景色 & プレーン);
   210 00000178 0F94C3              <1>         setz    bl                              ; BL = ZF ? 0x01 : 0x00;
   211 0000017B FECB                <1>         dec     bl                              ; BL--; // 0x00 or 0xFF
   212                              <1> 
   213                              <1>         ;---------------------------------------
   214                              <1>         ;  マスクデータの作成
   215                              <1>         ;---------------------------------------
   216 0000017D 8A4508              <1>         mov     al, [ebp + 8]                   ; AL = 出力ビットパターン;
   217 00000180 88C4                <1>         mov     ah, al                          ; AH ~= AL;     // !出力ビットパターン(ビット反転)
   218 00000182 F6D4                <1>         not     ah
   219                              <1> 
   220                              <1>         ;---------------------------------------
   221                              <1>         ; 現在地の出力を取得
   222                              <1>         ;---------------------------------------
   223 00000184 2227                <1>         and     ah, [edi]                       ; AH = 現在地 & !出力ビットパターン;
   224 00000186 20D8                <1>         and     al, bl                          ; AL = 表示色 &  出力ビットパターン;
   225 00000188 08E0                <1>         or      al, ah                          ; AL |= AH;
   226                              <1> 
   227                              <1>         ;---------------------------------------
   228                              <1>         ; 新しい値を出力
   229                              <1>         ;---------------------------------------
   230 0000018A 8807                <1>         mov     [edi], al                       ; [EDI] = BL;   // プレーンに書き込む
   231                              <1> 
   232                              <1>         ;---------------------------------------
   233                              <1>         ; レジスタの復帰
   234                              <1>         ;---------------------------------------
   235 0000018C 5F                  <1>         pop     edi
   236 0000018D 5B                  <1>         pop     ebx
   237 0000018E 58                  <1>         pop     eax
   238                              <1> 
   239                              <1>         ;---------------------------------------
   240                              <1>         ; スタックフレームの破棄
   241                              <1>         ;---------------------------------------
   242 0000018F 89EC                <1>         mov     esp, ebp
   243 00000191 5D                  <1>         pop     ebp
   244                              <1> 
   245 00000192 C3                  <1>         ret
    58                                  %include  "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1>     ;---------------------------------
     3                              <1>     ;   スタックフレームの構築
     4                              <1>     ;---------------------------------
     5                              <1>                                         ;     +20| 文字
     6                              <1>                                         ;     +16| 描画色
     7                              <1>                                         ;     +12| 行
     8                              <1>                                         ;     + 8| 列
     9                              <1>                                         ;  ------|------
    10 00000193 55                  <1>     push    ebp                         ;  EBP+ 4| IP(戻り番地)
    11 00000194 89E5                <1>     mov     ebp, esp                    ;  EBP+ 0| BP(元の値)
    12                              <1>                                         ;  ------+------
    13                              <1> 
    14                              <1>     ;---------------------------------
    15                              <1>     ; レジスタの保存
    16                              <1>     ;---------------------------------
    17 00000196 50                  <1>     push    eax
    18 00000197 53                  <1>     push    ebx
    19 00000198 51                  <1>     push    ecx
    20 00000199 52                  <1>     push    edx
    21 0000019A 56                  <1>     push    esi
    22 0000019B 57                  <1>     push    edi
    23                              <1> 
    24                              <1>     ;---------------------------------------
    25                              <1>     ; テストアンドセット
    26                              <1>     ;---------------------------------------
    27                              <1> %ifdef	USE_TEST_AND_SET
    28                              <1>     cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    29                              <1> %endif
    30                              <1> 
    31                              <1>     ;---------------------------------------
    32                              <1>     ; コピー元フォントアドレスを設定
    33                              <1>     ;---------------------------------------
    34 0000019C 0FB67514            <1>     movzx   esi, byte [ebp + 20]            ; CL  = 文字コード;
    35 000001A0 C1E604              <1>     shl     esi, 4							; CL *= 16; // 1文字16バイト
    36 000001A3 0335[D8000000]      <1>     add     esi, [FONT_ADR]					; ESI = フォントアドレス;
    37                              <1> 
    38                              <1>     ;---------------------------------------
    39                              <1>     ; コピー先アドレスを取得
    40                              <1>     ; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    41                              <1>     ;---------------------------------------
    42 000001A9 8B7D0C              <1>     mov     edi, [ebp + 12]                 ; Y（行）
    43 000001AC C1E708              <1>     shl     edi, 8							; EDI = Y * 256;
    44 000001AF 8DBCBF00000A00      <1>     lea     edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
    45 000001B6 037D08              <1>     add     edi, [ebp + 8]					; X（列）
    46                              <1> 
    47                              <1>     ;---------------------------------------
    48                              <1>     ; 1文字分のフォントを出力
    49                              <1>     ;---------------------------------------
    50 000001B9 0FB75D10            <1>     movzx   ebx, word [ebp + 16]            ; // 表示色
    51                              <1> 
    52 000001BD 6A03E81CFFFFFF6683- <1>     cdecl   vga_set_read_plane, 0x03		; // 書き込みプレーン：輝度(I)
    52 000001C6 C404                <1>
    53 000001C8 6A08E82AFFFFFF6683- <1>     cdecl   vga_set_write_plane, 0x08		; // 読み込みプレーン：輝度(I)
    53 000001D1 C404                <1>
    54 000001D3 536A085756E835FFFF- <1>     cdecl   vram_font_copy, esi, edi, 0x08, ebx
    54 000001DC FF6683C410          <1>
    55                              <1> 
    56 000001E1 6A02E8F8FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x02		; // 書き込みプレーン：赤(R)
    56 000001EA C404                <1>
    57 000001EC 6A04E806FFFFFF6683- <1>     cdecl   vga_set_write_plane, 0x04		; // 読み込みプレーン：赤(R)
    57 000001F5 C404                <1>
    58 000001F7 536A045756E811FFFF- <1>     cdecl   vram_font_copy, esi, edi, 0x04, ebx
    58 00000200 FF6683C410          <1>
    59                              <1> 
    60 00000205 6A01E8D4FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x01		; // 書き込みプレーン：緑(G)
    60 0000020E C404                <1>
    61 00000210 6A02E8E2FEFFFF6683- <1>     cdecl   vga_set_write_plane, 0x02		; // 読み込みプレーン：緑(G)
    61 00000219 C404                <1>
    62 0000021B 536A025756E8EDFEFF- <1>     cdecl   vram_font_copy, esi, edi, 0x02, ebx
    62 00000224 FF6683C410          <1>
    63                              <1> 
    64 00000229 6A00E8B0FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x00		; // 書き込みプレーン：青(B)
    64 00000232 C404                <1>
    65 00000234 6A01E8BEFEFFFF6683- <1>     cdecl   vga_set_write_plane, 0x01		; // 読み込みプレーン：青(B)
    65 0000023D C404                <1>
    66 0000023F 536A015756E8C9FEFF- <1>     cdecl   vram_font_copy, esi, edi, 0x01, ebx
    66 00000248 FF6683C410          <1>
    67                              <1> 
    68                              <1> %ifdef	USE_TEST_AND_SET
    69                              <1>     ;---------------------------------------
    70                              <1>     ; テストアンドセット
    71                              <1>     ;---------------------------------------
    72                              <1>     mov		[IN_USE], dword 0				; 変数のクリア
    73                              <1> %endif
    74                              <1> 
    75                              <1>     ;---------------------------------
    76                              <1>     ; レジスタの復帰
    77                              <1>     ;---------------------------------
    78 0000024D 5F                  <1>     pop     edi
    79 0000024E 5E                  <1>     pop     esi
    80 0000024F 5A                  <1>     pop     edx
    81 00000250 59                  <1>     pop     ecx
    82 00000251 5B                  <1>     pop     ebx
    83 00000252 58                  <1>     pop     eax
    84                              <1> 
    85                              <1>     ;---------------------------------
    86                              <1>     ; スタックフレームの破棄
    87                              <1>     ;---------------------------------
    88 00000253 89EC                <1>     mov     esp, ebp
    89 00000255 5D                  <1>     pop     ebp
    90                              <1> 
    91 00000256 C3                  <1>     ret
    92                              <1> 
    93                              <1> %ifdef USE_TEST_AND_SET
    94                              <1> ALIGN 4, db 0
    95                              <1> IN_USE:	dd	0
    96                              <1> %endif
    59                                  %include  "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; EBP+12| Y（行）
     6                              <1> 												; EBP+ 8| X（列）
     7                              <1> 												; ---------------
     8 00000257 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
     9 00000258 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    10                              <1> 												; ---------------
    11                              <1> 
    12                              <1>         ;----------------------------------
    13                              <1>         ; レジスタの保存
    14                              <1>         ;----------------------------------
    15 0000025A 50                  <1>         push    eax
    16 0000025B 53                  <1>         push    ebx
    17 0000025C 51                  <1>         push    ecx
    18 0000025D 52                  <1>         push    edx
    19 0000025E 56                  <1>         push    esi
    20 0000025F 57                  <1>         push    edi
    21                              <1> 
    22                              <1>         ;----------------------------------
    23                              <1>         ; 表示位置
    24                              <1>         ;----------------------------------
    25 00000260 8B7508              <1>         mov     esi, [ebp + 8]					; ESI = X（列）
    26 00000263 8B7D0C              <1>         mov     edi, [ebp +12]					; EDI = Y（行）
    27                              <1> 
    28                              <1>         ;----------------------------------
    29                              <1>         ; フォント一覧を表示
    30                              <1>         ;----------------------------------
    31 00000266 B900000000          <1>         mov     ecx, 0							; for (ECX = 0;
    32 0000026B 81F900010000        <1> .10L:   cmp     ecx, 256						;      ECX < 256;
    33 00000271 731F                <1>         jae     .10E                            ;
    34                              <1> 												;      ECX++)
    35                              <1> 												; {
    36                              <1> 												;   // 桁位置の計算
    37 00000273 89C8                <1>         mov     eax, ecx						;   EAX  = ECX;
    38 00000275 83E00F              <1>         and     eax, 0x0F						;   EAX &= 0x0F
    39 00000278 01F0                <1>         add     eax, esi						;   EAX += X;
    40                              <1>                                                 ;
    41                              <1> 												;   // 行位置の計算
    42 0000027A 89CB                <1>         mov     ebx, ecx						;   EBX  = ECX;
    43 0000027C C1EB04              <1>         shr     ebx, 4							;   EBX /= 16
    44 0000027F 01FB                <1>         add     ebx, edi						;   EBX += Y;
    45                              <1> 
    46 00000281 516A075350E808FFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx	;   draw_char();
    46 0000028A FF6683C410          <1>
    47                              <1> 
    48 0000028F 41                  <1>         inc     ecx								;   // for (... ECX++)
    49 00000290 EBD9                <1>         jmp     .10L                            ;
    50                              <1> .10E:                                           ; }
    51                              <1> 
    52                              <1> 
    53                              <1> 
    54                              <1>         ;----------------------------------
    55                              <1>         ; レジスタの復帰
    56                              <1>         ;----------------------------------
    57 00000292 5F                  <1>         pop     edi
    58 00000293 5E                  <1>         pop     esi
    59 00000294 5A                  <1>         pop     edx
    60 00000295 59                  <1>         pop     ecx
    61 00000296 5B                  <1>         pop     ebx
    62 00000297 58                  <1>         pop     eax
    63                              <1> 
    64                              <1>         ;----------------------------------
    65                              <1>         ; スタックフレームの破棄
    66                              <1>         ;----------------------------------
    67 00000298 89EC                <1>         mov     esp, ebp
    68 0000029A 5D                  <1>         pop     ebp
    69                              <1> 
    70 0000029B C3                  <1>         ret
    60                                  %include  "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5                              <1>                                             ;     +20| 文字列のアドレス
     6                              <1>                                             ;     +16| 色
     7                              <1>                                             ;     +12| 行
     8                              <1>                                             ;     + 8| 列
     9                              <1>                                             ; -------+--------------
    10 0000029C 55                  <1>         push    ebp                         ;     + 4| EIP (戻り番地)
    11 0000029D 89E5                <1>         mov     ebp, esp                    ; EBP + 0| EBP (元の値)
    12                              <1> 
    13                              <1>         ;---------------------------------
    14                              <1>         ; レジスタの保存
    15                              <1>         ;---------------------------------
    16 0000029F 50                  <1> 		push	eax
    17 000002A0 53                  <1> 		push	ebx
    18 000002A1 51                  <1> 		push	ecx
    19 000002A2 52                  <1> 		push	edx
    20 000002A3 56                  <1> 		push	esi
    21                              <1> 
    22                              <1>         ;---------------------------------
    23                              <1>         ; 文字列の表示
    24                              <1>         ;---------------------------------
    25 000002A4 8B4D08              <1>         mov     ecx, [ebp + 8]              ; ECX = 列;
    26 000002A7 8B550C              <1>         mov     edx, [ebp + 12]             ; EDX = 行;
    27 000002AA 0FB75D10            <1>         movzx   ebx, word [ebp + 16]        ; EBX = 表示色;
    28 000002AE 8B7514              <1>         mov     esi, [ebp + 20]             ; ESI = 文字列のアドレス;
    29                              <1> 
    30 000002B1 FC                  <1>         cld                                 ; DF = 0;   // アドレス加算
    31                              <1> .10L:                                       ; do
    32                              <1>                                             ; {
    33 000002B2 AC                  <1>         lodsb                               ;    AL = *ESI++;
    34 000002B3 3C00                <1>         cmp     al, 0                       ;    if(0 == AL)
    35 000002B5 7425                <1>         je      .10E                        ;      break;
    36                              <1> 
    37                              <1>         ;---------------------------------
    38                              <1>         ; 1文字表示
    39                              <1>         ;---------------------------------
    40 000002B7 50535251E8D3FEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax   ;   draw_char();
    40 000002C0 6683C410            <1>
    41                              <1> 
    42                              <1>         ; 次の文字の位置を調整
    43 000002C4 41                  <1>         inc     ecx                         ;   ECX++;
    44 000002C5 83F950              <1>         cmp     ecx, 80                     ;   if(80 <= ECX)
    45 000002C8 7C10                <1>         jl      .12E                        ;   {
    46 000002CA B900000000          <1>         mov     ecx, 0                      ;      ECX = 0;
    47 000002CF 42                  <1>         inc     edx                         ;      EDX++;
    48 000002D0 83FA1E              <1>         cmp     edx, 30                     ;      if(30 <= EDX)
    49 000002D3 7C05                <1>         jl      .12E                        ;      {
    50 000002D5 BA00000000          <1>         mov     edx, 0                      ;         EDX = 0;
    51                              <1> .12E:                                       ;      }
    52 000002DA EBD6                <1>         jmp     .10L                        ;   }
    53                              <1> .10E:                                       ; } while(1);
    54                              <1>        
    55                              <1>         ;---------------------------------
    56                              <1>         ; レジスタの復帰
    57                              <1>         ;---------------------------------
    58 000002DC 5E                  <1> 		pop		esi
    59 000002DD 5A                  <1> 		pop		edx
    60 000002DE 59                  <1> 		pop		ecx
    61 000002DF 5B                  <1> 		pop		ebx
    62 000002E0 58                  <1> 		pop		eax
    63                              <1> 
    64                              <1>         ;---------------------------------
    65                              <1>         ; スタックフレームの破棄
    66                              <1>         ;---------------------------------
    67 000002E1 89EC                <1>         mov     esp, ebp
    68 000002E3 5D                  <1>         pop     ebp
    69                              <1> 
    70 000002E4 C3                  <1>         ret
    61                                  %include  "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1>                                                 ; ---------------------
     6                              <1>                                                 ;     +12| Y(行)
     7                              <1>                                                 ;     + 8| X(列)
     8                              <1>                                                 ; -------+-------------
     9 000002E5 55                  <1>         push    ebp                             ;     + 4| EIP(戻り番地)
    10 000002E6 89E5                <1>         mov     ebp, esp                        ; EBP + 0| EBP(元の値)
    11                              <1>                                                 ; ---------------------
    12                              <1> 
    13                              <1> 		;---------------------------------------
    14                              <1> 		; レジスタの保存
    15                              <1> 		;---------------------------------------
    16 000002E8 50                  <1> 		push	eax
    17 000002E9 53                  <1> 		push	ebx
    18 000002EA 51                  <1> 		push	ecx
    19 000002EB 52                  <1> 		push	edx
    20 000002EC 56                  <1> 		push	esi
    21 000002ED 57                  <1> 		push	edi
    22                              <1> 
    23                              <1>         ;---------------------------------------
    24                              <1>         ; 表示位置
    25                              <1>         ;---------------------------------------
    26 000002EE 8B7508              <1>         mov     esi, [ebp + 8]                      ; ESI = X(列);
    27 000002F1 8B7D0C              <1>         mov     edi, [ebp +12]                      ; EDI = Y(行);
    28                              <1> 
    29                              <1>         ;---------------------------------------
    30                              <1>         ; カラーバーを表示
    31                              <1>         ;---------------------------------------
    32 000002F4 B900000000          <1>         mov     ecx, 0                              ; for(ECX = 0;
    33 000002F9 83F910              <1> .10L:   cmp     ecx, 16                             ;     ECX < 16;
    34 000002FC 732E                <1>         jae     .10E                                ;
    35                              <1>                                                     ;     ECX++)
    36                              <1>                                                     ; {
    37                              <1>                                                     ;    // 桁位置の計算
    38 000002FE 89C8                <1>         mov     eax, ecx                            ;    EAX = ECX;
    39 00000300 83E001              <1>         and     eax, 0x01                           ;    EAX &= 0x01;
    40 00000303 C1E003              <1>         shl     eax, 3                              ;    EAX *= 8;  // 8文字分乗算
    41 00000306 01F0                <1>         add     eax, esi                            ;    EAX += X;
    42                              <1>                                                     ;
    43                              <1>                                                     ;    // 行位置の計算
    44 00000308 89CB                <1>         mov     ebx, ecx                            ;    EBX = ECX;
    45 0000030A D1EB                <1>         shr     ebx, 1                              ;    EBX /= 2;
    46 0000030C 01FB                <1>         add     ebx, edi                            ;    EBX += Y;
    47                              <1>                                                     ;
    48                              <1>                                                     ;    // 表示色の取得
    49 0000030E 89CA                <1>         mov     edx, ecx                            ;    EDX = ECX;
    50 00000310 D1E2                <1>         shl     edx, 1                              ;    EDX /= 2;
    51 00000312 8B92[3F030000]      <1>         mov     edx, [.t0 + edx]                    ;    EDX += Y;
    52                              <1> 
    53 00000318 68[36030000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0        ;    draw_str();
    53 00000320 E877FFFFFF6683C410  <1>
    54                              <1> 
    55 00000329 41                  <1>         inc     ecx                                 ; // for(... ECX++)
    56 0000032A EBCD                <1>         jmp     .10L                                ;
    57                              <1> .10E:                                               ; }
    58                              <1> 
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; レジスタの復帰
    62                              <1>         ;---------------------------------------
    63 0000032C 5F                  <1>         pop     edi
    64 0000032D 5E                  <1>         pop     esi
    65 0000032E 5A                  <1>         pop     edx
    66 0000032F 59                  <1>         pop     ecx
    67 00000330 5B                  <1>         pop     ebx
    68 00000331 58                  <1>         pop     eax
    69                              <1> 
    70                              <1>         ;---------------------------------------
    71                              <1>         ; スタックフレームの破棄
    72                              <1>         ;---------------------------------------
    73 00000332 89EC                <1>         mov     esp, ebp
    74 00000334 5D                  <1>         pop     ebp
    75                              <1> 
    76 00000335 C3                  <1>         ret
    77                              <1> 
    78 00000336 202020202020202000  <1> .s0:    db  '        ', 0                           ; 8文字分のスペース（表示色だけを変更）
    79                              <1> 
    80 0000033F 00000008            <1> .t0:    dw  0x0000, 0x0800                          ; カラーバーの背景色
    81 00000343 00010009            <1>         dw  0x0100, 0x0900
    82 00000347 0002000A            <1>         dw  0x0200, 0x0A00
    83 0000034B 0003000B            <1>         dw  0x0300, 0x0B00
    84 0000034F 0004000C            <1>         dw  0x0400, 0x0C00
    85 00000353 0005000D            <1>         dw  0x0500, 0x0D00
    86 00000357 0006000E            <1>         dw  0x0600, 0x0E00
    87 0000035B 0007000F            <1>         dw  0x0700, 0x0F00
    62                                  %include  "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ------+--------
     6                              <1> 												; EBP+16| 色
     7                              <1> 												; EBP+12| Y
     8                              <1> 												; EBP+ 8| X
     9                              <1> 												; ------+--------
    10 0000035F 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
    11 00000360 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    12                              <1> 												; ------+--------
    13                              <1> 
    14                              <1>         ;---------------------------------------
    15                              <1>         ; レジスタの保存
    16                              <1>         ;---------------------------------------
    17 00000362 50                  <1>         push    eax
    18 00000363 53                  <1>         push    ebx
    19 00000364 51                  <1>         push    ecx
    20 00000365 57                  <1>         push    edi
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ;
    24                              <1>         ;---------------------------------------
    25 00000366 8B7D0C              <1>         mov     edi, [ebp + 12]					; EDI  = Y座標
    26 00000369 C1E704              <1>         shl     edi, 4							; EDI *= 16;
    27 0000036C 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]	; EDI  = 0xA00000[EDI * 4 + EDI];
    28                              <1> 
    29                              <1> 		;---------------------------------------
    30                              <1> 		; X座標を1/8して加算
    31                              <1> 		;---------------------------------------
    32 00000373 8B5D08              <1> 		mov		ebx, [ebp + 8]					; EBX  = X座標;
    33 00000376 89D9                <1> 		mov		ecx, ebx						; ECX  = X座標;（一時保存）
    34 00000378 C1EB03              <1> 		shr		ebx, 3							; EBX /= 8;
    35 0000037B 01DF                <1> 		add		edi, ebx						; EDI += EBX;
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; X座標を8で割った余りからビット位置を計算
    39                              <1> 		; (0=0x80, 1=0x40,... 7=0x01)
    40                              <1> 		;---------------------------------------
    41 0000037D 83E107              <1> 		and		ecx, 0x07						; ECX = X & 0x07;
    42 00000380 BB80000000          <1> 		mov		ebx, 0x80						; EBX = 0x80;
    43 00000385 D3EB                <1> 		shr		ebx, cl							; EBX >>= ECX;
    44                              <1> 
    45                              <1> 		;---------------------------------------
    46                              <1> 		; 色指定
    47                              <1> 		;---------------------------------------
    48 00000387 8B4D10              <1> 		mov		ecx, [ebp +16]					; // 表示色
    49                              <1> 
    50                              <1> 		;---------------------------------------
    51                              <1> 		; プレーン毎に出力
    52                              <1> 		;---------------------------------------
    53 0000038A 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
    53 00000393 C404                <1>
    54 00000395 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
    54 0000039E C404                <1>
    55 000003A0 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
    55 000003A9 FF6683C410          <1>
    56                              <1> 
    57 000003AE 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
    57 000003B7 C404                <1>
    58 000003B9 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
    58 000003C2 C404                <1>
    59 000003C4 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
    59 000003CD FF6683C410          <1>
    60                              <1> 
    61 000003D2 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
    61 000003DB C404                <1>
    62 000003DD 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
    62 000003E6 C404                <1>
    63 000003E8 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
    63 000003F1 FF6683C410          <1>
    64                              <1> 
    65 000003F6 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
    65 000003FF C404                <1>
    66 00000401 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
    66 0000040A C404                <1>
    67 0000040C 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
    67 00000415 FF6683C410          <1>
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; レジスタの復帰
    71                              <1>         ;---------------------------------------
    72 0000041A 5F                  <1>         pop     edi
    73 0000041B 59                  <1>         pop     ecx
    74 0000041C 5B                  <1>         pop     ebx
    75 0000041D 58                  <1>         pop     eax
    76                              <1> 
    77                              <1>         ;---------------------------------------
    78                              <1>         ; スタックフレームの破棄
    79                              <1>         ;---------------------------------------
    80 0000041E 89EC                <1>         mov     esp, ebp
    81 00000420 5D                  <1>         pop     ebp
    82                              <1> 
    83 00000421 C3                  <1>         ret
    63                                  %include  "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ---------------
     6                              <1> 												;    +24| 色
     7                              <1> 												;    +20| Y1
     8                              <1> 												;    +16| X1
     9                              <1> 												;    +12| Y0
    10                              <1> 												;    + 8| X0
    11                              <1> 												; ---------------
    12 00000422 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
    13 00000423 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    14                              <1> 												; ---------------
    15 00000425 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
    16 00000427 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
    17 00000429 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
    18 0000042B 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
    19 0000042D 6A00                <1> 		push	dword 0							;    -20| x0    = 0; // Y座標
    20 0000042F 6A00                <1> 		push	dword 0							;    -24| dx    = 0; // Y増分
    21 00000431 6A00                <1>         push    dword 0							;    -28| inc_x = 0; // Y座標増分(1 or -1)
    22                              <1> 												; ------|--------
    23                              <1> 
    24                              <1>         ;---------------------------------------
    25                              <1>         ; レジスタの保存
    26                              <1>         ;---------------------------------------
    27 00000433 50                  <1>         push    eax
    28 00000434 53                  <1>         push    ebx
    29 00000435 51                  <1>         push    ecx
    30 00000436 52                  <1>         push    edx
    31 00000437 56                  <1>         push    esi
    32 00000438 57                  <1>         push    edi
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 幅を計算（X軸）
    36                              <1> 		;---------------------------------------
    37 00000439 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    38 0000043C 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
    39 0000043F 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
    40 00000441 7D09                <1> 		jge		.10F							; if (幅 < 0)
    41                              <1> 												; {
    42 00000443 F7DB                <1> 		neg		ebx								;   幅   *= -1;
    43 00000445 BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
    44 0000044A EB05                <1> 		jmp		.10E							; }
    45                              <1> .10F:											; else
    46                              <1> 												; {
    47 0000044C BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
    48                              <1> .10E:											; }
    49                              <1> 
    50                              <1> 		;---------------------------------------
    51                              <1> 		; 高さを計算（Y軸）
    52                              <1> 		;---------------------------------------
    53 00000451 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
    54 00000454 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
    55 00000457 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
    56 00000459 7D09                <1> 		jge		.20F							; if (高さ < 0)
    57                              <1> 												; {
    58 0000045B F7DA                <1> 		neg		edx								;   高さ *= -1;
    59 0000045D BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
    60 00000462 EB05                <1> 		jmp		.20E							; }
    61                              <1> .20F:											; else
    62                              <1> 												; {
    63 00000464 BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
    64                              <1> .20E:											; }
    65                              <1> 
    66                              <1> 		;---------------------------------------
    67                              <1> 		; X軸
    68                              <1> 		;---------------------------------------
    69 00000469 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
    70 0000046C 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
    71 0000046F 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
    72                              <1> 
    73                              <1> 		;---------------------------------------
    74                              <1> 		; Y軸
    75                              <1> 		;---------------------------------------
    76 00000472 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
    77 00000475 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
    78 00000478 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
    79                              <1> 
    80                              <1> 		;---------------------------------------
    81                              <1> 		; 基準軸を決める
    82                              <1> 		;---------------------------------------
    83 0000047B 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
    84 0000047D 7F08                <1> 		jg		.22F							; {
    85                              <1> 												;   
    86 0000047F 8D75EC              <1> 		lea		esi, [ebp -20]					;   // X軸が基準軸
    87 00000482 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // Y軸が相対軸
    88                              <1> 												;   
    89 00000485 EB06                <1> 		jmp		.22E							; }
    90                              <1> .22F:											; else
    91                              <1> 												; {
    92 00000487 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // Y軸が基準軸
    93 0000048A 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // X軸が相対軸
    94                              <1> .22E:											; }
    95                              <1> 
    96                              <1> 		;---------------------------------------
    97                              <1> 		; 繰り返し回数(基準軸のドット数)
    98                              <1> 		;---------------------------------------
    99 0000048D 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   100 00000490 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   101 00000493 7505                <1> 		jnz		.30E							; {
   102 00000495 B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   103                              <1> .30E:											; }
   104                              <1> 
   105                              <1> 		;---------------------------------------
   106                              <1> 		; 線を描画
   107                              <1> 		;---------------------------------------
   108                              <1> .50L:											; do
   109                              <1> 												; {
   110                              <1> %ifdef	USE_SYSTEM_CALL
   111                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   112                              <1> 
   113                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   114                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   115                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   116                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   117                              <1> 
   118                              <1> 		mov		ecx, eax
   119                              <1> %else
   122 0000049A FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   122 000004A3 E8B7FEFFFF6683C40C  <1>
   123                              <1> %endif
   124                              <1> 												;   // 基準軸を更新(1ドット分)
   125 000004AC 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   126 000004AF 0106                <1> 		add		[esi - 0], eax					;   
   127                              <1> 
   128                              <1> 												;   // 相対軸を更新
   129 000004B1 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   130 000004B4 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   131 000004B7 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   132                              <1> 
   133 000004BA 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   134 000004BC 7C07                <1> 		jl		.52E							;   {
   135 000004BE 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   136                              <1> 												;     
   137                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   138 000004C0 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   139 000004C3 011F                <1> 		add		[edi - 0], ebx					;     
   140                              <1> .52E:											;   }
   141 000004C5 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   142                              <1> 												;   
   143 000004C8 E2D0                <1> 		loop	.50L							;   
   144                              <1> .50E:											; } while (ループ回数--);
   145                              <1> 
   146                              <1>         ;---------------------------------------
   147                              <1>         ; レジスタの復帰
   148                              <1>         ;---------------------------------------
   149 000004CA 5F                  <1>         pop     edi
   150 000004CB 5E                  <1>         pop     esi
   151 000004CC 5A                  <1>         pop     edx
   152 000004CD 59                  <1>         pop     ecx
   153 000004CE 5B                  <1>         pop     ebx
   154 000004CF 58                  <1>         pop     eax
   155                              <1> 
   156                              <1>         ;---------------------------------------
   157                              <1>         ; スタックフレームの破棄
   158                              <1>         ;---------------------------------------
   159 000004D0 89EC                <1>         mov     esp, ebp
   160 000004D2 5D                  <1>         pop     ebp
   161                              <1> 
   162 000004D3 C3                  <1>         ret
    64                                  %include  "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+24| 色
     7                              <1> 												; EBP+20| Y1
     8                              <1> 												; EBP+16| X1
     9                              <1> 												; EBP+12| Y0
    10                              <1> 												; EBP+ 8| X0
    11                              <1> 												; ---------------
    12 000004D4 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    13 000004D5 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    14                              <1> 												; ------|--------
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ; レジスタの保存
    18                              <1>         ;---------------------------------------
    19 000004D7 50                  <1>         push    eax
    20 000004D8 53                  <1>         push    ebx
    21 000004D9 51                  <1>         push    ecx
    22 000004DA 52                  <1>         push    edx
    23 000004DB 56                  <1>         push    esi
    24                              <1> 
    25                              <1> 		;---------------------------------------
    26                              <1> 		; 矩形を描画
    27                              <1> 		;---------------------------------------
    28 000004DC 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    29 000004DF 8B5D0C              <1> 		mov		ebx, [ebp +12]					; EBX = Y0;
    30 000004E2 8B4D10              <1> 		mov		ecx, [ebp +16]					; ECX = X1;
    31 000004E5 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1;
    32 000004E8 8B7518              <1> 		mov		esi, [ebp +24]					; ESI = 色;
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 座標軸の大小を確定
    36                              <1> 		;---------------------------------------
    37 000004EB 39C8                <1> 		cmp		eax, ecx						; if (X1 < X0)
    38 000004ED 7C01                <1> 		jl		.10E							; {
    39 000004EF 91                  <1> 		xchg	eax, ecx						;   X0とX1を入れ替える;
    40                              <1> .10E:											; }
    41                              <1> 
    42 000004F0 39D3                <1> 		cmp		ebx, edx						; if (Y1 < Y0)
    43 000004F2 7C02                <1> 		jl		.20E							; {
    44 000004F4 87DA                <1> 		xchg	ebx, edx						;   Y0とY1を入れ替える;
    45                              <1> .20E:											; }
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; 矩形を描画
    49                              <1> 		;---------------------------------------
    50 000004F6 5653515350E822FFFF- <1> 		cdecl	draw_line, eax, ebx, ecx, ebx, esi	; 上線
    50 000004FF FF6683C414          <1>
    51 00000504 5652505350E814FFFF- <1> 		cdecl	draw_line, eax, ebx, eax, edx, esi	; 左線
    51 0000050D FF6683C414          <1>
    52                              <1> 
    53 00000512 4A                  <1> 		dec		edx									; EDX--; // 下線は1ドット上げる
    54 00000513 5652515250E805FFFF- <1> 		cdecl	draw_line, eax, edx, ecx, edx, esi	; 下線
    54 0000051C FF6683C414          <1>
    55 00000521 42                  <1> 		inc		edx
    56                              <1> 
    57 00000522 49                  <1> 		dec		ecx									; ECX--; // 右線は1ドット左に移動
    58 00000523 5652515351E8F5FEFF- <1> 		cdecl	draw_line, ecx, ebx, ecx, edx, esi	; 右線
    58 0000052C FF6683C414          <1>
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; レジスタの復帰
    62                              <1>         ;---------------------------------------
    63 00000531 5E                  <1>         pop     esi
    64 00000532 5A                  <1>         pop     edx
    65 00000533 59                  <1>         pop     ecx
    66 00000534 5B                  <1>         pop     ebx
    67 00000535 58                  <1>         pop     eax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 00000536 89EC                <1>         mov     esp, ebp
    73 00000538 5D                  <1>         pop     ebp
    74                              <1> 
    75 00000539 C3                  <1>         ret
    65                                  %include  "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												;    +24| フラグ
     7                              <1> 												;    +20| 基数
     8                              <1> 												;    +16| バッファサイズ
     9                              <1> 												;    +12| バッファアドレス
    10                              <1> 												;    + 8| 数値
    11                              <1> 												; ------|--------
    12                              <1> 												;    + 4| EIP（戻り番地）
    13 0000053A 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    14 0000053B 89E5                <1> 		mov		ebp, esp						; ------+--------
    15                              <1> 
    16                              <1>         ;----------------------------------
    17                              <1>         ; レジスタの保存
    18                              <1>         ;----------------------------------
    19 0000053D 50                  <1>         push    eax
    20 0000053E 53                  <1>         push    ebx
    21 0000053F 51                  <1>         push    ecx
    22 00000540 52                  <1>         push    edx
    23 00000541 56                  <1>         push    esi
    24 00000542 57                  <1>         push    edi
    25                              <1> 
    26                              <1>         ;----------------------------------
    27                              <1>         ; 引数を取得
    28                              <1>         ;----------------------------------
    29 00000543 8B4508              <1> 		mov		eax, [ebp + 8]					; val  = 数値;
    30 00000546 8B750C              <1> 		mov		esi, [ebp +12]					; dst  = バッファアドレス;
    31 00000549 8B4D10              <1> 		mov		ecx, [ebp +16]					; size = 残りバッファサイズ;
    32                              <1> 
    33 0000054C 89F7                <1> 		mov		edi, esi						; // バッファの最後尾
    34 0000054E 01CF                <1> 		add		edi, ecx						; dst  = &dst[size - 1];
    35 00000550 4F                  <1> 		dec		edi								; 
    36                              <1> 
    37 00000551 8B5D18              <1> 		mov		ebx, [ebp +24]					; flags = オプション;
    38                              <1> 
    39                              <1>         ;----------------------------------
    40                              <1>         ; 符号付き判定
    41                              <1>         ;----------------------------------
    42 00000554 F7C301000000        <1> 		test	ebx, 0b0001						; if (flags & 0x01)// 符号付き
    43 0000055A 7408                <1> .10Q:	je		.10E							; {
    44 0000055C 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    45 0000055F 7D03                <1> .12Q:	jge		.12E							;   {
    46 00000561 83CB02              <1> 		or		ebx, 0b0010						;     flags |=  2; // 符号表示
    47                              <1> .12E:											;   }
    48                              <1> .10E:											; }
    49                              <1> 
    50                              <1>         ;----------------------------------
    51                              <1>         ; 符号出力判定
    52                              <1>         ;----------------------------------
    53 00000564 F7C302000000        <1> 		test	ebx, 0b0010						; if (flags & 0x02)// 符号出力判定
    54 0000056A 7410                <1> .20Q:	je		.20E							; {
    55 0000056C 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    56 0000056F 7D07                <1> .22Q:	jge		.22F							;   {
    57 00000571 F7D8                <1> 		neg		eax								;     val *= -1;   // 符号反転
    58 00000573 C6062D              <1> 		mov		[esi], byte '-'					;     *dst = '-';  // 符号表示
    59 00000576 EB03                <1> 		jmp		.22E							;   }
    60                              <1> .22F:											;   else
    61                              <1> 												;   {
    62 00000578 C6062B              <1> 		mov		[esi], byte '+'					;     *dst = '+';  // 符号表示
    63                              <1> .22E:											;   }
    64 0000057B 49                  <1> 		dec		ecx								;   size--;        // 残りバッファサイズの減算
    65                              <1> .20E:											; }
    66                              <1> 
    67                              <1>         ;----------------------------------
    68                              <1>         ; ASCII変換
    69                              <1>         ;----------------------------------
    70 0000057C 8B5D14              <1> 		mov		ebx, [ebp +20]					; BX = 基数;
    71                              <1> .30L:											; do
    72                              <1> 												; {
    73 0000057F BA00000000          <1> 		mov		edx, 0							;   
    74 00000584 F7F3                <1> 		div		ebx								;   DX = DX:AX % 基数;
    75                              <1> 												;   AX = DX:AX / 基数;
    76                              <1> 												;   
    77 00000586 89D6                <1> 		mov		esi, edx						;   // テーブル参照
    78 00000588 8A96[B3050000]      <1> 		mov		dl, byte [.ascii + esi]			;   DL = ASCII[DX];
    79                              <1> 												;   
    80 0000058E 8817                <1> 		mov		[edi], dl						;   *dst = DL;
    81 00000590 4F                  <1> 		dec		edi								;   dst--;
    82                              <1> 												;   
    83 00000591 83F800              <1> 		cmp		eax, 0							;   
    84 00000594 E0E9                <1> 		loopnz	.30L							; } while (AX);
    85                              <1> .30E:
    86                              <1> 
    87                              <1>         ;----------------------------------
    88                              <1>         ; 空欄を埋める
    89                              <1>         ;----------------------------------
    90 00000596 83F900              <1> 		cmp		ecx, 0							; if (size)
    91 00000599 740E                <1> .40Q:	je		.40E							; {
    92 0000059B B020                <1> 		mov		al, ' '							;   AL = ' ';  // ' 'で埋める（デフォルト値）
    93 0000059D 66837D1804          <1> 		cmp		[ebp +24], word 0b0100			;   if (flags & 0x04)
    94 000005A2 7502                <1> .42Q:	jne		.42E							;   {
    95 000005A4 B030                <1> 		mov		al, '0'							;     AL = '0'; // '0'で埋める
    96                              <1> .42E:											;   }
    97 000005A6 FD                  <1> 		std										;   // DF = 1（-方向）
    98 000005A7 F3AA                <1> 		rep stosb								;   while (--CX) *DI-- = ' ';
    99                              <1> .40E:	
   100                              <1> 
   101                              <1>         ;----------------------------------
   102                              <1>         ; レジスタの復帰
   103                              <1>         ;----------------------------------
   104 000005A9 5F                  <1>         pop     edi
   105 000005AA 5E                  <1>         pop     esi
   106 000005AB 5A                  <1>         pop     edx
   107 000005AC 59                  <1>         pop     ecx
   108 000005AD 5B                  <1>         pop     ebx
   109 000005AE 58                  <1>         pop     eax
   110                              <1> 
   111                              <1>         ;----------------------------------
   112                              <1>         ; スタックフレームの破棄
   113                              <1>         ;----------------------------------
   114 000005AF 89EC                <1>         mov     esp, ebp
   115 000005B1 5D                  <1>         pop     ebp
   116                              <1> 
   117 000005B2 C3                  <1>         ret
   118                              <1> 
   119 000005B3 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"				; 変換テーブル
   119 000005BC 39414243444546      <1>
    66                                  %include  "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+ 8| 保存先アドレス
     7                              <1> 												; ---------------
     8 000005C3 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
     9 000005C4 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    10                              <1> 												; ---------------
    11                              <1>         ;----------------------------------
    12                              <1>         ; レジスタの保存
    13                              <1>         ;----------------------------------
    14 000005C6 53                  <1>         push    ebx
    15                              <1>         
    16                              <1>         ;----------------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;----------------------------------
    19 000005C7 B004                <1> 		mov		al, 0x04						;   AL = 0x04;
    20 000005C9 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    21 000005CB E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 時データ
    22                              <1> 
    23 000005CD C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    24                              <1> 
    25 000005D0 B002                <1> 		mov		al, 0x02						;   AL = 0x02;
    26 000005D2 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    27 000005D4 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 分データ
    28                              <1> 
    29 000005D6 C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    30                              <1> 
    31 000005D9 B000                <1> 		mov		al, 0x00						;   AL = 0x00;
    32 000005DB E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    33 000005DD E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 秒データ
    34                              <1> 
    35 000005DF 25FFFFFF00          <1> 		and		eax, 0x00_FF_FF_FF				;   // 下位3バイトのみ有効
    36 000005E4 8B5D08              <1> 		mov		ebx, [ebp + 8]					;   dst = 保存先;
    37 000005E7 8903                <1> 		mov		[ebx], eax						;   [dst] = 時刻;
    38                              <1> 
    39                              <1>         ;----------------------------------
    40                              <1>         ; レジスタの復帰
    41                              <1>         ;----------------------------------
    42 000005E9 5B                  <1>         pop     ebx
    43                              <1> 
    44                              <1>         ;----------------------------------
    45                              <1>         ; スタックフレームの破棄
    46                              <1>         ;----------------------------------
    47 000005EA 89EC                <1>         mov     esp, ebp
    48 000005EC 5D                  <1>         pop     ebp
    49                              <1> 
    50 000005ED C3                  <1>         ret
    67                                  %include  "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 
     6 000005EE 55                  <1>         push    ebp
     7 000005EF 89E5                <1>         mov     ebp, esp
     8                              <1> 
     9                              <1>         ;----------------------------------
    10                              <1>         ; レジスタの保存
    11                              <1>         ;----------------------------------
    12 000005F1 50                  <1>         push    eax
    13 000005F2 53                  <1>         push    ebx
    14                              <1> 
    15                              <1>         ;----------------------------------
    16                              <1>         ; 時刻の表示
    17                              <1>         ;----------------------------------
    18 000005F3 8B4514              <1> 		mov		eax, [ebp +20]					; EAX = 時刻データ;
    19                              <1> 
    20 000005F6 0FB6D8              <1>         movzx   ebx, al                         ; EBX = 秒;
    21 000005F9 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100  ; // 文字に変換
    21 00000600 [60060000]53E830FF- <1>
    21 00000608 FFFF6683C414        <1>
    22                              <1> 
    23 0000060E 88E3                <1>         mov     bl, ah                          ; EBX = 分;
    24 00000610 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100  ; // 文字に変換
    24 00000617 [5D060000]53E819FF- <1>
    24 0000061F FFFF6683C414        <1>
    25                              <1> 
    26 00000625 C1E810              <1>         shr     eax, 16                         ; EBX = 時;
    27 00000628 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100 ; // 文字に変換
    27 0000062F [5A060000]50E801FF- <1>
    27 00000637 FFFF6683C414        <1>
    28                              <1> 
    29                              <1>                                                 ; // 時刻を表示
    30 0000063D 68[5A060000]FF7510- <1>         cdecl   draw_str,   dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    30 00000645 FF750CFF7508E84CFC- <1>
    30 0000064E FFFF6683C410        <1>
    31                              <1> 
    32                              <1>         ;----------------------------------
    33                              <1>         ; レジスタの復帰
    34                              <1>         ;----------------------------------
    35 00000654 5B                  <1>         pop     ebx
    36 00000655 58                  <1>         pop     eax
    37                              <1> 
    38                              <1>         ;----------------------------------
    39                              <1>         ; スタックフレームの破棄
    40                              <1>         ;----------------------------------
    41 00000656 89EC                <1>         mov     esp, ebp
    42 00000658 5D                  <1>         pop     ebp
    43                              <1> 
    44 00000659 C3                  <1>         ret
    45                              <1> 
    46 0000065A 5A5A3A              <1> .hour:  db  "ZZ:"
    47 0000065D 5A5A3A              <1> .min:   db  "ZZ:"
    48 00000660 5A5A00              <1> .sec:   db  "ZZ", 0
    68                                  
    69                                  ;************************************************
    70                                  ;   パディング
    71                                  ;************************************************
    72 00000663 00<rept>                        times   KERNEL_SIZE - ($ - $$)      db  0x00
