     1                                  %include "../include/define.s"
     1                              <1>     BOOT_LOAD       equ     0x7C00
     2                              <1>     BOOT_END        equ     (BOOT_LOAD + BOOT_SIZE)
     3                              <1> 
     4                              <1>     BOOT_SIZE       equ     (1024 * 8)
     5                              <1>     SECT_SIZE       equ     (512)
     6                              <1>     BOOT_SECT       equ     (BOOT_SIZE / SECT_SIZE)
     7                              <1> 
     8                              <1>     E820_RECORD_SIZE    equ     20
     9                              <1> 
    10                              <1>     KERNEL_LOAD     equ     0x0010_1000
    11                              <1>     KERNEL_SIZE     equ     (1024 * 8)      ; カーネルサイズ
    12                              <1>     KERNEL_SECT     equ     (KERNEL_SIZE / SECT_SIZE)
     2                                  %include "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep    %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate - 1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
    16                              <1> 
    17                              <1> struc drive
    18 00000000 <res 00000002>      <1>         .no     resw    1           ; ドライブ番号
    19 00000002 <res 00000002>      <1>         .cyln   resw    1           ; シリンダ
    20 00000004 <res 00000002>      <1>         .head   resw    1           ; ヘッド
    21 00000006 <res 00000002>      <1>         .sect   resw    1           ; セクタ
    22                              <1> endstruc
     3                                  
     4                                          ORG     KERNEL_LOAD
     5                                  
     6                                  [BITS 32]
     7                                  ;************************************************
     8                                  ;   エントリポイント
     9                                  ;************************************************
    10                                  kernel:
    11                                          ;----------------------------------
    12                                          ; フォントアドレスを取得
    13                                          ;----------------------------------
    14 00000000 BE007E0000                      mov     esi, BOOT_LOAD + SECT_SIZE      ; ESI = 0x7C00 + 512;
    15 00000005 0FB706                          movzx   eax, word [esi + 0]             ; EAX = [ESI + 0]; // セグメント
    16 00000008 0FB75E02                        movzx   ebx, word [esi + 2]             ; EBX = [ESI + 2]; // オフセット
    17 0000000C C1E004                          shl     eax, 4                          ; EAX <<= 4;
    18 0000000F 01D8                            add     eax, ebx                        ; EAX += EBX;
    19 00000011 A3[68000000]                    mov     [FONT_ADR], eax                 ; FONT_ADR[0] = EAX;
    20                                          
    21                                          ;---------------------------------------
    22                                          ; フォントの一覧表示
    23                                          ;---------------------------------------
    24 00000016 6A0D6A3FE8C8010000-             cdecl   draw_font, 63, 13               ; // フォントの一覧表示
    24 0000001F 6683C408           
    25 00000023 6A046A3FE849020000-             cdecl   draw_color_bar, 63, 4           ; // カラーバーの表示
    25 0000002C 6683C408           
    26                                  
    27 00000030 68[56000000]680F01-             cdecl   draw_str, 25, 14, 0x010F, .s0
    27 00000038 00006A0E6A19E8E901-
    27 00000041 00006683C410       
    28                                  
    29 00000047 6844332211                      push    0x11223344
    30 0000004C 9C                              pushf
    31 0000004D 9A[0B070000]0800                call    0x0008:int_default
    32                                  
    33                                          ;----------------------------------
    34                                          ; 処理の終了
    35                                          ;----------------------------------
    36 00000054 EBFE                            jmp     $                               ; while(1);     // 無限ループ
    37                                  
    38 00000056 2048656C6C6F2C206B-     .s0:    db  " Hello, kernel! ", 0
    38 0000005F 65726E656C212000   
    39                                  
    40 00000067 00                      ALIGN 4, db 0
    41 00000068 00000000                FONT_ADR:       dd  0
    42 0000006C 00000000                RTC_TIME:       dd  0
    43                                  
    44                                  ;************************************************
    45                                  ;   モジュール
    46                                  ;************************************************
    47                                  %include  "../modules/protect/vga.s"
     1                              <1> vga_set_read_plane:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5                              <1>                                             ;    + 8| プレーン (インデックス)
     6                              <1>                                             ; ------+---------------
     7 00000070 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
     8 00000071 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
     9                              <1>                                             ;-------+---------------
    10                              <1> 
    11                              <1>         ;---------------------------------
    12                              <1>         ; レジスタの保存
    13                              <1>         ;---------------------------------
    14 00000073 50                  <1>         push    eax
    15 00000074 52                  <1>         push    edx
    16                              <1> 
    17                              <1>         ;---------------------------------
    18                              <1>         ; 読み込みプレーンの選択
    19                              <1>         ;---------------------------------
    20 00000075 8A6508              <1>         mov     ah, [ebp + 8]
    21 00000078 80E403              <1>         and     ah, 0x03
    22 0000007B B004                <1>         mov     al, 0x04
    23 0000007D 66BACE03            <1>         mov     dx, 0x03CE
    24 00000081 66EF                <1>         out     dx, ax
    25                              <1> 
    26                              <1>         ;---------------------------------
    27                              <1>         ; レジスタの復帰
    28                              <1>         ;---------------------------------
    29 00000083 5A                  <1>         pop     edx
    30 00000084 58                  <1>         pop     eax
    31                              <1> 
    32                              <1>         ;---------------------------------
    33                              <1>         ; スタックフレームの破棄
    34                              <1>         ;---------------------------------
    35 00000085 89EC                <1>         mov     esp, ebp
    36 00000087 5D                  <1>         pop     ebp
    37                              <1> 
    38 00000088 C3                  <1>         ret
    39                              <1> 
    40                              <1> vga_set_write_plane:
    41                              <1>         ;---------------------------------
    42                              <1>         ; スタックフレームの構築
    43                              <1>         ;---------------------------------
    44                              <1>                                             ;    + 8| プレーン (ビット指定)
    45                              <1>                                             ; ------+---------------
    46 00000089 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
    47 0000008A 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
    48                              <1>                                             ;-------+---------------
    49                              <1> 
    50                              <1>         ;---------------------------------
    51                              <1>         ; レジスタの保存
    52                              <1>         ;---------------------------------
    53 0000008C 50                  <1>         push    eax
    54 0000008D 52                  <1>         push    edx
    55                              <1> 
    56                              <1>         ;---------------------------------
    57                              <1>         ; 書き込みプレーンの選択
    58                              <1>         ;---------------------------------
    59 0000008E 8A6508              <1>         mov     ah, [ebp + 8]
    60 00000091 80E40F              <1>         and     ah, 0x0F
    61 00000094 B002                <1>         mov     al, 0x02
    62 00000096 66BAC403            <1>         mov     dx, 0x03C4
    63 0000009A 66EF                <1>         out     dx, ax
    64                              <1> 
    65                              <1>         ;---------------------------------
    66                              <1>         ; レジスタの復帰
    67                              <1>         ;---------------------------------
    68 0000009C 5A                  <1>         pop     edx
    69 0000009D 58                  <1>         pop     eax
    70                              <1> 
    71                              <1>         ;---------------------------------
    72                              <1>         ; スタックフレームの破棄
    73                              <1>         ;---------------------------------
    74 0000009E 89EC                <1>         mov     esp, ebp
    75 000000A0 5D                  <1>         pop     ebp
    76                              <1> 
    77 000000A1 C3                  <1>         ret
    78                              <1> 
    79                              <1> vram_font_copy:
    80                              <1>         ;---------------------------------
    81                              <1>         ; スタックフレームの構築
    82                              <1>         ;---------------------------------
    83                              <1>                                             ;    +20| 描画色
    84                              <1>                                             ;    +16| プレーン(ビット指定)
    85                              <1>                                             ;    +12| VRAMアドレス
    86                              <1>                                             ;    + 8| フォントアドレス
    87                              <1>                                             ; ------+---------------
    88 000000A2 55                  <1>         push    ebp                         ;    + 4| EIP (戻り番地)
    89 000000A3 89E5                <1>         mov     ebp, esp                    ; EBP+ 0| EBP (元の値)
    90                              <1>                                             ; ------+---------------
    91                              <1> 
    92                              <1>         ;---------------------------------
    93                              <1>         ; レジスタの保存
    94                              <1>         ;---------------------------------
    95 000000A5 50                  <1>         push    eax
    96 000000A6 53                  <1>         push    ebx
    97 000000A7 51                  <1>         push    ecx
    98 000000A8 52                  <1>         push    edx
    99 000000A9 56                  <1>         push    esi
   100 000000AA 57                  <1>         push    edi
   101                              <1> 
   102                              <1>         ;---------------------------------
   103                              <1>         ; 処理の開始
   104                              <1>         ;---------------------------------
   105 000000AB 8B7508              <1>         mov     esi, [ebp + 8]
   106 000000AE 8B7D0C              <1>         mov     edi, [ebp +12]
   107 000000B1 0FB64510            <1>         movzx   eax, byte [ebp +16]
   108 000000B5 0FB75D14            <1>         movzx   ebx, word [ebp + 20]
   109                              <1> 
   110 000000B9 84C7                <1>         test    bh, al
   111 000000BB 0F94C6              <1>         setz    dh
   112 000000BE FECE                <1>         dec     dh
   113                              <1> 
   114 000000C0 84C3                <1>         test    bl, al
   115 000000C2 0F94C2              <1>         setz    dl
   116 000000C5 FECA                <1>         dec     dl
   117                              <1> 
   118                              <1>         ;---------------------------------
   119                              <1>         ; 16ドットフォントのコピー
   120                              <1>         ;---------------------------------
   121 000000C7 FC                  <1>         cld
   122                              <1> 
   123 000000C8 B910000000          <1>         mov     ecx, 16
   124                              <1> .10L:
   125                              <1>         ;---------------------------------
   126                              <1>         ; フォントマスクの作成
   127                              <1>         ;---------------------------------
   128 000000CD AC                  <1>         lodsb
   129 000000CE 88C4                <1>         mov     ah, al
   130 000000D0 F6D4                <1>         not     ah
   131                              <1> 
   132                              <1>         ;---------------------------------
   133                              <1>         ; 前景色
   134                              <1>         ;---------------------------------
   135                              <1> 
   136 000000D2 20D0                <1>         and     al, dl
   137                              <1> 
   138                              <1>         ;---------------------------------
   139                              <1>         ; 背景色
   140                              <1>         ;---------------------------------
   141 000000D4 F7C310000000        <1>         test    ebx, 0x0010
   142 000000DA 7404                <1>         jz      .11F
   143 000000DC 2227                <1>         and     ah, [edi]
   144 000000DE EB02                <1>         jmp     .11E
   145                              <1> .11F:
   146                              <1> 
   147 000000E0 20F4                <1>         and     ah, dh
   148                              <1> .11E:
   149                              <1> 
   150                              <1>         ;---------------------------------
   151                              <1>         ; 前景色と背景色を合成
   152                              <1>         ;---------------------------------
   153 000000E2 08E0                <1>         or      al, ah
   154                              <1> 
   155                              <1>         ;---------------------------------
   156                              <1>         ; 新しい値を出力
   157                              <1>         ;---------------------------------
   158 000000E4 8807                <1>         mov     [edi], al
   159                              <1> 
   160 000000E6 83C750              <1>         add     edi, 80
   161 000000E9 E2E2                <1>         loop    .10L
   162                              <1> .10E:
   163                              <1> 
   164                              <1>         ;---------------------------------
   165                              <1>         ; レジスタの復帰
   166                              <1>         ;---------------------------------
   167 000000EB 5F                  <1>         pop     edi
   168 000000EC 5E                  <1>         pop     esi
   169 000000ED 5A                  <1>         pop     edx
   170 000000EE 59                  <1>         pop     ecx
   171 000000EF 5B                  <1>         pop     ebx
   172 000000F0 58                  <1>         pop     eax
   173                              <1> 
   174                              <1>         ;---------------------------------
   175                              <1>         ; スタックフレームの破棄
   176                              <1>         ;---------------------------------
   177 000000F1 89EC                <1>         mov     esp, ebp
   178 000000F3 5D                  <1>         pop     ebp
   179                              <1> 
   180 000000F4 C3                  <1>         ret
   181                              <1> 
   182                              <1> vram_bit_copy:
   183                              <1>         ;---------------------------------------
   184                              <1>         ; スタックフレームの構築
   185                              <1>         ;---------------------------------------
   186                              <1>                                                 ; EBP+20| 色（背景/前景色）
   187                              <1>                                                 ; EBP+16| プレーン（ビット指定）
   188                              <1>                                                 ; EBP+12| VRAMアドレス
   189                              <1>                                                 ; EBP+ 8| 出力ビットパターン
   190                              <1> 	                                        ; ------+----------------
   191 000000F5 55                  <1>         push    ebp				; EBP+ 4| EIP（戻り番地）
   192 000000F6 89E5                <1>         mov     ebp, esp			; EBP+ 0| EBP（元の値）
   193                              <1> 						; ------+----------------
   194                              <1> 
   195                              <1>         ;---------------------------------------
   196                              <1>         ; レジスタの保存
   197                              <1>         ;---------------------------------------
   198 000000F8 50                  <1>         push    eax
   199 000000F9 53                  <1>         push    ebx
   200 000000FA 57                  <1>         push    edi
   201                              <1> 
   202                              <1>         ;---------------------------------------
   203                              <1>         ; 処理の開始
   204                              <1>         ;---------------------------------------
   205 000000FB 8B7D0C              <1>         mov     edi, [ebp + 12]                 ; EDI = VRAMアドレス;
   206 000000FE 0FB64510            <1>         movzx   eax, byte [ebp + 16]            ; EAX = プレーン(ビット指定);
   207 00000102 0FB75D14            <1>         movzx   ebx, word [ebp + 20]            ; EBX = 表示色;
   208                              <1> 
   209 00000106 84C3                <1>         test    bl, al                          ; ZF = (前景色 & プレーン);
   210 00000108 0F94C3              <1>         setz    bl                              ; BL = ZF ? 0x01 : 0x00;
   211 0000010B FECB                <1>         dec     bl                              ; BL--; // 0x00 or 0xFF
   212                              <1> 
   213                              <1>         ;---------------------------------------
   214                              <1>         ;  マスクデータの作成
   215                              <1>         ;---------------------------------------
   216 0000010D 8A4508              <1>         mov     al, [ebp + 8]                   ; AL = 出力ビットパターン;
   217 00000110 88C4                <1>         mov     ah, al                          ; AH ~= AL;     // !出力ビットパターン(ビット反転)
   218 00000112 F6D4                <1>         not     ah
   219                              <1> 
   220                              <1>         ;---------------------------------------
   221                              <1>         ; 現在地の出力を取得
   222                              <1>         ;---------------------------------------
   223 00000114 2227                <1>         and     ah, [edi]                       ; AH = 現在地 & !出力ビットパターン;
   224 00000116 20D8                <1>         and     al, bl                          ; AL = 表示色 &  出力ビットパターン;
   225 00000118 08E0                <1>         or      al, ah                          ; AL |= AH;
   226                              <1> 
   227                              <1>         ;---------------------------------------
   228                              <1>         ; 新しい値を出力
   229                              <1>         ;---------------------------------------
   230 0000011A 8807                <1>         mov     [edi], al                       ; [EDI] = BL;   // プレーンに書き込む
   231                              <1> 
   232                              <1>         ;---------------------------------------
   233                              <1>         ; レジスタの復帰
   234                              <1>         ;---------------------------------------
   235 0000011C 5F                  <1>         pop     edi
   236 0000011D 5B                  <1>         pop     ebx
   237 0000011E 58                  <1>         pop     eax
   238                              <1> 
   239                              <1>         ;---------------------------------------
   240                              <1>         ; スタックフレームの破棄
   241                              <1>         ;---------------------------------------
   242 0000011F 89EC                <1>         mov     esp, ebp
   243 00000121 5D                  <1>         pop     ebp
   244                              <1> 
   245 00000122 C3                  <1>         ret
    48                                  %include  "../modules/protect/draw_char.s"
     1                              <1> draw_char:
     2                              <1>     ;---------------------------------
     3                              <1>     ;   スタックフレームの構築
     4                              <1>     ;---------------------------------
     5                              <1>                                         ;     +20| 文字
     6                              <1>                                         ;     +16| 描画色
     7                              <1>                                         ;     +12| 行
     8                              <1>                                         ;     + 8| 列
     9                              <1>                                         ;  ------|------
    10 00000123 55                  <1>     push    ebp                         ;  EBP+ 4| IP(戻り番地)
    11 00000124 89E5                <1>     mov     ebp, esp                    ;  EBP+ 0| BP(元の値)
    12                              <1>                                         ;  ------+------
    13                              <1> 
    14                              <1>     ;---------------------------------
    15                              <1>     ; レジスタの保存
    16                              <1>     ;---------------------------------
    17 00000126 50                  <1>     push    eax
    18 00000127 53                  <1>     push    ebx
    19 00000128 51                  <1>     push    ecx
    20 00000129 52                  <1>     push    edx
    21 0000012A 56                  <1>     push    esi
    22 0000012B 57                  <1>     push    edi
    23                              <1> 
    24                              <1>     ;---------------------------------------
    25                              <1>     ; テストアンドセット
    26                              <1>     ;---------------------------------------
    27                              <1> %ifdef	USE_TEST_AND_SET
    28                              <1>     cdecl	test_and_set, IN_USE			; TEST_AND_SET(IN_USE); // リソースの空き待ち
    29                              <1> %endif
    30                              <1> 
    31                              <1>     ;---------------------------------------
    32                              <1>     ; コピー元フォントアドレスを設定
    33                              <1>     ;---------------------------------------
    34 0000012C 0FB67514            <1>     movzx   esi, byte [ebp + 20]            ; CL  = 文字コード;
    35 00000130 C1E604              <1>     shl     esi, 4							; CL *= 16; // 1文字16バイト
    36 00000133 0335[68000000]      <1>     add     esi, [FONT_ADR]					; ESI = フォントアドレス;
    37                              <1> 
    38                              <1>     ;---------------------------------------
    39                              <1>     ; コピー先アドレスを取得
    40                              <1>     ; Adr = 0xA0000 + (640 / 8 * 16) * y + x
    41                              <1>     ;---------------------------------------
    42 00000139 8B7D0C              <1>     mov     edi, [ebp + 12]                 ; Y（行）
    43 0000013C C1E708              <1>     shl     edi, 8							; EDI = Y * 256;
    44 0000013F 8DBCBF00000A00      <1>     lea     edi, [edi * 4 + edi + 0xA0000]	; EDI = Y *   4 + Y;
    45 00000146 037D08              <1>     add     edi, [ebp + 8]					; X（列）
    46                              <1> 
    47                              <1>     ;---------------------------------------
    48                              <1>     ; 1文字分のフォントを出力
    49                              <1>     ;---------------------------------------
    50 00000149 0FB75D10            <1>     movzx   ebx, word [ebp + 16]            ; // 表示色
    51                              <1> 
    52 0000014D 6A03E81CFFFFFF6683- <1>     cdecl   vga_set_read_plane, 0x03		; // 書き込みプレーン：輝度(I)
    52 00000156 C404                <1>
    53 00000158 6A08E82AFFFFFF6683- <1>     cdecl   vga_set_write_plane, 0x08		; // 読み込みプレーン：輝度(I)
    53 00000161 C404                <1>
    54 00000163 536A085756E835FFFF- <1>     cdecl   vram_font_copy, esi, edi, 0x08, ebx
    54 0000016C FF6683C410          <1>
    55                              <1> 
    56 00000171 6A02E8F8FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x02		; // 書き込みプレーン：赤(R)
    56 0000017A C404                <1>
    57 0000017C 6A04E806FFFFFF6683- <1>     cdecl   vga_set_write_plane, 0x04		; // 読み込みプレーン：赤(R)
    57 00000185 C404                <1>
    58 00000187 536A045756E811FFFF- <1>     cdecl   vram_font_copy, esi, edi, 0x04, ebx
    58 00000190 FF6683C410          <1>
    59                              <1> 
    60 00000195 6A01E8D4FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x01		; // 書き込みプレーン：緑(G)
    60 0000019E C404                <1>
    61 000001A0 6A02E8E2FEFFFF6683- <1>     cdecl   vga_set_write_plane, 0x02		; // 読み込みプレーン：緑(G)
    61 000001A9 C404                <1>
    62 000001AB 536A025756E8EDFEFF- <1>     cdecl   vram_font_copy, esi, edi, 0x02, ebx
    62 000001B4 FF6683C410          <1>
    63                              <1> 
    64 000001B9 6A00E8B0FEFFFF6683- <1>     cdecl   vga_set_read_plane, 0x00		; // 書き込みプレーン：青(B)
    64 000001C2 C404                <1>
    65 000001C4 6A01E8BEFEFFFF6683- <1>     cdecl   vga_set_write_plane, 0x01		; // 読み込みプレーン：青(B)
    65 000001CD C404                <1>
    66 000001CF 536A015756E8C9FEFF- <1>     cdecl   vram_font_copy, esi, edi, 0x01, ebx
    66 000001D8 FF6683C410          <1>
    67                              <1> 
    68                              <1> %ifdef	USE_TEST_AND_SET
    69                              <1>     ;---------------------------------------
    70                              <1>     ; テストアンドセット
    71                              <1>     ;---------------------------------------
    72                              <1>     mov		[IN_USE], dword 0				; 変数のクリア
    73                              <1> %endif
    74                              <1> 
    75                              <1>     ;---------------------------------
    76                              <1>     ; レジスタの復帰
    77                              <1>     ;---------------------------------
    78 000001DD 5F                  <1>     pop     edi
    79 000001DE 5E                  <1>     pop     esi
    80 000001DF 5A                  <1>     pop     edx
    81 000001E0 59                  <1>     pop     ecx
    82 000001E1 5B                  <1>     pop     ebx
    83 000001E2 58                  <1>     pop     eax
    84                              <1> 
    85                              <1>     ;---------------------------------
    86                              <1>     ; スタックフレームの破棄
    87                              <1>     ;---------------------------------
    88 000001E3 89EC                <1>     mov     esp, ebp
    89 000001E5 5D                  <1>     pop     ebp
    90                              <1> 
    91 000001E6 C3                  <1>     ret
    92                              <1> 
    93                              <1> %ifdef USE_TEST_AND_SET
    94                              <1> ALIGN 4, db 0
    95                              <1> IN_USE:	dd	0
    96                              <1> %endif
    49                                  %include  "../modules/protect/draw_font.s"
     1                              <1> draw_font:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; EBP+12| Y（行）
     6                              <1> 												; EBP+ 8| X（列）
     7                              <1> 												; ---------------
     8 000001E7 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
     9 000001E8 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    10                              <1> 												; ---------------
    11                              <1> 
    12                              <1>         ;----------------------------------
    13                              <1>         ; レジスタの保存
    14                              <1>         ;----------------------------------
    15 000001EA 50                  <1>         push    eax
    16 000001EB 53                  <1>         push    ebx
    17 000001EC 51                  <1>         push    ecx
    18 000001ED 52                  <1>         push    edx
    19 000001EE 56                  <1>         push    esi
    20 000001EF 57                  <1>         push    edi
    21                              <1> 
    22                              <1>         ;----------------------------------
    23                              <1>         ; 表示位置
    24                              <1>         ;----------------------------------
    25 000001F0 8B7508              <1>         mov     esi, [ebp + 8]					; ESI = X（列）
    26 000001F3 8B7D0C              <1>         mov     edi, [ebp +12]					; EDI = Y（行）
    27                              <1> 
    28                              <1>         ;----------------------------------
    29                              <1>         ; フォント一覧を表示
    30                              <1>         ;----------------------------------
    31 000001F6 B900000000          <1>         mov     ecx, 0							; for (ECX = 0;
    32 000001FB 81F900010000        <1> .10L:   cmp     ecx, 256						;      ECX < 256;
    33 00000201 731F                <1>         jae     .10E                            ;
    34                              <1> 												;      ECX++)
    35                              <1> 												; {
    36                              <1> 												;   // 桁位置の計算
    37 00000203 89C8                <1>         mov     eax, ecx						;   EAX  = ECX;
    38 00000205 83E00F              <1>         and     eax, 0x0F						;   EAX &= 0x0F
    39 00000208 01F0                <1>         add     eax, esi						;   EAX += X;
    40                              <1>                                                 ;
    41                              <1> 												;   // 行位置の計算
    42 0000020A 89CB                <1>         mov     ebx, ecx						;   EBX  = ECX;
    43 0000020C C1EB04              <1>         shr     ebx, 4							;   EBX /= 16
    44 0000020F 01FB                <1>         add     ebx, edi						;   EBX += Y;
    45                              <1> 
    46 00000211 516A075350E808FFFF- <1>         cdecl   draw_char, eax, ebx, 0x07, ecx	;   draw_char();
    46 0000021A FF6683C410          <1>
    47                              <1> 
    48 0000021F 41                  <1>         inc     ecx								;   // for (... ECX++)
    49 00000220 EBD9                <1>         jmp     .10L                            ;
    50                              <1> .10E:                                           ; }
    51                              <1> 
    52                              <1> 
    53                              <1> 
    54                              <1>         ;----------------------------------
    55                              <1>         ; レジスタの復帰
    56                              <1>         ;----------------------------------
    57 00000222 5F                  <1>         pop     edi
    58 00000223 5E                  <1>         pop     esi
    59 00000224 5A                  <1>         pop     edx
    60 00000225 59                  <1>         pop     ecx
    61 00000226 5B                  <1>         pop     ebx
    62 00000227 58                  <1>         pop     eax
    63                              <1> 
    64                              <1>         ;----------------------------------
    65                              <1>         ; スタックフレームの破棄
    66                              <1>         ;----------------------------------
    67 00000228 89EC                <1>         mov     esp, ebp
    68 0000022A 5D                  <1>         pop     ebp
    69                              <1> 
    70 0000022B C3                  <1>         ret
    50                                  %include  "../modules/protect/draw_str.s"
     1                              <1> draw_str:
     2                              <1>         ;---------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------
     5                              <1>                                             ;     +20| 文字列のアドレス
     6                              <1>                                             ;     +16| 色
     7                              <1>                                             ;     +12| 行
     8                              <1>                                             ;     + 8| 列
     9                              <1>                                             ; -------+--------------
    10 0000022C 55                  <1>         push    ebp                         ;     + 4| EIP (戻り番地)
    11 0000022D 89E5                <1>         mov     ebp, esp                    ; EBP + 0| EBP (元の値)
    12                              <1> 
    13                              <1>         ;---------------------------------
    14                              <1>         ; レジスタの保存
    15                              <1>         ;---------------------------------
    16 0000022F 50                  <1> 		push	eax
    17 00000230 53                  <1> 		push	ebx
    18 00000231 51                  <1> 		push	ecx
    19 00000232 52                  <1> 		push	edx
    20 00000233 56                  <1> 		push	esi
    21                              <1> 
    22                              <1>         ;---------------------------------
    23                              <1>         ; 文字列の表示
    24                              <1>         ;---------------------------------
    25 00000234 8B4D08              <1>         mov     ecx, [ebp + 8]              ; ECX = 列;
    26 00000237 8B550C              <1>         mov     edx, [ebp + 12]             ; EDX = 行;
    27 0000023A 0FB75D10            <1>         movzx   ebx, word [ebp + 16]        ; EBX = 表示色;
    28 0000023E 8B7514              <1>         mov     esi, [ebp + 20]             ; ESI = 文字列のアドレス;
    29                              <1> 
    30 00000241 FC                  <1>         cld                                 ; DF = 0;   // アドレス加算
    31                              <1> .10L:                                       ; do
    32                              <1>                                             ; {
    33 00000242 AC                  <1>         lodsb                               ;    AL = *ESI++;
    34 00000243 3C00                <1>         cmp     al, 0                       ;    if(0 == AL)
    35 00000245 7425                <1>         je      .10E                        ;      break;
    36                              <1> 
    37                              <1>         ;---------------------------------
    38                              <1>         ; 1文字表示
    39                              <1>         ;---------------------------------
    40 00000247 50535251E8D3FEFFFF- <1>         cdecl   draw_char, ecx, edx, ebx, eax   ;   draw_char();
    40 00000250 6683C410            <1>
    41                              <1> 
    42                              <1>         ; 次の文字の位置を調整
    43 00000254 41                  <1>         inc     ecx                         ;   ECX++;
    44 00000255 83F950              <1>         cmp     ecx, 80                     ;   if(80 <= ECX)
    45 00000258 7C10                <1>         jl      .12E                        ;   {
    46 0000025A B900000000          <1>         mov     ecx, 0                      ;      ECX = 0;
    47 0000025F 42                  <1>         inc     edx                         ;      EDX++;
    48 00000260 83FA1E              <1>         cmp     edx, 30                     ;      if(30 <= EDX)
    49 00000263 7C05                <1>         jl      .12E                        ;      {
    50 00000265 BA00000000          <1>         mov     edx, 0                      ;         EDX = 0;
    51                              <1> .12E:                                       ;      }
    52 0000026A EBD6                <1>         jmp     .10L                        ;   }
    53                              <1> .10E:                                       ; } while(1);
    54                              <1>        
    55                              <1>         ;---------------------------------
    56                              <1>         ; レジスタの復帰
    57                              <1>         ;---------------------------------
    58 0000026C 5E                  <1> 		pop		esi
    59 0000026D 5A                  <1> 		pop		edx
    60 0000026E 59                  <1> 		pop		ecx
    61 0000026F 5B                  <1> 		pop		ebx
    62 00000270 58                  <1> 		pop		eax
    63                              <1> 
    64                              <1>         ;---------------------------------
    65                              <1>         ; スタックフレームの破棄
    66                              <1>         ;---------------------------------
    67 00000271 89EC                <1>         mov     esp, ebp
    68 00000273 5D                  <1>         pop     ebp
    69                              <1> 
    70 00000274 C3                  <1>         ret
    51                                  %include  "../modules/protect/draw_color_bar.s"
     1                              <1> draw_color_bar:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1>                                                 ; ---------------------
     6                              <1>                                                 ;     +12| Y(行)
     7                              <1>                                                 ;     + 8| X(列)
     8                              <1>                                                 ; -------+-------------
     9 00000275 55                  <1>         push    ebp                             ;     + 4| EIP(戻り番地)
    10 00000276 89E5                <1>         mov     ebp, esp                        ; EBP + 0| EBP(元の値)
    11                              <1>                                                 ; ---------------------
    12                              <1> 
    13                              <1> 		;---------------------------------------
    14                              <1> 		; レジスタの保存
    15                              <1> 		;---------------------------------------
    16 00000278 50                  <1> 		push	eax
    17 00000279 53                  <1> 		push	ebx
    18 0000027A 51                  <1> 		push	ecx
    19 0000027B 52                  <1> 		push	edx
    20 0000027C 56                  <1> 		push	esi
    21 0000027D 57                  <1> 		push	edi
    22                              <1> 
    23                              <1>         ;---------------------------------------
    24                              <1>         ; 表示位置
    25                              <1>         ;---------------------------------------
    26 0000027E 8B7508              <1>         mov     esi, [ebp + 8]                      ; ESI = X(列);
    27 00000281 8B7D0C              <1>         mov     edi, [ebp +12]                      ; EDI = Y(行);
    28                              <1> 
    29                              <1>         ;---------------------------------------
    30                              <1>         ; カラーバーを表示
    31                              <1>         ;---------------------------------------
    32 00000284 B900000000          <1>         mov     ecx, 0                              ; for(ECX = 0;
    33 00000289 83F910              <1> .10L:   cmp     ecx, 16                             ;     ECX < 16;
    34 0000028C 732E                <1>         jae     .10E                                ;
    35                              <1>                                                     ;     ECX++)
    36                              <1>                                                     ; {
    37                              <1>                                                     ;    // 桁位置の計算
    38 0000028E 89C8                <1>         mov     eax, ecx                            ;    EAX = ECX;
    39 00000290 83E001              <1>         and     eax, 0x01                           ;    EAX &= 0x01;
    40 00000293 C1E003              <1>         shl     eax, 3                              ;    EAX *= 8;  // 8文字分乗算
    41 00000296 01F0                <1>         add     eax, esi                            ;    EAX += X;
    42                              <1>                                                     ;
    43                              <1>                                                     ;    // 行位置の計算
    44 00000298 89CB                <1>         mov     ebx, ecx                            ;    EBX = ECX;
    45 0000029A D1EB                <1>         shr     ebx, 1                              ;    EBX /= 2;
    46 0000029C 01FB                <1>         add     ebx, edi                            ;    EBX += Y;
    47                              <1>                                                     ;
    48                              <1>                                                     ;    // 表示色の取得
    49 0000029E 89CA                <1>         mov     edx, ecx                            ;    EDX = ECX;
    50 000002A0 D1E2                <1>         shl     edx, 1                              ;    EDX /= 2;
    51 000002A2 8B92[CF020000]      <1>         mov     edx, [.t0 + edx]                    ;    EDX += Y;
    52                              <1> 
    53 000002A8 68[C6020000]525350- <1>         cdecl   draw_str, eax, ebx, edx, .s0        ;    draw_str();
    53 000002B0 E877FFFFFF6683C410  <1>
    54                              <1> 
    55 000002B9 41                  <1>         inc     ecx                                 ; // for(... ECX++)
    56 000002BA EBCD                <1>         jmp     .10L                                ;
    57                              <1> .10E:                                               ; }
    58                              <1> 
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; レジスタの復帰
    62                              <1>         ;---------------------------------------
    63 000002BC 5F                  <1>         pop     edi
    64 000002BD 5E                  <1>         pop     esi
    65 000002BE 5A                  <1>         pop     edx
    66 000002BF 59                  <1>         pop     ecx
    67 000002C0 5B                  <1>         pop     ebx
    68 000002C1 58                  <1>         pop     eax
    69                              <1> 
    70                              <1>         ;---------------------------------------
    71                              <1>         ; スタックフレームの破棄
    72                              <1>         ;---------------------------------------
    73 000002C2 89EC                <1>         mov     esp, ebp
    74 000002C4 5D                  <1>         pop     ebp
    75                              <1> 
    76 000002C5 C3                  <1>         ret
    77                              <1> 
    78 000002C6 202020202020202000  <1> .s0:    db  '        ', 0                           ; 8文字分のスペース（表示色だけを変更）
    79                              <1> 
    80 000002CF 00000008            <1> .t0:    dw  0x0000, 0x0800                          ; カラーバーの背景色
    81 000002D3 00010009            <1>         dw  0x0100, 0x0900
    82 000002D7 0002000A            <1>         dw  0x0200, 0x0A00
    83 000002DB 0003000B            <1>         dw  0x0300, 0x0B00
    84 000002DF 0004000C            <1>         dw  0x0400, 0x0C00
    85 000002E3 0005000D            <1>         dw  0x0500, 0x0D00
    86 000002E7 0006000E            <1>         dw  0x0600, 0x0E00
    87 000002EB 0007000F            <1>         dw  0x0700, 0x0F00
    52                                  %include  "../modules/protect/draw_pixel.s"
     1                              <1> draw_pixel:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ------+--------
     6                              <1> 												; EBP+16| 色
     7                              <1> 												; EBP+12| Y
     8                              <1> 												; EBP+ 8| X
     9                              <1> 												; ------+--------
    10 000002EF 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
    11 000002F0 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    12                              <1> 												; ------+--------
    13                              <1> 
    14                              <1>         ;---------------------------------------
    15                              <1>         ; レジスタの保存
    16                              <1>         ;---------------------------------------
    17 000002F2 50                  <1>         push    eax
    18 000002F3 53                  <1>         push    ebx
    19 000002F4 51                  <1>         push    ecx
    20 000002F5 57                  <1>         push    edi
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ;
    24                              <1>         ;---------------------------------------
    25 000002F6 8B7D0C              <1>         mov     edi, [ebp + 12]					; EDI  = Y座標
    26 000002F9 C1E704              <1>         shl     edi, 4							; EDI *= 16;
    27 000002FC 8DBCBF00000A00      <1>         lea     edi, [edi * 4 + edi + 0xA_0000]	; EDI  = 0xA00000[EDI * 4 + EDI];
    28                              <1> 
    29                              <1> 		;---------------------------------------
    30                              <1> 		; X座標を1/8して加算
    31                              <1> 		;---------------------------------------
    32 00000303 8B5D08              <1> 		mov		ebx, [ebp + 8]					; EBX  = X座標;
    33 00000306 89D9                <1> 		mov		ecx, ebx						; ECX  = X座標;（一時保存）
    34 00000308 C1EB03              <1> 		shr		ebx, 3							; EBX /= 8;
    35 0000030B 01DF                <1> 		add		edi, ebx						; EDI += EBX;
    36                              <1> 
    37                              <1> 		;---------------------------------------
    38                              <1> 		; X座標を8で割った余りからビット位置を計算
    39                              <1> 		; (0=0x80, 1=0x40,... 7=0x01)
    40                              <1> 		;---------------------------------------
    41 0000030D 83E107              <1> 		and		ecx, 0x07						; ECX = X & 0x07;
    42 00000310 BB80000000          <1> 		mov		ebx, 0x80						; EBX = 0x80;
    43 00000315 D3EB                <1> 		shr		ebx, cl							; EBX >>= ECX;
    44                              <1> 
    45                              <1> 		;---------------------------------------
    46                              <1> 		; 色指定
    47                              <1> 		;---------------------------------------
    48 00000317 8B4D10              <1> 		mov		ecx, [ebp +16]					; // 表示色
    49                              <1> 
    50                              <1> 		;---------------------------------------
    51                              <1> 		; プレーン毎に出力
    52                              <1> 		;---------------------------------------
    53 0000031A 6A03E84FFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x03		; // 輝度(I)プレーンを選択
    53 00000323 C404                <1>
    54 00000325 6A08E85DFDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x08		; // 輝度(I)プレーンを選択
    54 0000032E C404                <1>
    55 00000330 516A085753E8BBFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x08, ecx
    55 00000339 FF6683C410          <1>
    56                              <1> 
    57 0000033E 6A02E82BFDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x02		; // 赤(R)プレーンを選択
    57 00000347 C404                <1>
    58 00000349 6A04E839FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x04		; // 赤(R)プレーンを選択
    58 00000352 C404                <1>
    59 00000354 516A045753E897FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x04, ecx
    59 0000035D FF6683C410          <1>
    60                              <1> 
    61 00000362 6A01E807FDFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x01		; // 緑(G)プレーンを選択
    61 0000036B C404                <1>
    62 0000036D 6A02E815FDFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x02		; // 緑(G)プレーンを選択
    62 00000376 C404                <1>
    63 00000378 516A025753E873FDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x02, ecx
    63 00000381 FF6683C410          <1>
    64                              <1> 
    65 00000386 6A00E8E3FCFFFF6683- <1> 		cdecl	vga_set_read_plane, 0x00		; // 青(B)プレーンを選択
    65 0000038F C404                <1>
    66 00000391 6A01E8F1FCFFFF6683- <1> 		cdecl	vga_set_write_plane, 0x01		; // 青(B)プレーンを選択
    66 0000039A C404                <1>
    67 0000039C 516A015753E84FFDFF- <1> 		cdecl	vram_bit_copy, ebx, edi, 0x01, ecx
    67 000003A5 FF6683C410          <1>
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; レジスタの復帰
    71                              <1>         ;---------------------------------------
    72 000003AA 5F                  <1>         pop     edi
    73 000003AB 59                  <1>         pop     ecx
    74 000003AC 5B                  <1>         pop     ebx
    75 000003AD 58                  <1>         pop     eax
    76                              <1> 
    77                              <1>         ;---------------------------------------
    78                              <1>         ; スタックフレームの破棄
    79                              <1>         ;---------------------------------------
    80 000003AE 89EC                <1>         mov     esp, ebp
    81 000003B0 5D                  <1>         pop     ebp
    82                              <1> 
    83 000003B1 C3                  <1>         ret
    53                                  %include  "../modules/protect/draw_line.s"
     1                              <1> draw_line:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ---------------
     6                              <1> 												;    +24| 色
     7                              <1> 												;    +20| Y1
     8                              <1> 												;    +16| X1
     9                              <1> 												;    +12| Y0
    10                              <1> 												;    + 8| X0
    11                              <1> 												; ---------------
    12 000003B2 55                  <1>         push    ebp								; EBP+ 4| EIP（戻り番地）
    13 000003B3 89E5                <1>         mov     ebp, esp						; EBP+ 0| EBP（元の値）
    14                              <1> 												; ---------------
    15 000003B5 6A00                <1> 		push	dword 0							;    - 4| sum   = 0; // 相対軸の積算値
    16 000003B7 6A00                <1> 		push	dword 0							;    - 8| x0    = 0; // X座標
    17 000003B9 6A00                <1> 		push	dword 0							;    -12| dx    = 0; // X増分
    18 000003BB 6A00                <1> 		push	dword 0							;    -16| inc_x = 0; // X座標増分(1 or -1)
    19 000003BD 6A00                <1> 		push	dword 0							;    -20| x0    = 0; // Y座標
    20 000003BF 6A00                <1> 		push	dword 0							;    -24| dx    = 0; // Y増分
    21 000003C1 6A00                <1>         push    dword 0							;    -28| inc_x = 0; // Y座標増分(1 or -1)
    22                              <1> 												; ------|--------
    23                              <1> 
    24                              <1>         ;---------------------------------------
    25                              <1>         ; レジスタの保存
    26                              <1>         ;---------------------------------------
    27 000003C3 50                  <1>         push    eax
    28 000003C4 53                  <1>         push    ebx
    29 000003C5 51                  <1>         push    ecx
    30 000003C6 52                  <1>         push    edx
    31 000003C7 56                  <1>         push    esi
    32 000003C8 57                  <1>         push    edi
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 幅を計算（X軸）
    36                              <1> 		;---------------------------------------
    37 000003C9 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    38 000003CC 8B5D10              <1> 		mov		ebx, [ebp +16]					; EBX = X1;
    39 000003CF 29C3                <1> 		sub		ebx, eax						; EBX = X1 - X0; // 幅
    40 000003D1 7D09                <1> 		jge		.10F							; if (幅 < 0)
    41                              <1> 												; {
    42 000003D3 F7DB                <1> 		neg		ebx								;   幅   *= -1;
    43 000003D5 BEFFFFFFFF          <1> 		mov		esi, -1							;   // X座標の増分
    44 000003DA EB05                <1> 		jmp		.10E							; }
    45                              <1> .10F:											; else
    46                              <1> 												; {
    47 000003DC BE01000000          <1> 		mov		esi, 1							;   // X座標の増分
    48                              <1> .10E:											; }
    49                              <1> 
    50                              <1> 		;---------------------------------------
    51                              <1> 		; 高さを計算（Y軸）
    52                              <1> 		;---------------------------------------
    53 000003E1 8B4D0C              <1> 		mov		ecx, [ebp +12]					; ECX = Y0
    54 000003E4 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1
    55 000003E7 29CA                <1> 		sub		edx, ecx						; EDX = Y1 - Y0; // 高さ
    56 000003E9 7D09                <1> 		jge		.20F							; if (高さ < 0)
    57                              <1> 												; {
    58 000003EB F7DA                <1> 		neg		edx								;   高さ *= -1;
    59 000003ED BFFFFFFFFF          <1> 		mov		edi, -1							;   // Y座標の増分
    60 000003F2 EB05                <1> 		jmp		.20E							; }
    61                              <1> .20F:											; else
    62                              <1> 												; {
    63 000003F4 BF01000000          <1> 		mov		edi, 1							;   // Y座標の増分
    64                              <1> .20E:											; }
    65                              <1> 
    66                              <1> 		;---------------------------------------
    67                              <1> 		; X軸
    68                              <1> 		;---------------------------------------
    69 000003F9 8945F8              <1> 		mov		[ebp - 8], eax					;   // X軸:開始座標
    70 000003FC 895DF4              <1> 		mov		[ebp -12], ebx					;   // X軸:描画幅
    71 000003FF 8975F0              <1> 		mov		[ebp -16], esi					;   // X軸:増分(基準軸：1 or -1)
    72                              <1> 
    73                              <1> 		;---------------------------------------
    74                              <1> 		; Y軸
    75                              <1> 		;---------------------------------------
    76 00000402 894DEC              <1> 		mov		[ebp -20], ecx					;   // Y軸:開始座標
    77 00000405 8955E8              <1> 		mov		[ebp -24], edx					;   // Y軸:描画幅
    78 00000408 897DE4              <1> 		mov		[ebp -28], edi					;   // Y軸:増分(基準軸：1 or -1)
    79                              <1> 
    80                              <1> 		;---------------------------------------
    81                              <1> 		; 基準軸を決める
    82                              <1> 		;---------------------------------------
    83 0000040B 39D3                <1> 		cmp		ebx, edx						; if (幅 <= 高さ)
    84 0000040D 7F08                <1> 		jg		.22F							; {
    85                              <1> 												;   
    86 0000040F 8D75EC              <1> 		lea		esi, [ebp -20]					;   // X軸が基準軸
    87 00000412 8D7DF8              <1> 		lea		edi, [ebp - 8]					;   // Y軸が相対軸
    88                              <1> 												;   
    89 00000415 EB06                <1> 		jmp		.22E							; }
    90                              <1> .22F:											; else
    91                              <1> 												; {
    92 00000417 8D75F8              <1> 		lea		esi, [ebp - 8]					;   // Y軸が基準軸
    93 0000041A 8D7DEC              <1> 		lea		edi, [ebp -20]					;   // X軸が相対軸
    94                              <1> .22E:											; }
    95                              <1> 
    96                              <1> 		;---------------------------------------
    97                              <1> 		; 繰り返し回数(基準軸のドット数)
    98                              <1> 		;---------------------------------------
    99 0000041D 8B4EFC              <1> 		mov		ecx, [esi - 4]					; ECX = 基準軸描画幅;
   100 00000420 83F900              <1> 		cmp		ecx, 0							; if (0 == ECX)
   101 00000423 7505                <1> 		jnz		.30E							; {
   102 00000425 B901000000          <1> 		mov		ecx, 1							;   ECX = 1;
   103                              <1> .30E:											; }
   104                              <1> 
   105                              <1> 		;---------------------------------------
   106                              <1> 		; 線を描画
   107                              <1> 		;---------------------------------------
   108                              <1> .50L:											; do
   109                              <1> 												; {
   110                              <1> %ifdef	USE_SYSTEM_CALL
   111                              <1> 		mov		eax, ecx						;   // 繰り返し回数を保存
   112                              <1> 
   113                              <1> 		mov		ebx, [ebp +24]					;   EBX = 表示色;
   114                              <1> 		mov		ecx, [ebp - 8]					;   ECX = X座標;
   115                              <1> 		mov		edx, [ebp -20]					;   EDX = Y座標;
   116                              <1> 		int		0x82							;   sys_call(1, X, Y, 色, 文字); BX(C), CX(X), DX(Y)
   117                              <1> 
   118                              <1> 		mov		ecx, eax
   119                              <1> %else
   122 0000042A FF7518FF75ECFF75F8- <1> 		cdecl	draw_pixel, dword [ebp - 8], 							dword [ebp -20], 							dword [ebp +24]		;   // 点の描画
   122 00000433 E8B7FEFFFF6683C40C  <1>
   123                              <1> %endif
   124                              <1> 												;   // 基準軸を更新(1ドット分)
   125 0000043C 8B46F8              <1> 		mov		eax, [esi - 8]					;   EAX = 基準軸増分(1 or -1);
   126 0000043F 0106                <1> 		add		[esi - 0], eax					;   
   127                              <1> 
   128                              <1> 												;   // 相対軸を更新
   129 00000441 8B45FC              <1> 		mov		eax, [ebp - 4]					;   EAX  = sum; // 相対軸の積算値;
   130 00000444 0347FC              <1> 		add		eax, [edi - 4]					;   EAX += dy;  // 増分(相対軸の描画幅)
   131 00000447 8B5EFC              <1> 		mov		ebx, [esi - 4]					;   EBX  = dx;  // 増分(基準軸の描画幅)
   132                              <1> 
   133 0000044A 39D8                <1> 		cmp		eax, ebx						;   if (積算値 <= 相対軸の増分)
   134 0000044C 7C07                <1> 		jl		.52E							;   {
   135 0000044E 29D8                <1> 		sub		eax, ebx						;     EAX -= EBX; // 積算値から相対軸の増分を減算
   136                              <1> 												;     
   137                              <1> 												;     // 相対軸の座標を更新(1ドット分)
   138 00000450 8B5FF8              <1> 		mov		ebx, [edi - 8]					;     EBX =  相対軸増分;
   139 00000453 011F                <1> 		add		[edi - 0], ebx					;     
   140                              <1> .52E:											;   }
   141 00000455 8945FC              <1> 		mov		[ebp - 4], eax					;   // 積算値を更新
   142                              <1> 												;   
   143 00000458 E2D0                <1> 		loop	.50L							;   
   144                              <1> .50E:											; } while (ループ回数--);
   145                              <1> 
   146                              <1>         ;---------------------------------------
   147                              <1>         ; レジスタの復帰
   148                              <1>         ;---------------------------------------
   149 0000045A 5F                  <1>         pop     edi
   150 0000045B 5E                  <1>         pop     esi
   151 0000045C 5A                  <1>         pop     edx
   152 0000045D 59                  <1>         pop     ecx
   153 0000045E 5B                  <1>         pop     ebx
   154 0000045F 58                  <1>         pop     eax
   155                              <1> 
   156                              <1>         ;---------------------------------------
   157                              <1>         ; スタックフレームの破棄
   158                              <1>         ;---------------------------------------
   159 00000460 89EC                <1>         mov     esp, ebp
   160 00000462 5D                  <1>         pop     ebp
   161                              <1> 
   162 00000463 C3                  <1>         ret
    54                                  %include  "../modules/protect/draw_rect.s"
     1                              <1> draw_rect:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;---------------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+24| 色
     7                              <1> 												; EBP+20| Y1
     8                              <1> 												; EBP+16| X1
     9                              <1> 												; EBP+12| Y0
    10                              <1> 												; EBP+ 8| X0
    11                              <1> 												; ---------------
    12 00000464 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
    13 00000465 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    14                              <1> 												; ------|--------
    15                              <1> 
    16                              <1>         ;---------------------------------------
    17                              <1>         ; レジスタの保存
    18                              <1>         ;---------------------------------------
    19 00000467 50                  <1>         push    eax
    20 00000468 53                  <1>         push    ebx
    21 00000469 51                  <1>         push    ecx
    22 0000046A 52                  <1>         push    edx
    23 0000046B 56                  <1>         push    esi
    24                              <1> 
    25                              <1> 		;---------------------------------------
    26                              <1> 		; 矩形を描画
    27                              <1> 		;---------------------------------------
    28 0000046C 8B4508              <1> 		mov		eax, [ebp + 8]					; EAX = X0;
    29 0000046F 8B5D0C              <1> 		mov		ebx, [ebp +12]					; EBX = Y0;
    30 00000472 8B4D10              <1> 		mov		ecx, [ebp +16]					; ECX = X1;
    31 00000475 8B5514              <1> 		mov		edx, [ebp +20]					; EDX = Y1;
    32 00000478 8B7518              <1> 		mov		esi, [ebp +24]					; ESI = 色;
    33                              <1> 
    34                              <1> 		;---------------------------------------
    35                              <1> 		; 座標軸の大小を確定
    36                              <1> 		;---------------------------------------
    37 0000047B 39C8                <1> 		cmp		eax, ecx						; if (X1 < X0)
    38 0000047D 7C01                <1> 		jl		.10E							; {
    39 0000047F 91                  <1> 		xchg	eax, ecx						;   X0とX1を入れ替える;
    40                              <1> .10E:											; }
    41                              <1> 
    42 00000480 39D3                <1> 		cmp		ebx, edx						; if (Y1 < Y0)
    43 00000482 7C02                <1> 		jl		.20E							; {
    44 00000484 87DA                <1> 		xchg	ebx, edx						;   Y0とY1を入れ替える;
    45                              <1> .20E:											; }
    46                              <1> 
    47                              <1> 		;---------------------------------------
    48                              <1> 		; 矩形を描画
    49                              <1> 		;---------------------------------------
    50 00000486 5653515350E822FFFF- <1> 		cdecl	draw_line, eax, ebx, ecx, ebx, esi	; 上線
    50 0000048F FF6683C414          <1>
    51 00000494 5652505350E814FFFF- <1> 		cdecl	draw_line, eax, ebx, eax, edx, esi	; 左線
    51 0000049D FF6683C414          <1>
    52                              <1> 
    53 000004A2 4A                  <1> 		dec		edx									; EDX--; // 下線は1ドット上げる
    54 000004A3 5652515250E805FFFF- <1> 		cdecl	draw_line, eax, edx, ecx, edx, esi	; 下線
    54 000004AC FF6683C414          <1>
    55 000004B1 42                  <1> 		inc		edx
    56                              <1> 
    57 000004B2 49                  <1> 		dec		ecx									; ECX--; // 右線は1ドット左に移動
    58 000004B3 5652515351E8F5FEFF- <1> 		cdecl	draw_line, ecx, ebx, ecx, edx, esi	; 右線
    58 000004BC FF6683C414          <1>
    59                              <1> 
    60                              <1>         ;---------------------------------------
    61                              <1>         ; レジスタの復帰
    62                              <1>         ;---------------------------------------
    63 000004C1 5E                  <1>         pop     esi
    64 000004C2 5A                  <1>         pop     edx
    65 000004C3 59                  <1>         pop     ecx
    66 000004C4 5B                  <1>         pop     ebx
    67 000004C5 58                  <1>         pop     eax
    68                              <1> 
    69                              <1>         ;---------------------------------------
    70                              <1>         ; スタックフレームの破棄
    71                              <1>         ;---------------------------------------
    72 000004C6 89EC                <1>         mov     esp, ebp
    73 000004C8 5D                  <1>         pop     ebp
    74                              <1> 
    75 000004C9 C3                  <1>         ret
    55                                  %include  "../modules/protect/itoa.s"
     1                              <1> itoa:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												;    +24| フラグ
     7                              <1> 												;    +20| 基数
     8                              <1> 												;    +16| バッファサイズ
     9                              <1> 												;    +12| バッファアドレス
    10                              <1> 												;    + 8| 数値
    11                              <1> 												; ------|--------
    12                              <1> 												;    + 4| EIP（戻り番地）
    13 000004CA 55                  <1> 		push	ebp								; EBP+ 0| EBP（元の値）
    14 000004CB 89E5                <1> 		mov		ebp, esp						; ------+--------
    15                              <1> 
    16                              <1>         ;----------------------------------
    17                              <1>         ; レジスタの保存
    18                              <1>         ;----------------------------------
    19 000004CD 50                  <1>         push    eax
    20 000004CE 53                  <1>         push    ebx
    21 000004CF 51                  <1>         push    ecx
    22 000004D0 52                  <1>         push    edx
    23 000004D1 56                  <1>         push    esi
    24 000004D2 57                  <1>         push    edi
    25                              <1> 
    26                              <1>         ;----------------------------------
    27                              <1>         ; 引数を取得
    28                              <1>         ;----------------------------------
    29 000004D3 8B4508              <1> 		mov		eax, [ebp + 8]					; val  = 数値;
    30 000004D6 8B750C              <1> 		mov		esi, [ebp +12]					; dst  = バッファアドレス;
    31 000004D9 8B4D10              <1> 		mov		ecx, [ebp +16]					; size = 残りバッファサイズ;
    32                              <1> 
    33 000004DC 89F7                <1> 		mov		edi, esi						; // バッファの最後尾
    34 000004DE 01CF                <1> 		add		edi, ecx						; dst  = &dst[size - 1];
    35 000004E0 4F                  <1> 		dec		edi								; 
    36                              <1> 
    37 000004E1 8B5D18              <1> 		mov		ebx, [ebp +24]					; flags = オプション;
    38                              <1> 
    39                              <1>         ;----------------------------------
    40                              <1>         ; 符号付き判定
    41                              <1>         ;----------------------------------
    42 000004E4 F7C301000000        <1> 		test	ebx, 0b0001						; if (flags & 0x01)// 符号付き
    43 000004EA 7408                <1> .10Q:	je		.10E							; {
    44 000004EC 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    45 000004EF 7D03                <1> .12Q:	jge		.12E							;   {
    46 000004F1 83CB02              <1> 		or		ebx, 0b0010						;     flags |=  2; // 符号表示
    47                              <1> .12E:											;   }
    48                              <1> .10E:											; }
    49                              <1> 
    50                              <1>         ;----------------------------------
    51                              <1>         ; 符号出力判定
    52                              <1>         ;----------------------------------
    53 000004F4 F7C302000000        <1> 		test	ebx, 0b0010						; if (flags & 0x02)// 符号出力判定
    54 000004FA 7410                <1> .20Q:	je		.20E							; {
    55 000004FC 83F800              <1> 		cmp		eax, 0							;   if (val < 0)
    56 000004FF 7D07                <1> .22Q:	jge		.22F							;   {
    57 00000501 F7D8                <1> 		neg		eax								;     val *= -1;   // 符号反転
    58 00000503 C6062D              <1> 		mov		[esi], byte '-'					;     *dst = '-';  // 符号表示
    59 00000506 EB03                <1> 		jmp		.22E							;   }
    60                              <1> .22F:											;   else
    61                              <1> 												;   {
    62 00000508 C6062B              <1> 		mov		[esi], byte '+'					;     *dst = '+';  // 符号表示
    63                              <1> .22E:											;   }
    64 0000050B 49                  <1> 		dec		ecx								;   size--;        // 残りバッファサイズの減算
    65                              <1> .20E:											; }
    66                              <1> 
    67                              <1>         ;----------------------------------
    68                              <1>         ; ASCII変換
    69                              <1>         ;----------------------------------
    70 0000050C 8B5D14              <1> 		mov		ebx, [ebp +20]					; BX = 基数;
    71                              <1> .30L:											; do
    72                              <1> 												; {
    73 0000050F BA00000000          <1> 		mov		edx, 0							;   
    74 00000514 F7F3                <1> 		div		ebx								;   DX = DX:AX % 基数;
    75                              <1> 												;   AX = DX:AX / 基数;
    76                              <1> 												;   
    77 00000516 89D6                <1> 		mov		esi, edx						;   // テーブル参照
    78 00000518 8A96[43050000]      <1> 		mov		dl, byte [.ascii + esi]			;   DL = ASCII[DX];
    79                              <1> 												;   
    80 0000051E 8817                <1> 		mov		[edi], dl						;   *dst = DL;
    81 00000520 4F                  <1> 		dec		edi								;   dst--;
    82                              <1> 												;   
    83 00000521 83F800              <1> 		cmp		eax, 0							;   
    84 00000524 E0E9                <1> 		loopnz	.30L							; } while (AX);
    85                              <1> .30E:
    86                              <1> 
    87                              <1>         ;----------------------------------
    88                              <1>         ; 空欄を埋める
    89                              <1>         ;----------------------------------
    90 00000526 83F900              <1> 		cmp		ecx, 0							; if (size)
    91 00000529 740E                <1> .40Q:	je		.40E							; {
    92 0000052B B020                <1> 		mov		al, ' '							;   AL = ' ';  // ' 'で埋める（デフォルト値）
    93 0000052D 66837D1804          <1> 		cmp		[ebp +24], word 0b0100			;   if (flags & 0x04)
    94 00000532 7502                <1> .42Q:	jne		.42E							;   {
    95 00000534 B030                <1> 		mov		al, '0'							;     AL = '0'; // '0'で埋める
    96                              <1> .42E:											;   }
    97 00000536 FD                  <1> 		std										;   // DF = 1（-方向）
    98 00000537 F3AA                <1> 		rep stosb								;   while (--CX) *DI-- = ' ';
    99                              <1> .40E:	
   100                              <1> 
   101                              <1>         ;----------------------------------
   102                              <1>         ; レジスタの復帰
   103                              <1>         ;----------------------------------
   104 00000539 5F                  <1>         pop     edi
   105 0000053A 5E                  <1>         pop     esi
   106 0000053B 5A                  <1>         pop     edx
   107 0000053C 59                  <1>         pop     ecx
   108 0000053D 5B                  <1>         pop     ebx
   109 0000053E 58                  <1>         pop     eax
   110                              <1> 
   111                              <1>         ;----------------------------------
   112                              <1>         ; スタックフレームの破棄
   113                              <1>         ;----------------------------------
   114 0000053F 89EC                <1>         mov     esp, ebp
   115 00000541 5D                  <1>         pop     ebp
   116                              <1> 
   117 00000542 C3                  <1>         ret
   118                              <1> 
   119 00000543 303132333435363738- <1> .ascii	db		"0123456789ABCDEF"				; 変換テーブル
   119 0000054C 39414243444546      <1>
    56                                  %include  "../modules/protect/rtc.s"
     1                              <1> rtc_get_time:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 												; ------|--------
     6                              <1> 												; EBP+ 8| 保存先アドレス
     7                              <1> 												; ---------------
     8 00000553 55                  <1> 		push	ebp								; EBP+ 4| EIP（戻り番地）
     9 00000554 89E5                <1> 		mov		ebp, esp						; EBP+ 0| EBP（元の値）
    10                              <1> 												; ---------------
    11                              <1>         ;----------------------------------
    12                              <1>         ; レジスタの保存
    13                              <1>         ;----------------------------------
    14 00000556 53                  <1>         push    ebx
    15                              <1>         
    16                              <1>         ;----------------------------------
    17                              <1>         ; RTCから時刻を取得
    18                              <1>         ;----------------------------------
    19 00000557 B004                <1> 		mov		al, 0x04						;   AL = 0x04;
    20 00000559 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    21 0000055B E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 時データ
    22                              <1> 
    23 0000055D C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    24                              <1> 
    25 00000560 B002                <1> 		mov		al, 0x02						;   AL = 0x02;
    26 00000562 E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    27 00000564 E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 分データ
    28                              <1> 
    29 00000566 C1E008              <1> 		shl		eax, 8							;   EAX <<= 8;      // データを退避
    30                              <1> 
    31 00000569 B000                <1> 		mov		al, 0x00						;   AL = 0x00;
    32 0000056B E670                <1> 		out		0x70, al						;   outp(0x70, AL);
    33 0000056D E471                <1> 		in		al, 0x71						;   AL = inp(0x71); // 秒データ
    34                              <1> 
    35 0000056F 25FFFFFF00          <1> 		and		eax, 0x00_FF_FF_FF				;   // 下位3バイトのみ有効
    36 00000574 8B5D08              <1> 		mov		ebx, [ebp + 8]					;   dst = 保存先;
    37 00000577 8903                <1> 		mov		[ebx], eax						;   [dst] = 時刻;
    38                              <1> 
    39                              <1>         ;----------------------------------
    40                              <1>         ; レジスタの復帰
    41                              <1>         ;----------------------------------
    42 00000579 5B                  <1>         pop     ebx
    43                              <1> 
    44                              <1>         ;----------------------------------
    45                              <1>         ; スタックフレームの破棄
    46                              <1>         ;----------------------------------
    47 0000057A 89EC                <1>         mov     esp, ebp
    48 0000057C 5D                  <1>         pop     ebp
    49                              <1> 
    50 0000057D C3                  <1>         ret
    57                                  %include  "../modules/protect/draw_time.s"
     1                              <1> draw_time:
     2                              <1>         ;----------------------------------
     3                              <1>         ; スタックフレームの構築
     4                              <1>         ;----------------------------------
     5                              <1> 
     6 0000057E 55                  <1>         push    ebp
     7 0000057F 89E5                <1>         mov     ebp, esp
     8                              <1> 
     9                              <1>         ;----------------------------------
    10                              <1>         ; レジスタの保存
    11                              <1>         ;----------------------------------
    12 00000581 50                  <1>         push    eax
    13 00000582 53                  <1>         push    ebx
    14                              <1> 
    15                              <1>         ;----------------------------------
    16                              <1>         ; 時刻の表示
    17                              <1>         ;----------------------------------
    18 00000583 8B4514              <1> 		mov		eax, [ebp +20]					; EAX = 時刻データ;
    19                              <1> 
    20 00000586 0FB6D8              <1>         movzx   ebx, al                         ; EBX = 秒;
    21 00000589 6A046A106A0268-     <1>         cdecl   itoa, ebx, .sec, 2, 16, 0b0100  ; // 文字に変換
    21 00000590 [F0050000]53E830FF- <1>
    21 00000598 FFFF6683C414        <1>
    22                              <1> 
    23 0000059E 88E3                <1>         mov     bl, ah                          ; EBX = 分;
    24 000005A0 6A046A106A0268-     <1>         cdecl   itoa, ebx, .min, 2, 16, 0b0100  ; // 文字に変換
    24 000005A7 [ED050000]53E819FF- <1>
    24 000005AF FFFF6683C414        <1>
    25                              <1> 
    26 000005B5 C1E810              <1>         shr     eax, 16                         ; EBX = 時;
    27 000005B8 6A046A106A0268-     <1>         cdecl   itoa, eax, .hour, 2, 16, 0b0100 ; // 文字に変換
    27 000005BF [EA050000]50E801FF- <1>
    27 000005C7 FFFF6683C414        <1>
    28                              <1> 
    29                              <1>                                                 ; // 時刻を表示
    30 000005CD 68[EA050000]FF7510- <1>         cdecl   draw_str,   dword [ebp + 8], dword [ebp + 12], dword [ebp + 16], .hour
    30 000005D5 FF750CFF7508E84CFC- <1>
    30 000005DE FFFF6683C410        <1>
    31                              <1> 
    32                              <1>         ;----------------------------------
    33                              <1>         ; レジスタの復帰
    34                              <1>         ;----------------------------------
    35 000005E4 5B                  <1>         pop     ebx
    36 000005E5 58                  <1>         pop     eax
    37                              <1> 
    38                              <1>         ;----------------------------------
    39                              <1>         ; スタックフレームの破棄
    40                              <1>         ;----------------------------------
    41 000005E6 89EC                <1>         mov     esp, ebp
    42 000005E8 5D                  <1>         pop     ebp
    43                              <1> 
    44 000005E9 C3                  <1>         ret
    45                              <1> 
    46 000005EA 5A5A3A              <1> .hour:  db  "ZZ:"
    47 000005ED 5A5A3A              <1> .min:   db  "ZZ:"
    48 000005F0 5A5A00              <1> .sec:   db  "ZZ", 0
    58                                  %include  "modules/interrupt.s"
     1                              <1> int_stop:
     2                              <1>         ;---------------------------------------
     3                              <1>         ; EAXで示される文字列を表示
     4                              <1>         ;---------------------------------------
     5 000005F3 50680F0600006A0F6A- <1>         cdecl   draw_str, 25, 15, 0x060F, eax
     5 000005FC 19E82AFCFFFF6683C4- <1>
     5 00000605 10                  <1>
     6                              <1> 
     7                              <1>         ;---------------------------------------
     8                              <1>         ; スタックのデータを文字列に変換
     9                              <1>         ;---------------------------------------
    10 00000606 8B0424              <1>         mov     eax, [esp + 0]
    11 00000609 6A046A106A0868-     <1>         cdecl   itoa, eax, .p1, 8, 16, 0b0100
    11 00000610 [CE060000]50E8B0FE- <1>
    11 00000618 FFFF6683C414        <1>
    12                              <1>         
    13 0000061E 8B442404            <1>         mov     eax, [esp + 4]
    14 00000622 6A046A106A0868-     <1>         cdecl   itoa, eax, .p2, 8, 16, 0b0100
    14 00000629 [DF060000]50E897FE- <1>
    14 00000631 FFFF6683C414        <1>
    15                              <1>         
    16 00000637 8B442408            <1>         mov     eax, [esp + 8]
    17 0000063B 6A046A106A0868-     <1>         cdecl   itoa, eax, .p3, 8, 16, 0b0100
    17 00000642 [F0060000]50E87EFE- <1>
    17 0000064A FFFF6683C414        <1>
    18                              <1>         
    19 00000650 8B44240C            <1>         mov     eax, [esp + 12]
    20 00000654 6A046A106A0868-     <1>         cdecl   itoa, eax, .p4, 8, 16, 0b0100
    20 0000065B [01070000]50E865FE- <1>
    20 00000663 FFFF6683C414        <1>
    21                              <1> 
    22                              <1>         ;---------------------------------------
    23                              <1>         ; 文字列の表示
    24                              <1>         ;---------------------------------------
    25 00000669 68[C7060000]68040F- <1>         cdecl   draw_str, 25, 16, 0x0F04, .s1
    25 00000671 00006A106A19E8B0FB- <1>
    25 0000067A FFFF6683C410        <1>
    26 00000680 68[D8060000]68040F- <1>         cdecl   draw_str, 25, 17, 0x0F04, .s2
    26 00000688 00006A116A19E899FB- <1>
    26 00000691 FFFF6683C410        <1>
    27 00000697 68[E9060000]68040F- <1>         cdecl   draw_str, 25, 18, 0x0F04, .s3
    27 0000069F 00006A126A19E882FB- <1>
    27 000006A8 FFFF6683C410        <1>
    28 000006AE 68[FA060000]68040F- <1>         cdecl   draw_str, 25, 19, 0x0F04, .s4
    28 000006B6 00006A136A19E86BFB- <1>
    28 000006BF FFFF6683C410        <1>
    29                              <1> 
    30                              <1>         ;---------------------------------------
    31                              <1>         ; 無限ループ
    32                              <1>         ;---------------------------------------
    33 000006C5 EBFE                <1>         jmp     $
    34                              <1> 
    35 000006C7 4553502B20303A      <1> .s1     db  "ESP+ 0:"
    36 000006CE 5F5F5F5F5F5F5F5F20- <1> .p1     db  "________ ", 0
    36 000006D7 00                  <1>
    37 000006D8 2020202B20343A      <1> .s2     db  "   + 4:"
    38 000006DF 5F5F5F5F5F5F5F5F20- <1> .p2     db  "________ ", 0
    38 000006E8 00                  <1>
    39 000006E9 2020202B20383A      <1> .s3     db  "   + 8:"
    40 000006F0 5F5F5F5F5F5F5F5F20- <1> .p3     db  "________ ", 0
    40 000006F9 00                  <1>
    41 000006FA 2020202B31323A      <1> .s4     db  "   +12:"
    42 00000701 5F5F5F5F5F5F5F5F20- <1> .p4     db  "________ ", 0
    42 0000070A 00                  <1>
    43                              <1> 
    44                              <1> int_default:
    45 0000070B 9C                  <1>         pushf
    46 0000070C 0E                  <1>         push    cs
    47 0000070D 68[F3050000]        <1>         push    int_stop
    48                              <1> 
    49 00000712 B8[18070000]        <1>         mov     eax, .s0
    50 00000717 CF                  <1>         iret
    51                              <1> 
    52 00000718 203C2020202053544F- <1> .s0     db  " <    STOP    > ", 0
    52 00000721 50202020203E2000    <1>
    59                                  
    60                                  ;************************************************
    61                                  ;   パディング
    62                                  ;************************************************
    63 00000729 00<rept>                        times   KERNEL_SIZE - ($ - $$)      db  0x00
